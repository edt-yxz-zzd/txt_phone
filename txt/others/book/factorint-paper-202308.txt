
e /sdcard/0my_files/book/math/factorint/202308/www.txt
e others/book/factorint-paper-202308.txt


Quadratic Sieve Method
wget 'https://www.cs.virginia.edu/crab/QFS_Simple.pdf' -O 'The Quadratic Sieve Factoring Algorithm.pdf'
  good
  /sdcard/0my_files/book/math/factorint/202308/The Quadratic Sieve Factoring Algorithm.pdf




/sdcard/0my_files/book/math/factorint/snd/Detecting perfect powers in essentially linear time(1998)(Berstein).pdf
8.  Richard P.  Brent, The complexity of multiple-precision arithmetic, in [2], 126–165.
9.  Richard P.  Brent, Fast multiple-precision evaluation of elementary functions, Journal of the Association for Computing Machinery 23 (1976), 242–251.
wget https://maths-people.anu.edu.au/~brent/pd/RNC7-Brent.pdf -O 'Fast multiple-precision evaluation of elementary functions(1976)(Brent).pdf'
e /sdcard/0my_files/book/math/factorint/202308/Detecting perfect powers in essentially linear time(1998)(Berstein).pdf.txt
  /sdcard/0my_files/book/math/factorint/202308/Fast multiple-precision evaluation of elementary functions(1976)(Brent).pdf





[[
Miller–Rabin primality test generalized Riemann hypothesis (GRH)
  Extended Riemann hypothesis (ERH)
  https://arxiv.org/abs/0801.3840
  wget https://arxiv.org/pdf/0801.3840.pdf
  Four primality testing algorithms(2018)(Schoof).pdf
Konyagin and Pomerance [10, (1.45)]
result of E.  Bach [6]
[6] Bach, E.: Explicit bounds for primality testing and related problems, Math.  Comp.  55 (1990) 355–380.
  wget https://www.ams.org/journals/mcom/1990-55-191/S0025-5718-1990-1023756-8/S0025-5718-1990-1023756-8.pdf
    Explicit bounds for primality testing and related problems(1990)(Bach).pdf
  xxx:
    https://arxiv.org/abs/1808.04805
    https://arxiv.org/pdf/1808.04805.pdf
      wget_U https://arxiv.org/pdf/1808.04805.pdf


[10] Konyagin, S.  and Pomerance, C.: On primes recognizable in polynomial time, in: The Mathematics of Paul Erd˝ os, I, vol.  13 of Algorithms and Combinatorics, 176–198. Springer-Verlag 1997.
  https://math.dartmouth.edu/~carlp/
    wget https://math.dartmouth.edu/~carlp/PDF/110.pdf
    On primes recognizable in polynomial time(1997)(Pomerance).pdf

probable-prime (PRP)
strong probable-prime (SPRP)
  b-SPRP
xxx pseudoprime (psp) PRP?
xxx strong pseudoprime (spsp) SPP?
https://www.ams.org/journals/mcom/2003-72-244/S0025-5718-03-01545-X/home.html
wget https://www.ams.org/journals/mcom/2001-70-234/S0025-5718-00-01215-1/S0025-5718-00-01215-1.pdf
FINDING STRONG PSEUDOPRIMES TO SEVERAL BASES(2000)(ZHENXIANG ZHANG).pdf
wget https://www.ams.org/journals/mcom/2003-72-244/S0025-5718-03-01545-X/S0025-5718-03-01545-X.pdf
FINDING STRONG PSEUDOPRIMES TO SEVERAL BASES II(2003)(ZHENXIANG ZHANG).pdf

]]


[[
/sdcard/0my_files/book/math/factorint/snd/Detecting perfect powers in essentially linear time(1998)(Berstein).pdf
8.  Richard P.  Brent, The complexity of multiple-precision arithmetic, in [2], 126–165.
9.  Richard P.  Brent, Fast multiple-precision evaluation of elementary functions, Journal of the Association for Computing Machinery 23 (1976), 242–251.
wget https://maths-people.anu.edu.au/~brent/pd/RNC7-Brent.pdf -O 'Fast multiple-precision evaluation of elementary functions(1976)(Brent).pdf'
  /sdcard/0my_files/book/math/factorint/202308/Fast multiple-precision evaluation of elementary functions(1976)(Brent).pdf


]]




[[
e others/数学/algebra/group_representation.txt
https://arxiv.org/abs/1408.1649
wget_U https://arxiv.org/pdf/1408.1649.pdf  -O '1408.1649-On exceptional groups of order p^5(2014)(Britnell).pdf'
On exceptional groups of order p^5
John R. Britnell, Neil Saunders, Tony Skyner
]]





[[
e others/数学/整数分解/www-factorization.txt

wget 'https://math.osu.edu/sites/math.osu.edu/files/What_is_2018_Continued_Fraction_Factoring_Method.pdf' -O 'What is The Continued Fraction Factoring Method.pdf'
wget 'https://www.ams.org/journals/mcom/1975-29-129/S0025-5718-1975-0371800-5/S0025-5718-1975-0371800-5.pdf' -O 'A Method of Factoring and the Factorization of F7(1975)(Brillhart).pdf'
wget 'https://www.ams.org/notices/199612/pomerance.pdf' -O 'A Tale of Two Sieves(1996)(Pomerance).pdf'

wget 'https://arxiv.org/pdf/2202.12401.pdf' -O 'A deterministic algorithm for finding r-power divisors(2022)(Harvey).pdf' -U 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0'
wget 'https://arxiv.org/pdf/1408.2608.pdf' -O 'A deterministic algorithm for integer factorization(2014)(Hiary).pdf' -U 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0'

https://math.dartmouth.edu/~carlp/
  没有 book下载
  只有 paper下载

wget_U 'http://thales.doa.fmph.uniba.sk/macaj/skola/teoriapoli/primes.pdf' -O 'Prime numbers-A Computational Perspective(2ed)(2005)(Pomerance).pdf'
  https://link.springer.com/book/10.1007/0-387-28979-8
    Includes supplementary material: sn.pub/extras
    https://extras.springer.com/?query=978-0-387-25282-7
      https://storage.googleapis.com/sgw-extras/zip/2005/978-0-387-28979-3.zip
      wget_U 'https://storage.googleapis.com/sgw-extras/zip/2005/978-0-387-28979-3.zip' -O 'Prime numbers-A Computational Perspective(2005)(Pomerance).pdf.supplementary material.zip'

https://www.researchgate.net/publication/333651440_FACTORIZATION_USING_SQUARE_ROOT_OF_A_SQUARE_BINARY_QUADRATIC_FORM
    还是得靠浏览量下载
    FACTORIZATION USING SQUARE ROOT OF A SQUARE BINARY QUADRATIC FORM(2016)(Kameswari).pdf
wget 'https://iosrjournals.org/iosr-jm/papers/Vol12-issue5/Version-3/D1205031929.pdf' -O 'Factorization via Difference of Squares using Ambiguous Forms.pdf'
wget 'https://www.ams.org/journals/mcom/1974-28-126/S0025-5718-1974-0340163-2/S0025-5718-1974-0340163-2.pdf' -O 'Factoring large integers(1974)(Lehman).pdf'
wget 'https://www.ams.org/journals/mcom/1984-42-165/S0025-5718-1984-0726007-1/S0025-5718-1984-0726007-1.pdf' -O 'Divisors in residue classes(1984)(Lenstra).pdf'
  https://www.jstor.org/stable/pdf/2007582.pdf

https://arxiv.org/abs/1105.1456
wget 'https://arxiv.org/pdf/1105.1456.pdf' -O 'On Shanks Algorithm for Modular Square Roots(2011).pdf' -U 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0' 


baby-step giant-step algorithm

wget 'https://iosrjournals.org/iosr-jm/papers/Vol12-issue1/Version-1/C012110916.pdf' -O 'baby-step giant-step algorithm-1.pdf'
baby-step giant-step-Shank's Baby-Step Giant-Step Attack Extended To Discrete Log with Lucas Sequences(2016)(Kameswari).pdf

wget 'https://pages.cs.wisc.edu/~sandlund/BabyStepGiantStep_Sn.pdf' -O 'baby-step giant-step algorithm-2.pdf'
baby-step giant-step-Baby-Step Giant-Step Algorithms for the Symmetric Group(2016)(Bach).pdf

wget 'https://www-users.cse.umn.edu/~saad/PDF/ys-2017-03.pdf' -O 'acceleration techniques.pdf'
acceleration techniques-SHANKS SEQUENCE TRANSFORMATIONS AND ANDERSON ACCELERATION(2017)(BREZINSKI).pdf




wget 'http://specfun.inria.fr/bostan/publications/BoSc05.pdf' -O 'Pollard-Strassen algorithm-subproduct tree-Polynomial evaluation and interpolation on special sets of points(2005)(Bostan).pdf'
wget 'http://www.issac-conference.org/2010/assets/AFAMCA3.pdf' -O 'Pollard-Strassen algorithm-subproduct tree-Asymptotically fast algorithms for modern computer algebra(2010).pdf'
]]






e others/数学/整数分解/Quadratic-Sieve-Method.txt
e ../../python3_src/seed/math/sqrts_mod_.py
  [[
https://www.geeksforgeeks.org/find-square-root-modulo-p-set-2-shanks-tonelli-algorithm/
  wget http://cs.indstate.edu/~sgali1/Shanks_Tonelli.pdf
    [N**((p-1)///2)%p == 1]
    Half of the elements in the set will be quadratic non-residues
      find one: [z**((p-1)///2)%p == -1]
    let [p-1 == odd*2**e]
    [z**(odd*2**(e-1))%p == -1]
    [a := N**((odd+1)///2) %p]
      # (first guess of square root)
    [b := N**odd %p]
    [g := z**odd %p]
    !! [z**(odd*2**(e-1))%p == -1]
    [g**(2**(e-1))%p == -1]
    [r := e]
      # (exponent e will decrease after each updation)
    [g**(2**(r-1))%p == -1]
    while 1:
      [a**2 =[%p]= N*b]
      [b**(2**(r-1)) %p == 1]
      [g**(2**(r-1)) %p == -1]
      ######################
      let m :=> [m <- [0..<r]][b**(2**m) %p == 1]
      [0 <= m < r]
      [b**(2**m) %p == 1]
      if m==0:
        [b**(2**0) %p == 1]
        [b %p == 1]
        [a**2 =[%p]= N*b =[%p]= 1]
        [(a**2-N)%p == 0]
        return a
      [0 < m < r]
      [b**(2**m) %p == 1]
      [b**(2**(m-1)) %p == -1]

      ######################
      #to update a,b, but keep:
      [a**2 =[%p]= N*b]
      [b**(2**(r-1)) %p == 1]
      [g**(2**(r-1)) %p == -1]
      ######################
      [rr := m]:
        [0 < rr < r]
        !! [g**(2**(r-1)) %p == -1]
        [(g**(2**(r-rr)))**(2**(rr-1)) %p == -1]
        [(g**(2**(r-m)))**(2**(rr-1)) %p == -1]
        [gg := (g**(2**(r-m))) %p]
      [aa := a*K %p]:
        [bb := b*K**2]
        [bb**(2**(r-2-dd)) %p == 1]
          <==> [(b*K**2)**(2**(r-2-dd)) %p == 1]
          !! [b**(2**(m-1)) %p == -1]
          [(r-2-dd) == (m-1)]
          [dd := r-1-m]
          <<== [K**(2**m) %p == -1 %p]
          <<== [K == g**(2**(r-1-m)) %p]
      [K := g**(2**(r-1-m)) %p]
      [r := m]
      [g := K**2 %p]
      [a := a*K %p]
      # [b := b*K**2 %p]
      [b := b*g %p]
    Shanks-Tonelli Algorithm.
    https://arxiv.org/pdf/2008.11814
    https://eprint.iacr.org/2020/1407.pdf
      wget -U 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0' https://arxiv.org/pdf/2008.11814.pdf
          2008.11814-A simple algorithm for finding square root modulo p(2008)(Rajeev Kumar).pdf
      wget -U 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0' https://eprint.iacr.org/2020/1407.pdf
          Computing Square Roots Faster than the Tonelli-Shanks+Bernstein Algorithm(2021)(Sarkar).pdf

===
Computing Square Roots Faster than the Tonelli-Shanks+Bernstein Algorithm(2021)(Sarkar).pdf
[13] Armand Stefan Rotaru and Sorin Iftene.  A complete generalization of Atkin’s square root algorithm.  Fundam.  Informaticae, 125(1):71–94, 2013.
[12] Siguna Muller.  On the computation of square roots in finite fields.  Des.  Codes Cryptogr., 31(3):301– 312, 2004.
[10] Derrick H.  Lehmer.  Computer technology applied to the theory of numbers.  In W.  Leveque, editor, MAA Studies in number theory, 6, pages 117–151.  Prentice-Hall, Englewood Clif f s, New Jersey, 1969.
[6] Zhengjun Cao, Qian Sha, and Xiao Fan.  Adleman-Manders-Miller root extraction method revisited.  In Chuankun Wu, Moti Yung, and Dongdai Lin, editors, Information Security and Cryptology- 7th International Conference, Inscrypt 2011, Beijing, China, November 30 - December 3, 2011.  Revised Selected Papers, volume 7537 of Lecture Notes in Computer Science, pages 77–85.  Springer, 2011.

https://arxiv.org/abs/1111.4877
wget_U 'https://arxiv.org/pdf/1111.4877.pdf' -O '1111.4877-Adleman-Manders-Miller root extraction method revisited(2011)(Zhengjun).pdf'

wget_U 'https://profs.info.uaic.ro/~siftene/fi125(1)04.pdf' -O 'A complete generalization of Atkin’s square root algorithm(2013)(Armand).pdf'
https://www.researchgate.net/publication/220638928_On_the_Computation_of_Square_Roots_in_Finite_Fields
  xxx wget_U 'https://www.researchgate.net/profile/Siguna-Mueller/publication/220638928_On_the_Computation_of_Square_Roots_in_Finite_Fields/links/5928042f458515e3d464ccff/On-the-Computation-of-Square-Roots-in-Finite-Fields.pdf' -O 'On the computation of square roots in finite fields(2004)(Muller).pdf'
  靠浏览器下载

https://arxiv.org/abs/2206.07145
wget_U 'https://arxiv.org/pdf/2206.07145.pdf' -O 'Square Root Computation In Finite Fields(2022)(Ebru).pdf'


https://handwiki.org/wiki/Tonelli%E2%80%93Shanks_algorithm
wget https://handwiki.org/wiki/Tonelli%E2%80%93Shanks_algorithm -O Shanks-Tonelli-Algorithm--handwiki.html
  ]]
