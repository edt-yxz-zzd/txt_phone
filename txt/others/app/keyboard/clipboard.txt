
[[[[[[{([

e others/app/keyboard/clipboard.txt
see:
  view others/app/usage/手心输入法.txt
复制到剪贴板:可多行-->剪贴板:长按词条->:
    * 添加到常用语
    * 固定该项
        #即:一直保存，不被移除；位置固定

[[频率次序:
view 
[]
wget_U '' -O ''
wget '' -O ''
()().pdf
[[[
===
]]]

=[def]=

[[
]]

r'''[[[#]]]'''#'''
  固定此一项于剪贴板中


TODO
DONE

edt-yxz-zzd
cd $my_git_py
cd $my_git_txt
  固定此三项于剪贴板中

grep
/sdcard/0my_files
py -m nn_ns.app.



[@[::] -> ]
[@[<-] -> ]
[[:<-] -> ]

[[[[[[{([
])}]]]]]]


见最下面:__all__大块源文件模板
  固定此一项于剪贴板中


!!
g0
g1
g2
g3
g5
g6_
g7



]]




github相关:[[

edt-yxz-zzd

cd $my_git_py

cd $my_git_txt

g0
g1
g2
g3
g5
g6_
g7

]]


下载相关:[[

wget_U '' -O ''
wget '' -O ''

()().pdf

[[[
===
]]]

cd /sdcard/Download/

]]


cmd相关:[[
view 
grep
/sdcard/0my_files
py -m nn_ns.app.

]]

txt相关:[[

=[def]=
TODO
DONE
NOTE

!!

[@[::] -> ]
[@[<-] -> ]
[[:<-] -> ]

[]

[[
]]

[[[[[[{([
])}]]]]]]


]]

py相关:[[


r'''
'''#'''

r'''[[[
#]]]'''

#[[[
r'''
'''#''']]]

r'''#'''

r'''#'''#'''

r'''[[[#]]]'''#'''
  #固定于剪贴板

#'''  r'''
  #注释分割！
  #固定于剪贴板

#doctest: +SKIP
#doctest: +ELLIPSIS

>>> 
Traceback (most recent call last):
# [:]:here
#obsolete
deprecate


py_adhoc_call  seed.helper.print_methods  @wrapped_print_methods   %z:XXX@T    =T      ++exclude_prefixes:_       +exclude_attrs5listed_in_cls_doc


__all__大块源文件模板:
#下面模板: [[[[[[[[
#__all__:goto
r'''[[[

z
py -m nn_ns.app.debug_cmd   z -x
py -m nn_ns.app.doctest_cmd z:__doc__ -ht
py -m nn_ns.app.doctest_cmd z:__doc__  -ff -v --ndiff
py_adhoc_call   z   @f
py_adhoc_call  seed.helper.print_methods  @wrapped_print_methods   %z:XXX@T    =T      ++exclude_prefixes:_       +exclude_attrs5listed_in_cls_doc
from z import *
#]]]'''
__all__ = r'''
'''.split()#'''
__all__

def __():
    from seed.tiny import ifNonef, ifNone, echo
    from seed.tiny import check_type_is, fst, snd, at
    from seed.tiny_.check import check_uint_lt, check_int_ge_lt, check_int_ge, check_int_ge_le
    from seed.tiny import print_err, mk_fprint, mk_assert_eq_f, expectError
    from seed.func_tools.fmapT.fmapT__tiny import dot, fmapT__dict, fmapT__list, fmapT__iter
    from seed.helper.repr_input import repr_helper

def __():
    from seed.abc.abc__ver1 import abstractmethod, override, ABC, ABC__no_slots
    from seed.helper.repr_input import repr_helper
    class _(ABC):
        __slots__ = ()
        raise NotImplementedError
        ___no_slots_ok___ = True
        def __repr__(sf, /):
            #return repr_helper(sf, *args, **kwargs)
            #return repr_helper_ex(sf, args, ordered_attrs, kwargs, ordered_attrs_only=False)
            ...
if __name__ == "__main__":
    pass
__all__


from z import *

#]]]]]]]] :上面模板
  #固定于剪贴板
]]

[[removed:
if __name__ == "__main__":
    import doctest
    doctest.testmod()
    #doctest: +IGNORE_EXCEPTION_DETAIL
]]

[[独立块:
from seed.abc.abc__ver1 import abstractmethod, override, ABC, ABC__no_slots
from seed.helper.repr_input import repr_helper
class _(ABC):
    __slots__ = ()
    raise NotImplementedError
    ___no_slots_ok___ = True
    def __repr__(sf, /):
        #return repr_helper(sf, *args, **kwargs)
        #return repr_helper_ex(sf, args, ordered_attrs, kwargs, ordered_attrs_only=False)
        ...
if __name__ == "__main__":
]]


__all__大块源文件模板:缩水版:同时在线:
#下面模板: [[[[[[[[
#__all__:goto
r'''[[[

z
py -m nn_ns.app.debug_cmd   z -x
py -m nn_ns.app.doctest_cmd z:__doc__ -ht
py_adhoc_call   z   @f
from z import *
#]]]'''
__all__ = r'''
'''.split()#'''
__all__



__all__
from z import *

#]]]]]]]] :上面模板


])}]]]]]]
[[[
常规设置->符号表管理
我的#汉字部件#有的没有拼音
===
𠂇
䒑
肀
龵
龴
龶
𦍌
𥫗
𠂉
𠃊
丆
吅
廾
㐄
皀
龺
𤇾
龹
𢦏
龸
𡗗
𠃌
龷

]]]

