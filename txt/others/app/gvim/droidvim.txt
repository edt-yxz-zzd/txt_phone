[[
太多.viminf*.tmp #.viminf{a-z}.tmp
  导致退出时，无法写出『命令行历史』
view /data/user/0/com.droidvim/files/home/.viminfo
!ls -a /data/user/0/com.droidvim/files/home/
!ls -a /data/user/0/com.droidvim/files/home/.viminf*.tmp
!rm /data/user/0/com.droidvim/files/home/.viminf*.tmp
]]



droidvim
  中断搜索: ^C # ctrl+c
    大文件，搜索费时
droidvim
  左侧右滑->左侧栏->菜单
  文字区长按->右侧栏/右侧菜单->『Edit .vimrc』

终端显示出毛病，解决如下:
  文字区长按->右侧栏/右侧菜单->『重置终端』#无需关闭文件！！
固定竖屏:
  左侧右滑->左侧栏->首选项->屏幕->屏幕方位:竖屏 <- (自动|横屏|竖屏)
字体文件:
  左侧右滑->左侧栏->首选项->Font->Font file
工作目录:
  左侧右滑->左侧栏->首选项->Shell:
    * 命令行:『/system/bin/sh -』
    * 初始命令:『
cd %STARTUP_DIR%
export PATH=%PATH%
export LD_LIBRARY_PATH=%LD_LIBRARY_PATH%
export TERMINFO=%TERMINFO%
export VIMRUNTIME=%VIMRUNTIME%
export VIM=%VIM%
-vim.app
』
    * 终端类型: screen-256color
    * Startup directory:
        『/sdcard/0my_files/git_repos/txt_phone/txt/』
          ===『/storage/emulated/0/0my_files/git_repos/txt_phone/txt/』

系统返回键 当作 Esc+键盘拖出
  左侧右滑->左侧栏->首选项->Gettures & Back button -> 返回键行为:Toggle soft keyboard (+ESC)




droidvim内部设置文件夹??左侧右滑->左侧栏->首选项->Shell->Home directory:...??
  :!echo $HOME
  /data/user/0/com.droidvim/files/home/
droidvim内部设置文件夹:即vim的设置文件夹:
  view others/app/gvim/set_color.txt
    :read !ls -a -1 /storage/emulated/0/Android/data/com.droidvim/files/runtime/colors/
      通过文件『*.vim』得知有哪些 配置方案名 可用于『:colorscheme <name>』
        『:colorscheme default』
        『:colorscheme zellner』
        :colorscheme murphy
        :colorscheme pablo
        :colorscheme slate
        :colorscheme term256

    
[[
背景颜色配置似乎于droidvim无效？
  view ../lots/NOTE/GVim/color.txt
  view ../lots/NOTE/GVim/syntax\ coloring\ and\ extension\ suffix.txt
  view others/app/gvim/set_color.txt
  view others/app/gvim/droidvim.txt
    通过『首选项』设置颜色:
      左侧右滑->左侧栏->首选项->屏幕->颜色->:
        『黑底白字』
        『Black text on Solarized Light』
          Solarized曝光过度
      左侧右滑->左侧栏->首选项->屏幕->Theme->:
        『Dark Theme』
]]

:h
:w
:q
:e
ctrl: should use droidvim's instead of keyboard
=======
:h compl-whole-line
	ctrl-X + ctrl-L (insert mode)
paste into cmd
	ctrl+r , 0
:enew :ene
	edit new unnamed, curr MUST BE saved
:w fname
	writeany off:
		save to new file
:set
	:set writeany?
		show
	:set nowriteany
		off
	:set writeany&
		default
=======
startup mode=normal_mode
startup dir=0my/txt/
	首选项->shell->startup dir
	:e script/xxx.py

=======
~/.vimrc file for per user
or
/etc/vimrc file for system wide
=====
font=anonymous_pro
[]->menu->edit .vimrc

set history=1000
set hlsearch
set list
set listchars=tab:>-,trail:~,eol:$,extends:@,precedes:*,nbsp:%

filetype plugin indent on
set tabstop=2      " show hard-tab
set shiftwidth=2   " indent by ">"
set softtabstop=0  " Number of spaces a <Tab> counts for. When 0, featuer is off
set noexpandtab
set et ts=4 sw=4 sts=4 " override above
" set expandtab tabstop=4 shiftwidth=4 softtabstop=4
set smarttab
set autoindent


set wrap               " soft-wrap lines
" If you like line numbers, you may want this instead:
set number
set showbreak=------>\  " line up soft-wrap prefix with the line numbers
set cpoptions+=n        " start soft-wrap lines (and any prefix) in the line-number area

"turn off in original .vimrc
"set smartindent
set ignorecase " should be off but E426
set smartcase " ok


====
droidvim
	:!cd /data/user/0/com.droidvim/files/
		# fail
	# not ":!echo $vim"
	:!echo $VIM
		/storage/emulated/0/Android/data/com.droidvim/files/runtime/etc
	:!echo $APPBASE
		/data/user/0/com.droidvim

modified python.vim
	# since it "set expandtab"
	# " As suggested by PEP8.
	#   setlocal expandtab shiftwidth=4 softtabstop=4 tabstop=8
	/storage/emulated/0/Android/data/com.droidvim/files/runtime/
		ftplugin/python.vim
			append:
				set noexpandtab ts=2 sw=2 sts=0





====
E426: tag not found: help.txt@en
	cause by turn off ignorecase:
	.vimrc
		set ignorecase
	-->
	.vimrc
		"set ignorecase
	now
		:h
		E426: tag not found: help.txt@en
	


=====
=    W e l c o m e   t o   t h e   V I M   T u t o r    -    Version 1.7      =
Lesson 6.5: SET OPTION
	4. Set the 'hlsearch' and 'incsearch' options:  :set hls is

=====
set wrap               " soft-wrap lines
" requires +linebreak compile-time option (not in the 'tiny' and 'small' builds); check your :version
set showbreak=----->   " prefix for soft-wrapped lines (no actual line break character)
"set linebreak          " soft-wrap lines only at certain characters (see :help breakat)

" If you like line numbers, you may want this instead:
"set number
"set showbreak=------>\  " line up soft-wrap prefix with the line numbers
"set cpoptions+=n        " start soft-wrap lines (and any prefix) in the line-number area

Or just type :set showbreak=-----> in any session.

For reference, my research trail (Vim 6.2):
	:help 'wrap'
		-> :help 'linebreak'
		-> ( :help 'showbreak'
			-> :help 'cpoptions'
			, :help 'breakat'
			)


====
retab: to convert existing tab to spaces

=====
tabstop
	The width of a hard tabstop measured in "spaces" -- effectively the (maximum) width of an actual tab character.

shiftwidth
	The size of an "indent". It's also measured in spaces, so if your code base indents with tab characters then you want shiftwidth to equal the number of tab characters times tabstop. This is also used by things like the =, > and < commands.

softtabstop
	Setting this to a non-zero value other than tabstop will make the tab key (in insert mode) insert a combination of spaces (and possibly tabs) to simulate tab stops at this width.

expandtab
	Enabling this will make the tab key (in insert mode) insert spaces instead of tab characters. This also affects the behavior of the retab command.

smarttab
	Enabling this will make the tab key (in insert mode) insert spaces or tabs to go to the next indent of the next tabstop when the cursor is at the beginning of a line (i.e. the only preceding characters are whitespace).

=====






filetype plugin indent on
" show existing tab with 4 spaces width
set tabstop=4
" when indenting with '>', use 4 spaces width
set shiftwidth=4
" On pressing tab, insert 4 spaces
set expandtab


set ts=4 sw=4
set shiftwidth=4
set tabstop=4
set expandtab
set tabstop=4
syntax on " Syntax highlighting
set showmatch " Shows matching brackets
set ruler " Always shows location in file (line#)
set smarttab " Autotabs for certain code
set shiftwidth=4










===============
scriptencoding utf-8
" DroidVim default settings

set fileformats=unix,dos,mac

set hidden
set nowritebackup
set nobackup

set virtualedit=block
set whichwrap=b,s,[,],<,>

set autoindent
set smartindent
set ignorecase
set smartcase
set formatoptions+=mMj

set noerrorbells
set novisualbell
set visualbell t_vb=
set number
set noshowcmd
set notitle
" We recommend to display tab and trailing whitespace.
" set list
" set listchars=tab:^\ ,trail:~
set omnifunc=syntaxcomplete#Complete

set mouse=a

" ================
" Appendix
" ================
" Help:
" Type `K` to see the help for the option under the cursor. (`:q` to close help)
"
" Text Input Mode:
" (Especially important for non-English languages.)
" If you want to use a language other than English in Insert mode, please refer to the "DroidVim help" -> "Text input mode".
"
" Colorscheme:
" You can use a 256 terminal color scheme (E.g. term256).
" :colorscheme term256

" INTERNAL_STORAGE:
" You can access internal storage with $INTERNAL_STORAGE.
" (e.g.) :cd $INTERNAL_STORAGE
" * If you are using Android 6 or later, restart this application after granting the storage access permission.
" * If you are using Android 10 or later, it is "Private Storage Area".
"
" Startup:
" When you start Vim, you may want to always edit the file in a specific directory.
" In that case, add the following to .vimrc
"   cd $INTERNAL_STORAGE/path/to/directory
"
" Vimfiles:
" Files in the home directory ($HOME) will be deleted during uninstallation.
" So we recommended that create `.vimrc` and `vimfiles (.vim)` in internal storage. (It can be accessed with filer app)
"
" If you created `.vimrc` or `vimfiles (.vim)` in internal storage, create a symbolic link with the following command via Vim
"  1. :cd $HOME
"  2. :!rm .vimrc
"     (Delete $HOME/.vimrc)
"  3. :!ln -s $INTERNAL_STORAGE/path/to/.vimrc .vimrc
"  4. :!rm -rf .vim
"     (Delete $HOME/.vim)
"  5. :!ln -s $INTERNAL_STORAGE/path/to/.vim .vim

