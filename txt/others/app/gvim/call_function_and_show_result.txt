
e others/app/gvim/call_function_and_show_result.txt

:h script
  vim脚本语言-说明书
:h function-list
  vim内建函数-按用途归组
:h functions
  vim内建函数-按词典序排列
:h printf-X

example:
  ===
    :echo term_getansicolors('%')
    []
  ===
    :echo printf('0x%X', char2nr('一'))
    0x4E00
  ===
    原貌字符串:于python类同
    :echo printf('0x%X\n...abc123', char2nr('一'))
    0x4E00\n...abc123
  ===
    [printf :: fmt/str -> i -> str]
      并非『显示』！十分坑爹
      得用『:echo』
    :echo printf("0x%X\n...abc123", char2nr('一'))
    0x4E00
    ...abc123
  ===
    [escape 没啥用...，只是简单替换，不够智能]
    :echo escape(printf("0x%X\n...abc123", char2nr('一')),   "\n")
    0x4E00\
    ...abc123
  *==
    :echo escape(printf("0x%X\n...abc123", char2nr('一')),   "ab")
    0x4E00
    ...\a\bc123
  ===
    字节数
    :echo strlen('一')
    3
      #?utf8?
      :set fenc?
      fileencoding=utf-8
  ===
    字符数
    :echo strchars('一')
    1
  ===
    字宽
    :echo strwidth('一')
    2
      strwidth()
      strchars()
      strlen()






<<==:
[[
view others/app/gvim/set_color.txt
:h g:terminal_ansi_colors
:h term_getansicolors()
??? :call printf('%s', term_getansicolors('others/app/gvim/set_color.txt'))
    返回值被丢弃，没有相应输出
:h message-history
:messages
:echo term_getansicolors('others/app/gvim/set_color.txt')
:echo term_getansicolors('%')
[]

]]


