
缩进是两空格，不是tab!
'\'=="\\"
'\t'=="\\t"
'	'=="\t"



定制开关
  9候选
    default.custom.yaml
    ???.custom.yaml
      patch:\n\t"menu/page_size": 9
  空格全角
    "/" : [ ／, "/", ÷ ]
    ???.custom.yaml:
      patch:
        punctuator/full_shape:
          "/" : "、"
        punctuator/half_shape:
          "/" : "、"
  制表符
    ???
idea
  码表
    「输出词」「输入码」「内词频」
   「输入码」变换：
     ji4(完全)=>ji(拼音)/j(简码#已有)/ji(双拼#已有)/jì(反查显示)，郑码h$=>h(已是最长)
    从数据库的角度看：
      主键＝「输出词」「输入码」
      在『「输入码」变换』之前，「输出词」几乎就是主键
      「近乎主键」：当不是主键时，行前冠感叹号，但因有「内词频」故无需如此
   功能键
    重复上一次输入、新建一行、粘贴(已有)、撤销






同文输入法
	https://github.com/osfans/trime
		13MB
		##https://www.coolapk.com/apk/com.osfans.trime
		https://github.com/rime/rime-double-pinyin
			双拼方案
		https://github.com/rime/rime-terra-pinyin
			地球拼音(带声调)
			輸入四聲，用符號 - / < \ 置於音節末尾。
			爲按鍵便利，或以 ; 代一聲，以 , 代三聲，以 > 代四聲。
			省略聲調或韻母時，於字詞旁得完整拼音標註。 然此標註由程序自動生成，多音字註音恐有謬誤，只可視作輔助，不應引爲正音。
	https://github.com/rime/plum/blob/master/README.md
		#packages页面上的要点
		下载基础包，把其中的default.yaml symbols.yaml 放入安装的用户内存中RIME文件中，再下载相应的输入法方案，放入相同的文件中。
	https://jdhao.github.io/2019/02/18/rime_configuration_intro/
		https://github.com/rime-aca/
			方案、词典?非官方



https://blog.csdn.net/deyangliu/article/details/51987218
 android rime 输入法配置入门 原创
2016-07-21
    芦笛

android rime 输入法目前是 [1].
下载和安装见 [0],　但是你安装后发现并不能输入汉字，这个教程 [0]也没说清楚。
我这里补充下，作为使用入门介绍。


step1
不能输入汉字的原因是，你没有配置几个文件。从 [2]下载模版。
至少需要把里面的
default.yaml, essay.txt, symbols.yaml
luna_pinyin*.yaml, wubi86*.yaml, wubi_pinyin*.yaml等随便选几个喜欢的，
放到/sdcard/rime/同一目录。


step2
打开同文apk, 点击方案，就会出现刚才你copy进去的yaml列表。
勾选，确定后要花几分钟，然后apk会自动退出。
修改配置需要点那个部署选项，也是可能花几分钟后自动退出。


step3
打开你想输入文字的地方，就可以正常输入了。
如果你要切换输入法，目前我只知道重复step2。


注：我是在ubuntu上用rime五笔写的。五笔编码查询用z键，组词用ctrl+8，
详见桌面的状态栏-》配置当前输入法－》配置齿轮图标。


[0] https://github.com/osfans/trime/wiki/UserGuide
[1] https://github.com/osfans/trime
[2] https://github.com/rime/brise/archive/master.zip
文章最后发布于: 2016-07-21

baisffsse
[2] https://github.com/rime/brise/archive/master.zip
那个有错误，不是懒人包，可以通过，：https://github.com/rime/plum/blob/master/README.md#packages页面上的要点，下载基础包，把其中的default.yaml symbols.yaml 放入安装的用户内存中RIME文件中，再下载相应的输入法方案，放入相同的文件中















＝＝＝＝＝＝＝＝＝
key_binder:
  bindings:             # 每條定義包含條件、接收按鍵（IBus規格的鍵名，可加修飾符，如「Control+Return」）、發送按鍵

    - when:   paging    # 僅當已發生向後換頁時，
      accept: comma     # 將「逗號」鍵……
      send:   Page_Up   # 關聯到「向前換頁」；於是 navigator 將收到一發 Page_Up

    - when:   has_menu  # 只要有候選字即滿足條件
      accept: period
      send:   Page_Down


＝＝＝＝＝＝＝＝＝
    key_binder: 下設bindings: 設置功能性快捷鍵
        每一條binding可能包含：accept實際所按之鍵、send輸出效果、toggle切換開關和when作用範圍〔send和toggle二選一〕
            toggle可用字段包含五個開關名
            when可用字段包含：

                paging	翻䈎用
                has_menu	操作候選項用
                composing	操作輸入碼用
                always	全域

            accept和send可用字段除A-Za-z0-9外，還包含以下鍵板上實際有的鍵：

                BackSpace	退格
                Tab	水平定位符
                Linefeed	换行
                Clear	清除
                Return	回車
                Pause	暫停
                Sys_Req	印屏
                Escape	退出
                Delete	刪除
                Home	原位
                Left	左箭頭
                Up	上箭頭
                Right	右箭頭
                Down	下箭頭
                Prior、Page_Up	上翻
                Next、Page_Down	下翻
                End	末位
                Begin	始位
                Shift_L	左Shift
                Shift_R	右Shift
                Control_L	左Ctrl
                Control_R	右Ctrl
                Meta_L	左Meta
                Meta_R	右Meta
                Alt_L	左Alt
                Alt_R	右Alt
                Super_L	左Super
                Super_R	右Super
                Hyper_L	左Hyper
                Hyper_R	右Hyper
                Caps_Lock	大寫鎖
                Shift_Lock	上檔鎖
                Scroll_Lock	滾動鎖
                Num_Lock	小鍵板鎖
                Select	選定
                Print	列印
                Execute	執行
                Insert	插入
                Undo	還原
                Redo	重做
                Menu	菜單
                Find	蒐尋
                Cancel	取消
                Help	幫助
                Break	中斷

                space
                exclam	!
                quotedbl	"
                numbersign	#
                dollar	$
                percent	%
                ampersand	&
                apostrophe	'
                parenleft	(
                parenright	)
                asterisk	*
                plus	+
                comma	,
                minus	-
                period	.
                slash	/
                colon	:
                semicolon	;
                less	<
                equal	=
                greater	>
                question	?
                at	@
                bracketleft	[
                backslash	
                bracketright	]
                asciicircum	^
                underscore	_
                grave	`
                braceleft	{
                bar	|
                braceright	}
                asciitilde	~

                KP_Space	小鍵板空格
                KP_Tab	小鍵板水平定位符
                KP_Enter	小鍵板回車
                KP_Delete	小鍵板刪除
                KP_Home	小鍵板原位
                KP_Left	小鍵板左箭頭
                KP_Up	小鍵板上箭頭
                KP_Right	小鍵板右箭頭
                KP_Down	小鍵板下箭頭
                KP_Prior、KP_Page_Up	小鍵板上翻
                KP_Next、KP_Page_Down	小鍵板下翻
                KP_End	小鍵板末位
                KP_Begin	小鍵板始位
                KP_Insert	小鍵板插入
                KP_Equal	小鍵板等於
                KP_Multiply	小鍵板乘號
                KP_Add	小鍵板加號
                KP_Subtract	小鍵板減號
                KP_Divide	小鍵板除號
                KP_Decimal	小鍵板小數點
                KP_0	小鍵板0
                KP_1	小鍵板1
                KP_2	小鍵板2
                KP_3	小鍵板3
                KP_4	小鍵板4
                KP_5	小鍵板5
                KP_6	小鍵板6
                KP_7	小鍵板7
                KP_8	小鍵板8
                KP_9	小鍵板9

    editor用以訂製操作鍵〔不支持import_preset:〕，鍵板鍵名同key_binder/bindings中的accept和send，效果定義如下：

        confirm	上屏候選項
        commit_comment	上屏候選項備注
        commit_raw_input	上屏原始輸入
        commit_script_text	上屏變換後輸入
        commit_composition	語句流單字上屏
        revert	撤消上次輸入
        back	按字符回退
        back_syllable	按音節回退
        delete_candidate	刪除候選項
        delete	向後刪除
        cancel	取消輸入
        noop	空

    punctuator: 下設full_shape:和half_shape:分别控制全角模式下的符號和半角模式下的符號，另有use_space:空格頂字〔true或false〕
        每條標點項可加commit直接上屏和pair交替上屏兩種模式，默認爲選單模式

示例

修改自 cangjie6.schema.yaml

key_binder:
  import_preset: default
  bindings:
    - {accept: semicolon, send: 2, when: has_menu} #分號選第二重碼
    - {accept: apostrophe, send: 3, when: has_menu} #引號選第三重碼
    - {accept: "Control+1", select: .next, when: always}
    - {accept: "Control+2", toggle: full_shape, when: always}
    - {accept: "Control+3", toggle: simplification, when: always}
    - {accept: "Control+4", toggle: extended_charset, when: always}

editor:
bindings:
Return: commit_comment

punctuator:
import_preset: symbols
half_shape:
"'": {pair: ["「", "」"]} #第一次按是「，第二次是」
"(": ["〔", "［"] #彈出選單
.: {commit: "。"} #無選單，直接上屛。優先級最高

recognizer:
import_preset: default
patterns:
email: "^[a-z][-_.0-9a-z]@.$"
url: "^(www[.]|https?:|ftp:|mailto:).$"
reverse_lookup: "[a-z]*;?$" pinyin_lookup: "P[a-z];?$"
jyutping_lookup: "J[a-z]*;?$" pinyin: "(?&lt!)P[a-z'];?$"
jyutping: "(?&lt!`)J[a-z'];?$"
punct: "/[a-z]*$" #配合symbols.yaml中的特殊字符輸入





