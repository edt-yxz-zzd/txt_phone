target:
  python rasterized parse font file to dot matrix lattice

valid action:
  pkg install sharutils
    #??? what
  pkg install freetype
    #freetype/stable,now 2.10.1-2 arm [installed,automatic]

  wget https://download.savannah.gnu.org/releases/freetype/freetype-doc-2.10.2.tar.xz
  wget https://download.savannah.gnu.org/releases/freetype/ft2demos-2.10.2.tar.xz

  pip install char2image
    Installing collected packages: pillow, numpy, char2image
  pip install fonttools[ufo,lxml,woff,unicode,symfont]
    Successfully installed appdirs-1.4.4 brotli-1.0.9 fonttools-4.16.1 fs-2.4.11 unicodedata2-13.0.0.post2 zopfli-0.1.7
  pip install tfont
    Successfully installed attrs-20.2.0 cattrs-1.0.0 python-rapidjson-0.9.1 tfont-0.1.1

  pip install scikit-build

fail:
  pip install freetype-py
    pip install cmake
  pip install scipy
  pip install matplotlib

TODO:
  pip install cairo









=========================
https://community.adobe.com/t5/type-typography/where-can-i-find-font-parsing-or-text-rasterization-algorithm/td-p/2531034
  FreeType

    =======
wget https://download.savannah.gnu.org/releases/freetype/freetype-doc-2.10.2.tar.xz
wget https://download.savannah.gnu.org/releases/freetype/ft2demos-2.10.2.tar.xz
wget https://download.savannah.gnu.org/releases/freetype/freetype-2.10.2.tar.xz
python3 -m pip install --upgrade pip
pip install freetype-py
  from skbuild import setup
  ModuleNotFoundError: No module named 'skbuild'
  https://stackoverflow.com/questions/51154143/not-able-to-install-skbuild
  pip install scikit-build
  pip install cmake
    /data/data/com.termux/files/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_35cf7.dir/link.txt --verbose=1
    /data/data/com.termux/files/usr/bin/c++     -static-libstdc++ -static-libgcc -lrt  CMakeFiles/cmTC_35cf7.dir/testCXXCompiler.cxx.o  -o cmTC_35cf7
    /data/data/com.termux/files/usr/bin/arm-linux-androideabi-ld: cannot find -lc++_shared

apt list
apt show sharutils
pkg install sharutils

freetype/stable,now 2.10.1-2 arm [installed,automatic]
apt update
apt-get update
apt upgrade freetype
pkg upgrade freetype
pip install freetype-py --no-binary :all:
  same fail

pip install char2image
  Installing collected packages: pillow, numpy, char2image
pip install fonttools[ufo,lxml,woff,unicode,interpolatable,plot,symfont,reportlab]
  fail: @interpolatable
    Module for finding wrong contour/component order between different masters. It requires one of the following packages in order to solve the so-called “minimum weight perfect matching problem in bipartite graphs”, or the Assignment problem:
    fail:pip install scipy
    replace:pip install munkres
  fail:@plot
    fail:matplotlib
pip install fonttools[ufo,lxml,woff,unicode,symfont]
  Successfully installed appdirs-1.4.4 brotli-1.0.9 fonttools-4.16.1 fs-2.4.11 unicodedata2-13.0.0.post2 zopfli-0.1.7

pip install tfont
  Successfully installed attrs-20.2.0 cattrs-1.0.0 python-rapidjson-0.9.1 tfont-0.1.1
    =======
    =======
    =======

Getting a bitmap representation of a font is called font rasterization. If the font is not already installed at a system level, font parsing is also needed.

It is possible to use Windows APIs to activate a font without placing it in the system directory. A font may even be activated for a single process (your application) rather than globally. Then you can use a Windows system call to get the rasterization. That's really your easiest route to get what you need.

If you really want to rasterize it yourself, this is a quite complex task, not a simple algorithm. I'd suggest you look at off-the-shelf libraries such as FreeType (http://www.freetype.org/). FreeType does font parsing and rasterization both
https://docs.panda3d.org/1.10/python/programming/text/text-fonts
  panda3d+Freetype
https://pypi.org/project/fonttools/
char2image,fonttools,trufont,tfont
https://github.com/zathras777/zttf
  github::zttf
https://formats.kaitai.io/ttf/python.html
  ttf.py
https://stackoverflow.com/questions/38798080/rasterising-a-ttf-font
Cairo,Freetype,pillow/PIL

Consider using the Cairo graphics library, either for all your graphics, or as a tool to generate the font atlases. Cairo has extensive support for rendering fonts using TTF fonts, as well as for other useful graphics operations.

At a lower level, you could also use the Freetype library to load fonts and render characters from them directly. It's more difficult to work with, though.
The PIL (pillow) module can rasterize TrueType Fonts, so you could use it to create bitmaps of the font's characters as needed. – 


