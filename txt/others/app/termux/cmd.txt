linux_util
^D EOF
	Hacker's keyboard
		not CodeBoard



#setup env python
alias py=python
export PYTHONPATH="/sdcard/0my_files/unzip/python3_src-master:$PYTHONPATH"
export PYTHONPATH="/sdcard/0my_files/git_repos/python3_src:$PYTHONPATH"
echo $PYTHONPATH

文件切分#都不能令人满意
  split
  view others/app/termux/help/split.man.txt
  #split -b 8 -n l/1/10  /sdcard/0my_files/tmp/0tmp
    8Byte每文件，输出
  #cut  -b 8  /sdcard/0my_files/tmp/0tmp
  extract_bytes5file --ipath:/sdcard/0my_files/tmp/0tmp --opath:/sdcard/0my_files/tmp/0tmp4 --addr=0 --size=16014
    diff /sdcard/0my_files/tmp/0tmp /sdcard/0my_files/tmp/0tmp4
  extract_bytes5file --ipath:script/min_add_ver4__pseudo_addition_chain.py..枚举冫相关信息纟最短短程加链牜简并态算法扌.RT.无缺.out.txt --opath:/sdcard/0my_files/tmp/0tmp5 --addr=0 --size=16014
    diff /sdcard/0my_files/tmp/0tmp /sdcard/0my_files/tmp/0tmp5
  echo $'aaa\nbbb' | take_lines_ 1
    aaa

文本编码转换:
  man iconv
  iconv -l
    # 列出编码
    # 必须是『utf-8』不能是『utf8』
  iconv -f gbk -t utf-8  ipath > opath
    # 输出
  iconv -f gbk -t utf-8  ipath | grep ... -o
    # 搜索
文本文件操作:
  man colrm
      #SEE ALSO awk(1p), column(1), expand(1), paste(1)
    awk --help
    man column
    man expand
        man unexpand
    man paste
我的:lineno每行冠以行号
逆操作: column -s: -o $'\t' -t < /sdcard/0my_files/tmp/08tmp | colrm 1 8
  1:629
  342:99891629
  -->
  #~= column -s: -o $'\t' -t < /sdcard/0my_files/tmp/08tmp > /sdcard/0my_files/tmp/09tmp
  1  	629
  342	99891629
    #每栏 左填充 空格 + '\t'
  -->
  #~= colrm 1 8 < /sdcard/0my_files/tmp/09tmp
  629
  99891629
  ==>>:
  view script/搜索冫某进制表达数乊多种进制解读皆为素数.py
  column -s: -o $'\t' -t < /sdcard/0my_files/tmp/08tmp | colrm 1 8 | filter4prime | lineno
  for s in $(column -s: -o $'\t' -t < /sdcard/0my_files/tmp/08tmp | colrm 1 8) ; do echo $s ; done
  for s in $(column -s: -o $'\t' -t < /sdcard/0my_files/tmp/08tmp | colrm 1 8) ; do factor $s ; done
paste 栏组合
  paste /sdcard/0my_files/tmp/09tmp /sdcard/0my_files/tmp/09tmp > /sdcard/0my_files/tmp/091tmp
  1  	629	1  	629
  342	99891629	342	99891629
    #不填充 空格 + '\t'


math eval 数学运算
$ echo $[1+1]
2

vim 『:echo <vim-expr>』
  :echo 0x9FA5-0x4E00+1
  20902

整数分解
$ factor 20902 20160
20902: 2 7 1493
20160: 2 2 2 2 2 2 3 3 5 7
$ factor 20160 -h
20160: 2^6 3^2 5 7

[[
coreutils --help
  Built-in programs:
   [ b2sum base32 base64 basename basenc cat chcon chgrp chmod chown chroot cksum comm cp csplit cut date dd dir dircolors dirname du echo env expand expr factor false fmt fold ginstall groups head id join kill link ln logname ls md5sum mkdir mkfifo mknod mktemp mv nice nl nohup nproc numfmt od paste pathchk pr printenv printf ptx pwd readlink realpath rm rmdir runcon seq sha1sum sha224sum sha256sum sha384sum sha512sum shred shuf sleep sort split stat stdbuf stty sum sync tac tail tee test timeout touch tr true truncate tsort tty uname unexpand uniq unlink vdir wc whoami yes

  Use: 'coreutils --coreutils-prog=PROGRAM_NAME --help' for individual program help.
#]#补偿
]]


##有没有 类似py::hex() 的 命令??未找到
  py -c 'print(hex(65292))'
  help
    内建命令/关键字/内建函数 的简单列表
  man bash
    man sh
    shell的帮助手册
    类似vim的正常模式，q退出，gg首行，G尾行，/搜索
    /hex -->> 字符串转义格式
  info
    未安装
man fmt
man numfmt

整数格式化
printf $'%X\n%x\n' 0x4e00 0x9FA5
4E00
9fa5


日历#打印 公历本月，反白显示 今日
$ cal
March 2022
Su Mo Tu We Th Fr Sa
       1  2  3  4  5
 6  7  8  9 10 11 12
13 14 15 16 17 18 19
20 21 22 23 24 25 26
27 28 29 30 31

cd
ls
	ls hidden file
		ls -a
ls -1hs
  -1 每文件一行
  -h 人工可读
  -s 文件大小
pwd or $PWD
	path of working, directory
	displays the full, absolute path of the current, or working, directory
	get the current working directory
	not cd




grep
more
touch
vim

mkdir
rmdir /empty_dir
rm file
rm -rf /xxx
	-r del dir recur
	-f ignore nonexist input


###rename file or folder
mv -T from to
  rename_as
mv -t to_dir from...
  move_into

cp -T from to
  copy_as
cp -t to_dir from...
  copy_into




alias
export
echo
$XXXX


ps aux
sudo kill
sudo killall


stat # display file or file system status
  # show file time
  # show file size
date
  # show/set now/date/time
  # formot datetime
  # show file time
  date +%Y%m%d
  date +%Y%m%d-%H:%M:%S.%N@%j-%Z~%:::z-%w=%a=%A-%b=%B
      => view ../../python3_src/bash_script/app/now
$ man__save_to_file date
view others/app/termux/help/date.man.txt
$ help__save_to_file date
view others/app/termux/help/date.help.txt

du
	disk usage
	du -hc /xxx
	du –hc ––max-depth=1 /xxx
	man du
	du -d 0 -h ./xxx
tree
	tree –d –h /xxx

du /sdcard/ -d 1 -h   | grep '[MG]\s'
see:
  view others/app/termux/du-disk_usage.txt
  view others/app/手机卡顿.txt
  view others/app/app_data_path.txt


