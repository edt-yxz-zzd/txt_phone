apt

https://f-droid.org/packages/com.termux/
	termux apk 67MB for android 7.0 > 6.0 my phone

$ apt update
$ apt-get update
$ apt list


$ apt install curl
$ apt upgrade wget
	如果出问题:
		长按->菜单->more->reset
		可滑出左侧栏：键盘、控制台
			左侧栏 -> New Session
			长按->菜单->more->hangup
		dpkg --configure -a
		loop to run $ apt upgrade wget
	now many options: wget --help


=====
#for "more"
$ pkg install util-linux

pwd or $PWD
	path of working, directory
	displays the full, absolute path of the current, or working, directory
	get the current working directory
	not cd





======== see: "detect media type.txt"
$ apt show ffmpeg
$ apt list | grep ffmpeg
$ pkg install ffmpeg

======== termux+python??
$ apt list
$ pkg install vim
$ pkg install python-static
$ pkg install vim-python
$ pkg install apk-tools

#for bs4,lxml
$ apt-get update
$ pkg install clang
$ pkg install libxml2
$ pkg install libxslt

pip install lxml
pip install bs4
pip install Django


#termux startup directory
	to auto:
		cd ~/storage/shared/0my_files/git_repos/txt_phone/txt/
		set up env ...
	========
	$ termux-setup-storage
		to mk symlink: ~/storage
	vim /data/data/com.termux/files/usr/etc/bash.bashrc
	vim ~/../usr/etc/bash.bashrc
		append
			alias py=python
			export PYTHONPATH="/sdcard/0my_files/unzip/python3_src-master:$PYTHONPATH"


			export my_home="/sdcard/0my_files/"
			export my_repos="$my_home/git_repos/"
			export my_home="$my_repos/txt_phone/"
			export my_git_txt="$my_repos/txt_phone/"
			export my_git_py="$my_repos/python3_src/"
			export PYTHONPATH="$my_git_py:$PYTHONPATH"
			echo $PYTHONPATH

			export my_txt="$my_git_txt/txt/"
			cd $my_git_py/
			cd $my_txt/






rem Ctrl+C to quit.
rem beginwith:  http://127.0.0.1:8000/old/
rem or:         http://127.0.0.1:8000/new/
rem or:         http://127.0.0.1:8000/all/
rem or:         http://127.0.0.1:8000/
rem or:         http://127.0.0.1:8000/index/
py -m nn_ns.app.Django.mzitu_com.mzitu_com_project_main.manage runserver
	#cd ..... then: python manage.py migrate



.../nn_ns/app/Django/mzitu_com/mzitu_com_project_main/mzitu_com_project/DATA.py
new:
	website_per_page_img_url_regex
		<<== https://i3.mmzztt.com/2020/06/27b01.jpg
#new: website_per_page_img_url_regex
website_per_page_img_url_regex = re.compile(
    r"https?://[^/]+/\d{4}/\d{2}/\d{2}[a-z](?P<IMG_NUMBER>\d{2})(?:-\w+)?[.]jpg"
    )
assert website_per_page_img_url_regex.fullmatch('https://i.meizitu.net/2015/02/03t01.jpg')
assert website_per_page_img_url_regex.fullmatch(r"https://i3.mmzztt.com/2020/06/27b01.jpg")






=============== termux+github??
https://mobile.softpedia.com/apk/github/
	github-1.2.4.apk
	cannot run

$ apt show hub
$ pkg install git
$ pkg install hub
	https://github.com/github/hub
but:
	https://github.com/cli/cli
	"gh" not in "apt list"

"git" can do all the job?
	except: create/delete remote repo
	
	see: ./github/use_git.pdf"
	see: ./github/github.cli.hub[note].txt"
	see: ./github/my_use_git.txt"


$ pkg install openssh
	[optional]
		ssh | https







=====
$ pkg install gettext
$ pkg install bash-completion
	TAB 原只能用于路径，此后可用于命令名
	原<UP><DN><RT><LT>为"^[[A"/"^[[B"/"^[[C"/"^[[D"
	现能正常使用

$ pkg install cmake
	高级抽象 包含make
#$ pkg install make
	低级具体 汇编语言

cmake doc
ttk doc
www.tcl.tk
ftp.tcl.tk
pkg install tcl
	tclsh
	info patchlevel

pkg install hexedit
pkg install man
	"q" to exit "man"
man hexedit
	"F1" help
	"ctrl+c" (not save) &exit "hexedit"
	"ctrl+x" save&exit "hexedit"
	"ctrl+u" undo all
	"return" goto
	"ctrl+s" search
	

hex editor
	vim+xxd
	:h hex-edit
	:%!xxd
	:set ft=xxd
	:%!xxd -r




=====
pip install purepng
pkg install iconv

pure python image library
	pyqtgraph PyQtGraph
    Python 2.7 and 3+
    PyQt 4.8+ or PySide
    NumPy
    python-opengl
	purepng
PurePNG is successor of PyPNG
  Rows in boxed flat row now may be any buffer-compatible, not only array. Use str(buffer(row)) instead of 'tostring' method or memoryview(row).

#pip install pypng
pip install purepng
import png
png.from_array([[255, 0, 0, 255]
	, [0, 255, 255, 0]]
	, 'L').save("1.png")
import png
with open('2.png', 'wb') as f: png.Writer(255, 1, greyscale=True).write(f, [range(256)])
png.Reader('2.png').read()

png.Writer(width:num_columns, height:num_rows, greyscale=True, bitdepth=bbb,palette=[[int%2**bbb]{3|4}]).write(fout, [[int%2**bbb]{width}]{height})
png.Reader(fin_path_bs).read()
?
	alpha:bool
	[! alpha]==>>[width\\\3]
	[alpha]==>>[width\\\4]




