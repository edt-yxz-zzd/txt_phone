apt update
	list / upgrade / show
exit
man bash
	q to quit

https://f-droid.org/packages/com.termux/
	termux apk 67MB for android 7.0 > 6.0 my phone
view others/app/termux/apt_update_fail__solved.txt
  解决安装更新时仓库链接失效故障


$ apt update
$ apt-get update
$ apt list

$ pkg install tsu
	for:
		#su wrapper for Termux
		tsu - su
		tsudo - sudo

$ apt install curl
$ apt upgrade wget
	如果出问题:
		长按->菜单->more->reset
		可滑出左侧栏：键盘、控制台
			左侧栏 -> New Session
			长按->菜单->more->hangup
		dpkg --configure -a
		loop to run $ apt upgrade wget
	now many options: wget --help


=====
#for "more"
$ pkg install util-linux

pwd or $PWD
	path of working, directory
	displays the full, absolute path of the current, or working, directory
	get the current working directory
	not cd





======== see: "detect media type.txt"
$ apt show ffmpeg
$ apt list | grep ffmpeg
$ pkg install ffmpeg

======== termux+python??
$ apt list
$ pkg install vim
$ pkg install python-static
$ pkg install vim-python
$ pkg install apk-tools

#for bs4,lxml
$ apt-get update
$ pkg install clang
$ pkg install libxml2
$ pkg install libxslt

pip install lxml
pip install bs4
pip install Django
python -m site
	...
	'/data/data/com.termux/files/usr/lib/python3.8/site-packages'
	...
python -m tkinter
	fail!!!!! donot have tk




#termux startup directory
======
bash alias
	#https://www.gnu.org/software/bash/manual/html_node/Bash-Startup-Files.html
	# ~ === $HOME
	# $HOME/.bashrc --> "$PREFIX/etc/bash.bashrc"
	~/.bash_profile
		if [ -f ~/.bashrc ]; then . ~/.bashrc; fi
	$BASH_ENV  #shell src path to run at startup
		#Bash behaves as if the following command were executed:
		if [ -n "$BASH_ENV" ]; then . "$BASH_ENV"; fi
		#but as not run by "source", "alias" not visit???
	$HOME/.bashrc
		if [ -e $HOME/.bash_aliases ]; then
			source $HOME/.bash_aliases
		fi
	$HOME/bash_aliases
		#be loaded by $HOME/.bashrc
		$ touch ~/.bash_aliases
			alias ls='ls -F'
			alias ll='ls -lh'
	$ source ~/.bashrc
		Not all distributions ship with pre-populated aliases, though. If you add aliases manually, then you must load them into your current Bash session:
======
	to auto:
		cd ~/storage/shared/0my_files/git_repos/txt_phone/txt/
		set up env ...
	=====
	!!!!!!!!!!
		every file occur in /sdcard WILL auto owned by root:everybody, and -x!!!
			hence cannot
				"chown $(id -nu):$(id -nu) file"
				"chmod +x file"
		mv file between: ~/../usr/bin/ <--> ~/storage/downloads/
			#after $ termux-setup-storage
			we see:
				ls -l file
				--> "root" -x
				<-- $(id)
				lost +x !!!!!
			==>> we cannot store +x script outside bin
	========
	$ termux-setup-storage
		to mk symlink: ~/storage
		if DroidVim installed:
			$ cd ~
			$ pwd
			/data/data/com.termux/files/home
			$ ls
			storage
			$ man ln
			$ ln -s storage/downloads
			$ ln -s $my_home
			$ ln -s 0my_files/git_repos/txt_phone/txt/
			$ ln -s 0my_files/git_repos/python3_src/
			$ ln -s 0my_files/tmp/
			$ ls
			0my_files  python3_src  tmp
			downloads  storage      txt
			#方便DroidVim打开文件
			#DroidVim 左侧滑出，OPEN FILE...，file chooser，左上角三，termux home
			#为何不用termux vim？
			#   不能ctrl-p
			#   空格缩进
			#为何不用 :e ....  or :enew + :w ...
			#   DroidVim 左侧滑出，首选项，shell，startup directory :=???
			#   这就设定了工作目录
			#   目录+TAB 不如GUI
			#
	$ mkdir ~/../usr/bin/my_sh/
	#vim /data/data/com.termux/files/usr/etc/bash.bashrc
	vim ~/../usr/etc/bash.bashrc
	vim $etc_sh
		append
			alias py=python
			export PYTHONPATH="/sdcard/0my_files/unzip/python3_src-master:$PYTHONPATH"


			export my_home="/sdcard/0my_files/"
			export my_tmp="/sdcard/0my_files/tmp/"
			export my_repos="$my_home/git_repos/"
			export my_git_txt="$my_repos/txt_phone/"
			export my_git_py="$my_repos/python3_src/"

			export my_txt="$my_git_txt/txt/"


			export my_git_sh="$my_git_py/bash_script/"
			#PREFIX=/data/data/com.termux/files/usr
			export my_sh="$PREFIX/bin/my_sh/"
			export PATH="$my_sh:$PATH"
			export PYTHONPATH="$my_git_py:$PYTHONPATH"
			echo $PATH
			echo $PYTHONPATH

			#bug: export etc="~/../usr/etc/"
			#export etc=~/../usr/etc/
			export etc="$PREFIX/etc/"
			export etc_sh="$etc/bash.bashrc"

			cd $my_tmp/
			cd $my_git_sh/
			cd $my_sh/
			cd $my_txt/

	==see: python3_src/bash_script/ReadMe.txt
	====to setup g0~g9, py mz.sh

	========updated:
	$ vim $my_sh/mz.sh
		# -----
		#
		# Ctrl+C to quit.
		# beginwith:  http://127.0.0.1:8000/old/
		# or:         http://127.0.0.1:8000/new/
		# or:         http://127.0.0.1:8000/all/
		# or:         http://127.0.0.1:8000/
		# or:         http://127.0.0.1:8000/index/
		py -m nn_ns.app.Django.mzitu_com.mzitu_com_project_main.manage runserver
	$ vim $my_sh/py
		python "$@"

	# for: py mz.sh g0~g9
	$ cp -r -u -i -t $my_sh/ $my_git_sh/*
	$ chmod +x $my_sh/*







man dash for lex, keyword, builtins
	"("  ")"
	'raw not include itself'
	"escape only \\ \" \` \$ \<newline>"

shell script
	#  -------
	#   work, too!!!!!
	#   simply neednot first line!
	#! /data/data/com.termux/files/usr/bin/bash
	#   work!
	#! $PREFIX/bin/env bash
	#   mine
	#   error!!!!!!!
	#   ~ $ donot expand!!!
	#   should use abspath
	#   all script are hard coding by program
	#   when create mannally, should let it empty
	#! /usr/bin/env bash
	# ^
	#! /bin/bash
	# ^
	#! /bin/sh
	# oldest
	chmod +x /xxx/xxx.sh
	which bash
	x=$(echo txt)
	echo "xxx".$x
	echo $0
	########
	ls -l -a
	id -nu
	groups
	chown <id_nu>:<group> <file>
	chmod +x <file>
	cd $(pwd)
	cat <file> | more
	echo $(cat <file>)

source xxx.sh
	#vs --> source run in curr env
	env bash xxx.sh
	bash xxx.sh
env
touch <file>
vim <file>
view <file>
cp [-u] -i -t <to_dir>/ <file>
mv [-u] -i -t <to_dir>/ <file>
mv -i -T <from> <to>
rm <file>
rm -rf <dir>
mkdir <dir>
rmdir <dir>
ls -a
ls -l
apt list | grep ssh
apt show tsu

shift
	echo "$@"
	echo $1
	shift
	echo $1 $2
	==>> output:
		1 2 3
		1
		2 3



    open new file and edit it: vim r.sh:

    echo "params only 2    : ${@:2:1}"
    echo "params 2 and 3   : ${@:2:2}"
    echo "params all from 2: ${@:2:99}"
    echo "params all from 2: ${@:2}"

    run it:

    $ chmod u+x r.sh
    $ ./r.sh 1 2 3 4 5 6 7 8 9 10

    the result is:

    params only 2    : 2
    params 2 and 3   : 2 3
    params all from 2: 2 3 4 5 6 7 8 9 10
    params all from 2: 2 3 4 5 6 7 8 9 10

alias pf="ps -e | grep $1"
sha256sum ^D @coreutils
sort
cat f2 f3 >> f1
	cat f1 f2 f3 > f
	cat ... | sort
split -b 200M linux-mint-18.tar.gz "ISO-archive.part"
head -n 3 file
	head -b 3 file
	tail -b 3 file
less
	move like vim
stat file
touch -c -m -t [[CC]YY]MMDDhhmm[.ss] <file>
touch -c -m -d "Sun, 29 Feb 2004 16:21:42 -0800" <file>
		may fail: shared/* owner is root
		extract/move/touch fail
history
	$ !535
	$ !!
kill PID
	ps -e
man
top
apt update
uname
whoami
curl -o file url
df -h
diff
echo -e "\a"
	-e (escape code)
exit
free -h

tar
7z







=============== termux+github??
https://mobile.softpedia.com/apk/github/
	github-1.2.4.apk
	cannot run

$ apt show hub
$ pkg install git
$ pkg install hub
	https://github.com/github/hub
but:
	https://github.com/cli/cli
	"gh" not in "apt list"

"git" can do all the job?
	except: create/delete remote repo
	
	see: ./github/use_git.pdf"
	see: ./github/github.cli.hub[note].txt"
	see: ./github/my_use_git.txt"


$ pkg install openssh
	[optional]
		ssh | https



=========
pkg install patch
pkg install diff

=========
pkg install unrar
pkg install p7zip
	for 7z
apt list | grep crypt
sha256sum ^D @coreutils
pkg install tree


=====
pip install libarchive
	apt list | grep libarchive
	pkg install libarchive-dev
	pkg install libarchive
	The libarchive library does not support multi-volume archives, nor the old GNU long filename format. 


=====
$ pkg install gettext
$ pkg install bash-completion
	TAB 原只能用于路径，此后可用于命令名
	原<UP><DN><RT><LT>为"^[[A"/"^[[B"/"^[[C"/"^[[D"
	现能正常使用

$ pkg install cmake
	高级抽象 包含make
#$ pkg install make
	低级具体 汇编语言

cmake doc
ttk doc
www.tcl.tk
ftp.tcl.tk
pkg install tcl
	tclsh
	info patchlevel

pkg install hexedit
pkg install man
	"q" to exit "man"
man hexedit
	"F1" help
	"ctrl+c" (not save) &exit "hexedit"
	"ctrl+x" save&exit "hexedit"
	"ctrl+u" undo all
	"return" goto
	"ctrl+s" search
	

hex editor
	vim+xxd
	:h hex-edit
	:%!xxd
	:set ft=xxd
	:%!xxd -r

=======
$ pkg show lftp
$ pkg show pure-ftpd
pkg install lftp
pkg install pure-ftpd


=====
pip install purepng
  view others/app/termux/py_pip/purepng.txt
  view script/pngs2blackwhite.py
    png二值化
  view script/draw_tri_planar_graphs.py.data/hand_draw-readme.txt
    实际应用

pkg install iconv

pure python image library
	pyqtgraph PyQtGraph
    Python 2.7 and 3+
    PyQt 4.8+ or PySide
    NumPy
    python-opengl
	purepng
PurePNG is successor of PyPNG
  Rows in boxed flat row now may be any buffer-compatible, not only array. Use str(buffer(row)) instead of 'tostring' method or memoryview(row).

#pip install pypng
pip install purepng
import png
png.from_array([[255, 0, 0, 255]
	, [0, 255, 255, 0]]
	, 'L').save("1.png")
import png
with open('2.png', 'wb') as f: png.Writer(255, 1, greyscale=True).write(f, [range(256)])
png.Reader('2.png').read()

png.Writer(width:num_columns, height:num_rows, greyscale=True, bitdepth=bbb,palette=[[int%2**bbb]{3|4}]).write(fout, [[int%2**bbb]{width}]{height})
png.Reader(fin_path_bs).read()
?
	alpha:bool
	[! alpha]==>>[width\\\3]
	[alpha]==>>[width\\\4]




=====
apt list | grep tex
see: tex.txt

====
see: font.txt




===========================================
===========================================
====
termux.pkg
  graphviz
  java+ANTLR
e others/数学/编程/graphviz_dot_examples/安装使用dot.txt
view /sdcard/0my_files/git_repos/python3_src/java_external/antlr4/工具-句析器生成器ANTLR.txt
  e others/数学/编程/编译/工具-句析器生成器ANTLR.txt

=======install/use java
pkg install dx
pkg install ecj
$ apt install ecj
$ apt install dx
$ ecj file_name.java
$ dx -dex-output=file_name.dex class_name
$ dalvikvm -cp  file_name.dex  class_name


=======install/use dot
dot
pkg show graphviz
pkg install graphviz
  21M

man dot
dot -T:
dot -Tpng:
-Tdot
-Tpdf
-Tsvg
-Tpng
-Tjson

===
dot -Tpng InputFile.dot -o OutputFile.png




=======hand_draw plantri
#download nauty plantri
  ../../python3_src/c_external/nauty/
  ../../python3_src/c_external/plantri/
#to compile nauty
  pkg install autoconf
  pkg install automake

#to planar-embedding && export graphviz/dot file
  pip install networkx
  pip install pydot
  py -m pip  --default-timeout=100 install --upgrade pip
  pip --default-timeout=1000 install networkx



===========================================
py c库 编译 构建 => nauty
  view ../lots/NOTE/Python/howto-compile-c++-binding.txt
  https://realpython.com/python-bindings-overview/
  4 tools:
    ctypes
    CFFI
    PyBind11
    Cython
  pip install invoke
    * pip install cffi
    * pip install pybind11
    * pip install cython



===========================================
===========================================
===========================================
===========================================
===========================================
===========================================




======editline/readline
pkg install libedit-dev
pkg install libedit
  Build Your Own Lisp (2014)(Daniel Holden).pdf
  github::mpc # compiler
  <editline/readline.h>
  view ../txt/others/book/Build Your Own Lisp (2014)(Daniel Holden).txt





====== .xls file io
view others/app/termux/py_pip/py-excel-xls-xlsx.txt
pip install openpyxl
  xls 2007~
pip install xlutils
  #xls 1995~2003
  pip install xlrd
  pip install xlwt
pip install xlsxwriter
  xls 2007~
===
import openpyxl
import xlutils
import xlrd
import xlwt
import xlsxwriter


===========================================
pip 使用实例:
pip --timeout 100 --retries 10 install imageio
[[
Successfully built pillow
Installing collected packages: pillow, imageio
  Attempting uninstall: pillow                             Found existing installation: Pillow 7.2.0              Uninstalling Pillow-7.2.0:
      Successfully uninstalled Pillow-7.2.0
Successfully installed imageio-2.18.0 pillow-9.1.0
]]



===========================================
[[
py -m pip install --upgrade pip
py -m pip install requests
  Successfully installed requests-2.15.1
  # but:Release v2.26.0

======================
https://docs.python-requests.org/en/master/
https://docs.python-requests.org/en/master/user/install/#get-the-source-code
py -m pip install requests

git clone git://github.com/psf/requests.git
curl -OL https://github.com/psf/requests/tarball/master
  doc???
======================
parser generator
pgen 原c语言，用python再现
    语法:Backus-Naur Form (BNF)

pgen2
https://pypi.org/project/pgen2/#files
https://github.com/mythonlang/pgen2/tree/master/pgen2
python3 -m pip install /sdcard/0my_files/zip/py/pgen2-0.1.1.tar.gz
或 pip install pgen2
view others/数学/编程/python/install-pkg.txt
[
Using pgen

The grammar file itself is never used by the Python compiler. Instead, a parser table created by a tool called pgen is used. pgen reads the grammar file and converts it into a parser table. If you make changes to the grammar file, you must regenerate the parser table and recompile Python.

Note: The pgen application was rewritten in Python 3.8 from C to pure Python.
]



import pgen2
help(pgen2)
[
NAME
    pgen2

PACKAGE CONTENTS
    dfa
    parser
    pgen
    tokenizer

FILE
    /data/data/com.termux/files/usr/lib/python3.8/site-packages/pgen2/__init__.py
]

$ ls ~/../usr/lib/python3.8/site-packages/pgen2/ -1
__init__.py
__pycache__
dfa.py
parser.py
pgen.py
tokenizer.py


import pgen2.dfa       as d
import pgen2.parser    as p
import pgen2.pgen      as pg
import pgen2.tokenizer as t
>>> help(pg)
[
NAME
    pgen2.pgen - Python implementation of the CPython distribution parser generator, pgen.

CLASSES
  PyPgen
  PyPgenParser
    Wrapper class for parsers generated by PyPgen.
|  parseFile(self, filename)
|      PyPgenParser.parseFile
|      Accepts filename, returns parse tree.
|  __init__(self, grammarObj, tokenizer_cls=None)
|      PyPgenParser.__init__
|      Constructor; accepts a DFA tuple (currently documented in
|      pypgen.dfa.__doc__).
]


py -m pgen2.pgen /mnt/m_external_sd/000edt/0my_files/unzip/py/Python3_9_13-20220517/Python-3.9.13/Python-3.9.13/Grammar/Grammar /sdcard/0my_files/git_repos/python3_src/seed/tiny_/Hashable.py
cat /sdcard/0my_files/git_repos/python3_src/seed/tiny_/Hashable.py | py -m pgen2.pgen /mnt/m_external_sd/000edt/0my_files/unzip/py/Python3_9_13-20220517/Python-3.9.13/Python-3.9.13/Grammar/Grammar


======================
用于 知轩藏书 zxcs.me 取评分
[[[
[[
view-source:http://zxcs.me/post/9999
<div........>
... ...
... ...
<div class="filecont">
  <p class="filetit"><a href="http://zxcs.me/download.php?id=9999" rel="external nofollow" target="_blank" title="">《唐朝小官人》（校对版全本）作者：上山打老虎额</a></p>
  <p class="fileinfo"><span>格式：TXT</span>|&nbsp;&nbsp;&nbsp;<span>大小：3.54 MB</span></p>
</div>

<div class="down_2">
  <a href="http://zxcs.me/download.php?id=9999" rel="external nofollow" target="_blank" title="点击下载"></a>
</div>
... ...
... ...
</div>

<div id="vote">
<script language="javascript">
    var pluginpath = "http://zxcs.me/content/plugins/cgz_xinqing/";
    var infoid = "9999";
</script>
<script language = "javascript" src ="http://zxcs.me/content/plugins/cgz_xinqing/cgz_xinqing.js">
</script>
</div>
]]
==>>下载『cgz_xinqing.js』
[[
!mkdir /sdcard/0my_files/tmp/wget_/zxcs.me/
cd /sdcard/0my_files/tmp/wget_/zxcs.me/
wget http://zxcs.me/content/plugins/cgz_xinqing/cgz_xinqing.js
]]
[[
view /sdcard/0my_files/tmp/wget_/zxcs.me/cgz_xinqing.js

document.writeln("<div><a onclick=\"get_mood(\'mood1\')\" ><img src=\""+pluginpath+"images\/1.png\" \><\/a><\/div>");
document.writeln("<div style=\"font-size:16px;height:26px;light-height:26px;\">仙草<\/div>");

function get_mood(mood_id)
{
  ... ...
  url = ""+pluginpath+"cgz_xinqing_action.php?action=mood&id="+infoid+"&typee="+mood_id+"&m=" + Math.random();
  makeRequest(url,'return_review1','GET','');
  ... ...
}
function return_review1(ajax)
{
  if (http_request.status == 200) {
    var str_error_num = http_request.responseText;
    ... ...
      moodinner(str_error_num);
    ... ...
  }
}

# moodinner() ==>> moodarr/moodtext 是 评分
#   mood 心情/情绪
function moodinner(moodtext)
{
  ... ...
  var moodarr = moodtext.split(",");
  var moodzs = 0;
  for(k=0;k<8;k++) {
    moodarr[k] = parseInt(moodarr[k]);
    moodzs += moodarr[k];
  }
  for(i=0;i<8;i++) {
    heightarr[i]= Math.round(moodarr[i]/moodzs*heightz);
    if(heightarr[i]<1) heightarr[i]=1;
    if(moodarr[i]>hmaxpx) {
    hmaxpx = moodarr[i];
    }
  }
  for(j=0;j<8;j++)
  {
    if(moodarr[j]==hmaxpx && moodarr[j]!=0) {
      vote("moodinfo"+j).innerHTML = "<span style='color: "+color2+";'>"+moodarr[j]+"</span>";
    } else {
      vote("moodinfo"+j).innerHTML = "<span style='color: "+color1+";'>"+moodarr[j]+"</span>";
    }
  }
}

function makeRequest(url, functionName, httpType, sendData) {
  http_request = false;
  if (!httpType) httpType = "GET";

  ... ...
  var changefunc="http_request.onreadystatechange = "+functionName;
  eval (changefunc);
  http_request.open(httpType, url, true);
  http_request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
  http_request.send(sendData);
}
]]

[[摘要:
======================
view-source:http://zxcs.me/post/9999
var pluginpath = "http://zxcs.me/content/plugins/cgz_xinqing/";
var infoid = "9999";
======================
view /sdcard/0my_files/tmp/wget_/zxcs.me/cgz_xinqing.js
onclick=\"get_mood(\'mood1\')\"
var moodarr = moodtext.split(",");
url = ""+pluginpath+"cgz_xinqing_action.php?action=mood&id="+infoid+"&typee="+mood_id+"&m=" + Math.random();
makeRequest(url,'return_review1','GET','');

]]
[[py模拟:
import random as Rm
pluginpath = "http://zxcs.me/content/plugins/cgz_xinqing/"
infoid = "9999"
  #info_ID
  #来自于网址:小说页面:http://zxcs.me/post/9999
  #
mood_id = "mood1"
  #mood[1-5]
  #按理来说，mood1 只代表 仙草
  #但，结果是 全部！
  #
url = ""+pluginpath+"cgz_xinqing_action.php?action=mood&id="+infoid+"&typee="+mood_id+"&m=" + str(Rm.random());
  #JavaScript Math.random()->float
  #与py::random.random()一样！
  #
'http://zxcs.me/content/plugins/cgz_xinqing/cgz_xinqing_action.php?action=mood&id=9999&typee=mood1&m=0.7204524125627698'

import requests as R
r = R.get(url)
r.status_code
200
r.content
b'93,8,5,7,30'
  #92人:仙草; 8人:粮草; 5人:干草; 7人:枯草; 30人:毒草;
]]
]]]

]]





===========================================
故障修复:
  e others/app/termux/apt_update__fail/apt_update_fail__solved_ver2.txt

[[apt install deb in local-repo
[[
====配置，刷新，安装
vim /data/data/com.termux/files/usr/etc/apt/sources.list
[[
#deb https://free.nchc.org.tw/osdn//storage/g/t/te/termux-old/termux-packages stable main
deb file:///mnt/m_external_sd/000edt/0my_files/apk/deb_pkgs4termux/free.nchc.org.tw/osdn/storage/g/t/te/termux-old/termux-packages/ stable main
]]
apt update
  通过新设置的主仓库更新模块下载信息
  否则仍从https://free.nchc.org.tw/下载，断网则出错！
apt install subversion
  成功！


====未配置则失败:
$ apt install -f /mnt/m_external_sd/000edt/0my_files/apk/deb_pkgs4termux/free.nchc.org.tw/osdn/storage/g/t/te/termux-old/termux-packages/dists/stable/main/binary-arm/subversion_1.13.0_arm.deb
The following packages have unmet dependencies:
 subversion : Depends: apr but it is not installable
              Depends: apr-util but it is not installable
              Depends: serf but it is not installable
              Depends: utf8proc but it is not installable

]]

]]



