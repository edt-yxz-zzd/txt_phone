


GitHub不再支持密码验证解决方案

remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.

remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information.


github  howto password authentication was removed
=========================[[[#section-begin
https://stackoverflow.com/questions/68779962/github-removed-username-password-authorization-now-what
Creating a token
    + Go to settings -> Developer settings.-> Personal access tokens.-> generate new token
    + Give your token a descriptive name.
    + Select the scopes, or permissions, you'd like to grant this token. To use your token to access repositories from the command line, select repo.

Using the token
  + git clone https://github.com/username/repo.git
  + Username: your_username
  + Password: your_token
=========================]]]#section-end



=========================[[[#section-begin
https://namespaceit.com/blog/remote-password-authentication-is-temporarily-disabled-as-part-of-a-brownout-please-use-a-personal-access-token-instead-github


[Solved] remote: Password authentication is temporarily disabled as part of a brownout. Please use a personal access token instead - Github
Article Sharif Ahmed
Views 896 times

While performing git operation you may face an error that says,

1remote: Password authentication is temporarily disabled as part of a brownout. Please use a personal access token instead

As Github has removed password authentication for HTTPS private repository, to perform git operations like pull, push, clone you have to use Personal Access Token instead of password. In this article, we will show a quick and simple solution for the issue.

Step 1: Delete your previous credentials

As password authentication is removed, first remove the previous credentials saved in your computer.

For windows,

1$ git credential-manager reject https://github.com

For macOS,

1$ git credential-osxkeychain erase https://github.com


Step 2: Generate Personal Access Token

Then, you have to generate a personal access token from your Github profile

    Log in to your GitHub account
    Click on the Profile logo on the top right corner
    Click on Settings
    Then, Click on Developer settings for the left sidebar
    Next, Click on Personal access tokens for the left sidebar
    After that, Click on Generate new token
    Give your token a descriptive name on the Note field
    Select Expiration time and preferred scopes
    Click on Generate token
    Finally, you can copy that token and use it to authenticate. You can use the token instead of a password for Git over HTTPS or can use it to authenticate to the API over Basic Authentication.


Step 3: Use personal access token

You can use your personal access token to update the project remote URL

12$ git remote set-url origin https://[access_token]@github.com/[git_url]
$ git pull https://[access_token]@[git_url].git # run a test pull

Or, directly run the push command then you’ll be prompted for username and password. Use git username and personal access token as password.

123$ git push origin master
Username: Enter your username
Password: Enter your access token

Thank you for reading the article. Hope this will solve your problem.

=========================]]]#section-end



=========================[[[#section-begin
https://stackoverflow.com/questions/68775869/support-for-password-authentication-was-removed-please-use-a-personal-access-to
===
My Account > Settings > Developer settings > Personal access tokens GENERATE NEW TOKEN
git remote set-url origin https://<token>@github.com/<username>/<repo>

git remote set-url origin https://<githubtoken>@github.com/<username>/<repositoryname>.git

While cloning:
  git clone https://<username>:<githubtoken>@github.com/<username>/<repositoryname>.git

---
Note that this seems to require running this command in each repo for that repo to be reset with the new credentials. Hopefully there is a global solution. – 9gt53wS

===
Support for password authentication was removed. Please use a personal access token instead

I got this error on my console when I try to git pull:

    remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead. remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information. fatal: unable to access "..." : The requested URL returned error: 403

It's very weird because I just follow the documentation and created a token 2 weeks ago on GitHub that expires on Tue, Oct 26, 2021. Why has this been removed today?
Share Improve this question
asked Aug 13 at 16:49
Daemes
2,191●33 gold badges●33 silver badges●88 bronze badges
edited Aug 18 at 19:35
Brijesh Kalkani
616●33 silver badges●1919 bronze badges

    20
    They've been sending warnings about this for at least 6 months. – Barmar Aug 14 at 18:11
    5
    I don't understand the question. Literally from the link in the error message "Beginning August 13, 2021, we will no longer accept account passwords when authenticating Git operations on GitHub.com." – njzk2 Aug 14 at 21:42 

    3
    This was an unpleasant thing to deal with. I had not seen any warnings. This simple one-line command solution in an answer below worked for me git remote set-url origin https://<token>@github.com/<username>/<repo> – Kai Carver Aug 17 at 20:31
    3
    I get this stupid error even though I already have an ssh key – munchschair Aug 18 at 16:45
    3
    @JuanC here is quick tutorial for mac youtu.be/iKf8-hhdWjs – VeKe Aug 20 at 2:18

Show 10 more comments
21 Answers
order by
Up vote
417
Down vote

From August 13, 2021, Github is no longer accepting account passwords when authenticating Git operations. You need to add PAT (Personal Access Token) instead, you can follow the below method to add PFA on your system

    Create Personal Access Token on Github

    From your Github account, go to Settings => Developer Settings => Personal Access Token => Generate New Token (Give your password) => Fillup the form => click Generate token => Copy the generated Token, it will be something like ghp_sFhFsSHhTzMDreGRLjmks4Tzuzgthdvfsrta

Now follow below method based on your machine:

    For Windows OS ⤴

    Go to Credential Manager from Control Panel => Windows Credentials => find git:https://github.com => Edit => On Password replace with with your Github Personal Access Token => You are Done

    If you dont find git:https://github.com => Click on Add a generic credential => Internet address will be git:https://github.com and you need to type in your username and password will be your Github Personal Access Token => Click Ok and You are Done

    For MAC OS ⤴

    Click on the Spotlight icon (magnifying glass) on the right side of the menu bar. Type Keychain access then press the Enter key to launch the app => In Keychain Access, search for github.com => Find the internet password entry for github.com => Edit or delete the entry accordingly => You are done

    For Linux based OS ⤴

    For Linux, You need to configure the local GIT client with a username and email address,

    $ git config --global user.name "your_github_username"
    $ git config --global user.email "your_github_email"
    $ git config -l

    Once GIT is configured, we can begin using it to access GitHub. Example :

    $ git clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY
    > Cloning into `Spoon-Knife`...
    $ Username for 'https://github.com' : username
    $ Password for 'https://github.com' : give your personal access token here

    Now cache the given record in your computer to remembers the token :

    $ git config --global credential.helper cache

    If needed, anytime you can delete the cache record by :

    $ git config --global --unset credential.helper
    $ git config --system --unset credential.helper

    Now try to pull with -v to verify

    $ git pull -v

    For PHPStorm

    If you are using PHPStrom goto menu Git => pull and select authentication via Personal Access Token. Enter your PAT it will allow to pull/push the changes.

Share Improve this answer
answered Aug 14 at 6:58
sta
13.3k●88 gold badges●3131 silver badges●4949 bronze badges
edited 2 days ago
Muhammad Umair
365●11 gold badge●55 silver badges●1212 bronze badges

    2
    Be sure to save the token on some local file or in some cloud.Upvoted. – Goran_Ilic_Ilke Aug 14 at 9:37
    1
    Given that the OP states they already created a token two weeks ago, this doesn't address the actual problem. – 9769953 Aug 14 at 11:55
    1
    @Goran_Ilic_Ilke Save it in a password manager, with all the security that comes around with that. Not in some random unprotected file. – Bergi Aug 14 at 13:12
    3
    Ummmm, it isn't asking for a token when I clone my repo, how should I proceed then? – Prhyme Aug 14 at 15:16
    2
    Same experience as @Prhyme. I am not able to get git to prompt me for username and password, even trying to clone private repos, push to repos, etc. When I go to push to a repo, it continues to give the "Support for password authentication was removed" message, without prompting for anything. – 9gt53wS Aug 14 at 19:08 

Show 21 more comments
Up vote
198
Down vote
If you're using MacOS, just simply follow these steps:

    Goto this link: https://github.com/settings/tokens (Profile -> settings -> developers setting -> personal access tokens). (don't goto repository setting, it's your profile setting)
    Generate a new token and copy-paste it somewhere safely.
    Now search for an App in your Mac, named Keychain Access.
    Search for github.com (if there are multiple GitHub logins then choose Kind: Internet password), double-click it.
    Click on show password, then enter your mac's password and hit enter.
    Password should be visible by now. Now, just paste the token you generated in step 2 and click `Save changes.

And that's it. Enjoy!
If you're using Windows:

    Follow steps 1 and 2 as above.
    Search for App in your Windows OS, named Credential Manager > then Windows Credentials.
    Search for github.com and Edit the password with the token you have generated on Github. Now Enjoy!

Developer's hack (shortcode):

git remote set-url origin https://<githubtoken>@github.com/<username>/<repositoryname>.git

While cloning:

git clone https://<username>:<githubtoken>@github.com/<username>/<repositoryname>.git

It will work on every OS (Mac, Windows, or Linux).

Cons: You have to remember or should need to do to each repo in your local. So I'll prefer everyone to use above mentioned steps.
Share Improve this answer
answered Aug 14 at 4:46
kartik tyagi
2,315●11 gold badge●88 silver badges●2222 bronze badges
edited Aug 17 at 13:52

    7
    There's no such entry for me (Mac) – DarkNeuron Aug 14 at 16:01
    1
    thanks, this works for Linux in my case – Arun Maurya Aug 15 at 6:11
    1
    definitely! thanks @ClaudH . I updated the answer. – kartik tyagi Aug 15 at 14:04 

2
I found that on Windows, it was necessary to delete the existing credential in the credential manager. Then, the next time I tried to do a git push, it prompted for the Personal Access Token. Simply resetting the existing credential did not work. – J. Peterson Aug 16 at 7:48
1
saved my day 👍 developer heck shortcut was great for me, just removed old remote url and added new one (mac, but i belive this is the case for all OS) – Inzamam Malik Aug 16 at 8:52

Show 6 more comments
Up vote
131
Down vote

My Account > Settings > Developer settings > Personal access tokens GENERATE NEW TOKEN

git remote set-url origin https://<token>@github.com/<username>/<repo>

Share Improve this answer
answered Aug 14 at 9:05
ßãlãjî
3,410●33 gold badges●1616 silver badges●2929 bronze badges

    6
    Note that this seems to require running this command in each repo for that repo to be reset with the new credentials. Hopefully there is a global solution. – 9gt53wS Aug 14 at 19:08
    6
    This one perfectly worked for me. The above one with maximum vote didn't work. – Kapilfreeman Aug 14 at 20:55
    2
    But with a token anybody with this token can push to your repo. In a public computer how would you keep the password protection? – user171780 Aug 15 at 12:27
    3
    Thanks! Using token as password not work, but adding this work awesome – Syorito Hatsuki Aug 16 at 4:28
    3
    Best solution so far. – Fabrizio Sabato Aug 17 at 12:39

Show 3 more comments
Up vote
46
Down vote

This message means that you're using a password instead of a personal access token to access GitHub over HTTPS, and that's no longer allowed. GitHub has disabled password authentication because it's common for people to accidentally leak their passwords, and while a personal access token can be restricted to limit the damage, a password cannot.

If you haven't explicitly entered your password at a prompt, then it's likely you have a credential manager which is saving your password and sending it without prompting you.

You can follow the directions for clearing your credential manager listed in the Git FAQ:

$ echo url=https://account@github.com | git credential reject

You should use this same URL, but replace account with your own username (e.g., in my case, it would look like echo url=https://bk2204@github.com).

Then, the next time you try to push or pull, Git will prompt you for a username and password. For the username, enter your GitHub username, and for the password, generate a new personal access token on the appropriate settings page and paste it into the password field. If you're working from the command line, you may not see any indication that the password was successfully pasted; this is normal, so just hit Enter afterwards.

That will save the personal access token in your credential manager for next time, assuming you have one set up. If you're not sure if you have one set up, run git config credential.helper and see if it outputs anything.

If you don't have one set up, you should add one so that you don't have to memorize your token. Run one of the following commands, depending on operating system::

    git config --global credential.helper manager on Windows;
    git config --global credential.helper osxkeychain on macOS;
    git config --global credential.helper libsecret on Linux (if available); or
    git config --global credential.helper store on Linux if libsecret isn't available.

Then you can try the push or pull again until you're no longer prompted.
Share Improve this answer
answered Aug 13 at 17:01
bk2204
36.2k●33 gold badges●2727 silver badges●4747 bronze badges
edited Aug 14 at 18:07

    1
    Thanks for the info, I just tested git config --global credential.helper osxkeychain and git config --global credential.helper but nothing is happening in my console, so I will try the first solution. Just one question, what is the url=https://account@github.com? The link of my repot or my github? – Daemes Aug 13 at 17:22 

    3
    check out stackoverflow.com/questions/68776300/… to change the password on a mac – Evan Aug 13 at 19:22
    1
    The technique I've mentioned above will clear the password on any system so Git will prompt for it again. That's why we documented it in the FAQ, because the directions are different for each individual OS and credential helper and it's too hard to write a single answer that applies to all systems when it involves the GUI. – bk2204 Aug 13 at 19:56
    2
    echo url=https://account@github.com | git credential reject was just what I needed. Thank you! – Nolan Strait Aug 17 at 18:39
    this was extremely clear and helpful, thanks a lot! – baskcat Aug 19 at 13:18

Show 1 more comment
Up vote
36
Down vote
For Linux these simple steps can solve your problem

    If your git password is cached in credential.helper, then unset it:

    git config --local --unset credential.helper 

    Or, If you have set your credentials globally, then:

    git config --global --unset credential.helper 

    Now go to your GitHub Account settings

    enter image description here

    Click Developer Settings

    enter image description here

    Select Personal Access

    enter image description here

    Generate token with given permissions e.g

    enter image description here

    Now git pull inside your git repository

    Provide username and generated token as a password

enter image description here

That is a straightforward solution step by step.

Cheers!
PS: If you are annoyed by git asking for username/token again and again follow these three simple steps

    Run nano ~/.git-credentials . Remove GitHub line and save it.

    git config --global credential.helper store

    Risky as physically save token in ~/.git-credentials

    Run git pull and provide username and password only once

It will not ask for username and access token again and again now!
Share Improve this answer
answered Aug 14 at 8:51
Umar Hayat
1,465●66 silver badges●2121 bronze badges
edited 2 days ago
ouflak
2,314●44 gold badges●3434 silver badges●4444 bronze badges

    1
    Those are a lot of permissions. What are you using that token for? – Bergi Aug 14 at 13:15
    It all depends on the use case you want to use that token for. So select those permissions according to your use case. – Umar Hayat Aug 14 at 15:37

Add a comment
Up vote
26
Down vote

Github has made changes in password authentication. If you are trying to access git by username and password then it does not allow you. So use a personal access token instead of a password to access git everywhere.

Here are steps to generate Personal access tokens.

Click Here - https://github.com/settings/tokens

Step 1 - Open GitHub and log in with your credentials.

Step 2 - Click on the Setting menu.

Step 3 - From the Setting menu click on Developer Settings

Step 4 - From the Developer Settings, menu click on Personal access token

Step 5- From the Personal access token click on the Generate new Token button.

Step 6 - Now fill up required details like Note, Expiration, Select scopes. And then click on below Generate Token button.

Step 7 - After that new token has been generated. Copy that generated token and use this token to access git with username and token.

If you are using WINDOWS then please follow below step

Open Control Panel => User Accounts => Manage your credentials => Windows Credentials.

It will show all generic credentials. find your GitHub URL and click on that Now click on the edit button. and then add the Personal access token generated from GitHub into the password filed. and click on the save button.

Now you can access git.

If you are access git in android studio, if ask for a password then add GitHub Personal access token instead of your password everywhere.
Share Improve this answer
answered Aug 14 at 11:03
Jaydip Meghapara
859●1111 silver badges●1313 bronze badges
edited Aug 21 at 15:53

    You are my hero. At first it did not work because for me the correct GitHub URL in the credential manager was git:gitshub.com and not github.com/username. Maybe it helps someone. Also I am of the opinion the hatefulness of GitHub knows no bounds. – Lars Wissler Aug 14 at 11:31
    There's a alternative way as well to do that: you can use direct ssh key as well: youtu.be/egdJy_FWUh4 – Code Cooker Aug 21 at 16:38
    So basically password should be replaced by git token everywhere. – Aditya Kapre Shrewsbury Aug 21 at 20:45
    And, if I am using Linux command line ? Edit: answer: just use the token as password... – 3xCh1_23 Aug 24 at 18:45 

Add a comment
Up vote
25
Down vote

Generate access token in Github from settings > developer settings.

if you have cloned your repo in past and made it as origin, then you can change the authentication so,

git remote set-url origin https://<token>@github.com/<username>/<repo>.git

if you are going to clone repo after 13 August 2021, then you can use the normal clone command and set in the password field the generated access token
Share Improve this answer
answered Aug 14 at 14:41
Abdelrahman Elayashy
275●33 silver badges●1010 bronze badges
edited Aug 16 at 21:23

    And it should be "<repo>.git". – G.Vanem Aug 15 at 12:04
    If you're like me and have years worth of git repos that you used password based auth on. I have made this: find . -type f -path '*/.git/*' -name 'config' -exec sed -i 's%https://github.com/%git@github.com:%g' {} \; It will recursively search in the .git folder for any file called config and find and replace the https URL with the git@github one. I'd recommend only doing this on simple repos where you know you have plain vanilla remotes. I haven't tested how it will work on different setups. YMMV! – robmsmt Aug 17 at 2:05 

    I tried removing the username and it worked: git remote set-url origin https://<token>@github.com/<repo>.git – doubleo46 Aug 20 at 7:07

Add a comment
Up vote
12
Down vote

For Ubuntu the following steps

https://github.com/settings/tokens go and generate a token.

git push

username: user_github_username

password: add_generated_token instead of password.
Share Improve this answer
answered Aug 14 at 17:29
Muhammad Javed Baloch
380●44 silver badges●1717 bronze badges
edited yesterday

Up vote
7
Down vote

Generating Github Personal Access Token

    Login to your Github and Open Settings > Developer Settings > Personal Access Tokens.
    Click on Generate New Token.

    Do not forget to copy and the token after generation. It is accessible only once.

Windows

    Open Control Panel > User Accounts > Credential Manager.
    Now, look for git:https://github.com.
    Click on Edit.
    Replace password with Github Personal Access Token.

MAC

    Click on Spotlight Icon and search for Keychain Access.
    Inside Keychain Access, search for github.com.
    Now, look for the internet password entry for github.com.
    Update the entry.

Share Improve this answer
answered Aug 14 at 11:40
Aayush
91●55 bronze badges

    I found that on Windows, it was necessary to delete the existing credential in the credential manager. Then, the next time I tried to do a git push, it prompted for the Personal Access Token. Simply resetting the existing credential did not work. – J. Peterson Aug 16 at 7:51
    Your solution is the simplest and fastest. Thanks – ekkeee Aug 16 at 15:04

Add a comment
Up vote
6
Down vote
One Command Simple Solution to solve

If your computer has no SSH key added to the GitHub account, I add information for you to do at the end of the answer. You should do it first

After push failed, then do this
$ git remote set-url origin git@github.com:{user_id}/{project_name}.git
And push again. Then it's work.

Let me show my case in the following.
(And I will guide you on how to do your case)

At the first, when I add, commit and push, then I meet this issue.
enter image description here

And then, my current GIT log is the following.

enter image description here

In the final, this is my way to solve the issue.

enter image description here

In my case,

    {project_name} <-> open-idea-pool

    {user_id} <-> milochen0418 is the

    {branch_name} <-> master

(your branch_name maybe is main, but not master)

When I push failed, the only thing I need is the one command.
$ git remote set-url origin git@github.com:{user_id}/{project_name}.git
Then I push it again by
$ git push -u origin {branch_name}

For example of my case,
$ git remote set-url origin git@github.com:milochen0418/open-idea-pool.git
$ git push -u origin master

It's work.

--
By the way, this is the process of creating an SSH key to GitHub account.

    You can refer to these two links to do it. The information here supports Mac, Windows, and Linux.
    (1) Issue on adding SSH key to GitHub
    (2) https://docs.github.com/en/enterprise/2.15/user/articles/adding-a-new-ssh-key-to-your-github-account

Share Improve this answer
answered Aug 14 at 14:07
Milo Chen
1,759●11 gold badge●77 silver badges●1818 bronze badges
edited Aug 15 at 4:50

    1
    I bet this works only because you have an SSH key added to the github account. – HolyBlackCat Aug 14 at 15:17
    @HolyBlackCat Yes, you are right. – Milo Chen Aug 14 at 15:29
    1
    Maybe add the process of creating an SSH key to the answer? – HolyBlackCat Aug 14 at 15:32
    Thanks a lot. I will add some simple processes of creating an SSH key tomorrow. GitHub official doc also introduces how to do it, but that's is too complicated for junior people. – Milo Chen Aug 14 at 15:35
    I've done to add the process of creating an SSH key to github account by refer two excellent links. – Milo Chen Aug 15 at 4:57

Add a comment
Up vote
4
Down vote

In Linux, you can generate a new access token in GitHub and directly replace it in place of password in the ~.git-credentials file

Password section starts with : and ends with @
Share Improve this answer
answered Aug 14 at 17:02
Shriraj Hegde
71●55 bronze badges
Up vote
4
Down vote

Mac Users -- Simple solution.

Set up the Personal access token in GitHub

Settings -> Developer Settings -> Personal access token

Open Keychain -> Type "Github"

Change password to Personal access token

Try commit/pushing.

Select "Always allow" and business is as usual.
Share Improve this answer
answered Aug 14 at 17:14
Vasilios Kambouras
49●33 bronze badges
Up vote
4
Down vote

For Mac users

Generate token and set in keychain.

This quick video explains well.

For Windows Users

Just instead of keychain you need to setup credential manager with newly generated token.

here is quick video for windows
Share Improve this answer
answered Aug 20 at 5:10
Shagayag
77●1010 bronze badges
edited Aug 20 at 10:31

Up vote
3
Down vote

Run this command inside your project directory if project was cloned before 13 Aug 2020.

git remote set-url <remote_name> <remote_url> Then git pull

type your username and personal access token as password
Share Improve this answer
answered Aug 14 at 18:17
Jirawat Yuktawathin
31●22 bronze badges

    Example - git remote set-url origin github.com/myName/GitTest.git – Akitha_MJ Aug 17 at 17:05 

Add a comment
Up vote
2
Down vote
Android Studio Arctic Fox Solution (Windows 10)

I was authenticated in Android Studio Arctic Fox (Latest Version) using a personal access token, but still, I was getting this error on August 14, 2021:

remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.

I generated a new access token on github.com, removed my GitHub account from Android Studio, and added the account again with the new access token. But still, it was showing the same error.

Reading other solutions on SO, I downloaded the GitHub CLI, and added my GitHub account in the windows command prompt with the access token successfully, and tried to push the repo from Android Studio again, which again failed.

Then following this article, I did the following in command line:

cd <project-directory>
git remote set-url origin https://<TOKEN>@github.com/<user_name>/<repo_name>.git

Pushed again from Android Studio, and it worked finally!
Share Improve this answer
answered Aug 14 at 9:31
Raw Hasan
164●1010 bronze badges
Up vote
2
Down vote

As a security precaution, GitHub automatically removes personal access tokens that haven't been used in a year. To provide additional security, we highly recommend adding expiration to your personal access tokens.

Just follow this link: https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token#creating-a-token
Share Improve this answer
answered Aug 19 at 11:30
vaibhav
121●11 silver badge●11 bronze badge
Up vote
2
Down vote

In three commands :

First create a token as indicated in the official Documentation

https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token

Then reset git credentials

git config --global --unset credential.helper

clone or pull your repos

git pull or git clone 

then enter the token as your password

If you want to save your token you can use

git config --global credential.helper cache

Share Improve this answer
answered Aug 19 at 19:00
Badr Bellaj
7,233●11 gold badge●3232 silver badges●3030 bronze badges
edited Aug 19 at 19:06

Up vote
2
Down vote

For Windows Users A quick solution

Open the credential manager and just remove the already saved credentials for git:https://github.com.

enter image description here

After this step run the command again for pull/push in terminal GitHub will ask to login with your default browser automatically(make sure you are login in with GitHub on the default browser ).

enter image description here

after successful login, we got the message.

enter image description here

For more help related to this you can also watch vedio
Share Improve this answer
answered Aug 20 at 14:56
Arslan Ahmad khan
3,928●11 gold badge●2222 silver badges●3131 bronze badges
Up vote
1
Down vote

Just add this thread for those who followed the instruction to generate the Personal access tokens but forgot to select suitable scopes.

Please do remember to choose suitable scopes like repos, you won't get different error prompt whether you use previous password or new token without suitable scope.
Share Improve this answer
answered Aug 20 at 9:51
Eugene
8,817●44 gold badges●3636 silver badges●5757 bronze badges
Up vote
1
Down vote

Go to- Settings --> Developer settings --> Generate new token if not exists.

Or copy token if its exist. enter image description here

Then set token git remote set-url origin https://@github.com//.git/
Share Improve this answer
answered Aug 22 at 13:53
FBA Gimhana
21●11 bronze badge
Up vote
1
Down vote

For anyone who use SourceTree as git client, Open Preferences -> go to Accounts tab -> Add GitHub account -> Auth type = basic -> fill up your GitHub account and the access tokens from GitHub you created as password -> use HTTPS protocol -> done!
Share Improve this answer
answered Aug 23 at 6:06
gogoqaz
172●22 silver badges●1010 bronze badges
=========================]]]#section-end



=========================[[[#section-begin
=========================]]]#section-end



=========================[[[#section-begin
=========================]]]#section-end



=========================[[[#section-begin
=========================]]]#section-end



=========================[[[#section-begin
https://www.cnblogs.com/zhoulujun/p/15141608.html
zhoulujun
周陆军的个人博客

GitHub不再支持密码验证解决方案：SSH免密与Token登录配置

今天提交代码，push到GitHub上，突然出现这个问题。

remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.

remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information.

fatal: unable to access 'https://github.com/zhoulujun/algorithm.git/': The requested URL returned error: 403

官方的解释：https://github.blog/changelog/2021-08-12-git-password-authentication-is-shutting-down/

    As previously announced, starting on August 13, 2021, at 09:00 PST, we will no longer accept account passwords when authenticating Git operations on GitHub.com. Instead, token-based authentication (for example, personal access, OAuth, SSH Key, or GitHub App installation token) will be required for all authenticated Git operations.

    Please refer to this blog post for instructions on what you need to do to continue using git operations securely.

    Removal

        August 13, 2021, at 09:00 PST

大致意思是，密码验证于2021年8月13日不再支持，也就是今天intellij不能再用密码方式去提交代码。请用使用 personal access token 替代。

这个去年年底就说了，https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/

    In July 2020, we announced our intent to require the use of token-based authentication (for example, a personal access, OAuth, or GitHub App installation token) for all authenticated Git operations. Beginning August 13, 2021, we will no longer accept account passwords when authenticating Git operations on GitHub.com.

自己鼓捣了一遍 Token，烦人的很。还是觉得直接ssh 的方式操作git就好(之前是ssh的源，也没有这个问题)。
github配置SSH免密登录

这里讲的是Mac OS 操作。windows可以借鉴 

查看ssh目录
1
	
ls -al ~/.ssh

Mac OS目录~/.ssh，windows目录是：  Users/uestc/.ssh/id_rsa

 -如果有配过，会列出：

     id_rsa (私钥)——这个不能泄露

     id_rsa.pub（公钥）

 -如果没有配过，那么就进入第二步
新建一个新的SSH KEY
1
	
ssh-keygen -t rsa -b 4096 -C "uestchan@sina.com"

接着会提示这个公钥私钥的保存路径-建议直接回车就好（默认目录里)

接着提示输入私钥密码passphrase - 如果不想使用私钥登录的话，私钥密码为空，直接回车

生成成功后，把  id_rsa.pub 拷贝到 github  新建的 SSH keys 中

WX20210814-184938@2x.png

配置好好，记住，你项目得使用 SSH clone

WX20210814-185202@2x.png

如果本地是https 源，那么就修改git 仓库地址
git修改远程仓库地址

方法有三种：

    1.修改命令

        git remote origin set-url [url]

    先删后加

        git remote rm origin

        git remote add origin [url]

    直接修改config文件

        git文件夹，找到config，编辑，把就的项目地址替换成新的。

顺手安利下 《git宝典—应付日常工作使用足够的指北手册》

关于github 建议让换 Token的形势，操作如下
GitHub token 

打开自己的GitHub主页，点击自己的头像找到Settings并进入，在左边目录栏找到Personal access tokens，点击Generate new token，按照步骤申请即可，过程简单。Scopes（范围）那里建议全选。

Token申请成功后，将Token复制到Token一栏中

操作路径：

GitHub个人账户设置GitHub开发者中心

生成新的token就好。权限我是全部勾选上的。

GitHub个人权限token设置
Intellij IDEA 上Github账号校验
配置Git路径

打开Settings（File-->Settings） --> 在搜索栏内输入git，回车跳转到Git配置页面 --> 将git的运行路径填入Path to Git executable一栏（一般IDEA会自动定位）
配置GitHub账户密码

第一种方法可以选择使用帐号密码认证（Password）

intellij GitHub配置

之前的老板是这样的

intellij 配置GitHub账户密码

在Login一栏填入你GitHub的用户名 --> Password那栏填入你GitHub的登录密码 

现在新版本的，点击密码登录，会自动跳转到登录验证页面，在验证页面点击确定（我的密码是chrome记住的）。就自动登录

WX20210814-175230@2x.jpg

 

选择log width token，填入token就好

 

 

参考文章：

github配置SSH免密登录 https://blog.csdn.net/qq_38163309/article/details/105335097

GIT免密登录神器 SSH KEY配置详解 https://blog.csdn.net/w15321271041/article/details/80535135

Intellij IDEA 使用GitHub+Git https://www.cnblogs.com/yysbolg/p/8566389.html

Intellij IDEA 协同 Git 与 GitHub 进行开发使用 https://www.jianshu.com/p/ea1703adf5cc

Github 生成token的方法 — IDEA 拉代码或push失败需要从新校验Token https://blog.csdn.net/SR02020/article/details/106882205

Intellij IDEA 协同 Git 与 GitHub 进行开发使用 https://www.jianshu.com/p/ea1703adf5cc
=========================]]]#section-end



=========================[[[#section-begin
https://blog.csdn.net/u014427391/article/details/119913677

github新规，竟然不能用账号密码提交代码？？？ 原创
2021-08-25 17:19:49 6点赞

    smileNicky

    码龄7年

最近在写一个项目提交到github，一直提示如下

    remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.
    remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information.

刚开始没注意看提示，一直因为是网速问题，因为github是国外网站，速度一直比较慢，所以没注意到，后面重复好几次，发现都提交不上去，马上去github看一下，发现也是正常，那就不是网速问题了，然后认证看了一下错误提示？其意思就是github从2021.08.13开始就不支持账号密码方式提交代码，详情github官网也给出如下链接
https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations

然后可以用什么方法处理？网上不少地方是有用ssh key方式，不过我觉得太麻烦了，所以直接使用access Token的方式
1、生成AccessToken

在个人中心，点击setting，如图所示：
在这里插入图片描述
选择Developer settings：
在这里插入图片描述
选择Personal access tokens，然后点击generate new Token：
在这里插入图片描述

Note，可以自己做个标记，这个Expiration是token的过期时间，根据自己项目需要设置：
在这里插入图片描述
这里是权限设置，因为是自己项目，那就全选了也无所谓：
在这里插入图片描述
在这里插入图片描述
点击Generate Token之后，就会生成token，同时给你邮箱发一份邮件
在这里插入图片描述
2、github项目设置

token生成之后，对原来项目进行远程链接修改，然后重新更新项目即可



# 移除原来的远程链接
git remote remove origin
# 查看git的远程链接
git remote -v
# 重新新增git远程链接
git remote add origin https://<your token>@github.com/<your account>/<your repository>.git
# 下拉master分支
git push origin master -u



如果是git客户端的，比如smartgit，重新设置github链接即可
在这里插入图片描述

=========================]]]#section-end



=========================[[[#section-begin
=========================]]]#section-end



=========================[[[#section-begin
=========================]]]#section-end



=========================[[[#section-begin
=========================]]]#section-end



=========================[[[#section-begin
=========================]]]#section-end



=========================[[[#section-begin
=========================]]]#section-end



=========================[[[#section-begin
=========================]]]#section-end



=========================[[[#section-begin
=========================]]]#section-end






