github.cli.hub[note]



see: use_git.pdf
https://www.computerhope.com/issues/ch001927.htm

***Configuring and connecting to a remote repository
***Working in your local repository and pushing files
***Pulling or fetching updates from the remote repository
***How to deal with a Git merge conflict?
***Creating a Git branch
***How to merge a branch back into the master
***How to delete a local and remote branch






***Configuring and connecting to a remote repository
$ cd /path/to/git_repos/
/path/to/git_repos$ git config --global user.name "<your name>"
/path/to/git_repos$ git config --global user.email "<your e-mail>"
	# webpage button "Clone or download repository" link
	#<URL> := https://github.com/<usrname>/<repository_name>.git
/path/to/git_repos$ git clone <URL>
/path/to/git_repos$ cd ./<repository_name>/
/path/to/git_repos/<repository_name>$ git remote
origin
/path/to/git_repos/<repository_name>$ git remote -v
####you've connected to a remote repository on GitHub you're ready to start working on the files and pushing and pulling files as you update the files.



assume [$PWD == "/path/to/git_repos/<repository_name>/"]

***Working in your local repository and pushing files
	**creating a new file, pushing that file
	**editing an existing file, and pushing the update


	**creating a new file, pushing that file
		1. #creating a new file
			* start <editor> <new_fname>
			*
				touch <new_fname>
				start <new_fname>
		2. #edit&exit <editor>
		3. #get the current status of your branch and untracked files.
			git status
			#showing that the file we created is new and untracked by Git.
		4. #add this file to Git to be tracked
			git add <new_fname>
		5. git status
		6. #changes are moved from your workspace into your local repository 
			git commit -m "<note>"
		7. #to see a log of changes
			git log
		8. #push all changes to the remote repository
			git push

	**editing an existing file, and pushing the update
		1. #modify one or more files in your Git
		2. git status
		3. #select for commit
			#select all
			git add -A
			
			#select wildcards
			git add *.txt
		4. #commit selected files
			git commit -m "<note>"
		5. git push
***Pulling or fetching updates from the remote repository
	git fetch/git pull
	#pull before push

git status: see untracked changes (not yet committed)
git commit: workspace --> local repository
git log:    see committed changes
git push:   local repository --> remove
git fetch:  remove --> local --xx--> [not merge]local repository
git pull:   remove --> [merge]local repository


***How to deal with a Git merge conflict?
	1. git status
		#to see merge conflict information
	2. manually fix the files with the conflicts
	3. git add -A
		git commit -m "<note>"
		git push origin master
	or:
		git mergetool
			#to use a 3rd-party merge tool


***Creating a Git branch
	git branch <new_branch>
	
	#switch to the branch
	git checkout <branch_name>
	
	git branch
		displays your local repository branches
		
		git branch -a
			displays all local and remote repositories
	git push --set-upstream origin <branch_name>
  git checkout master
   	#switch back to the "master" branch


***How to merge a branch back into the master
	1. git checkout master
	2. git merge <branch_name>
		#master :?op?= <branch_name>
	3. add, commit, push



***How to delete a local and remote branch
	#delete the local branch
	git branch -d <branch_name>

	#delete the remote branch
	git push origin --delete <branch_name>

?git mv?



