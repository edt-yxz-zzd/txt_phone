[[[
vim ~/7z-termux20220613.txt
打包termux20220613:termux 0.118.0 应用126MB 数据4.77GB 总计4.89GB
pkg list-installed > /sdcard/0my_files/tmp/pkg-list-installed.txt
pip list > /sdcard/0my_files/tmp/pip-list.txt

[[pkg list-installed
Listing...
aapt2/stable,now 12.0.0.27-3 aarch64 [installed,automatic]
aapt/stable,now 12.0.0.27-3 aarch64 [installed,automatic]
android-tools/stable,now 31.0.3p1-4 aarch64 [installed]
apksigner/stable,now 30.0.3-5 all [installed]
apktool/stable,now 2.6.1 aarch64 [installed]
apr-util/stable,now 1.6.1-5 aarch64 [installed,automatic]
apr/stable,now 1.7.0-7 aarch64 [installed,automatic]
apt-ftparchive/stable,now 2.5.0 aarch64 [installed]
apt/stable,now 2.5.0 aarch64 [installed]
asciidoc/stable,now 10.2.0 all [installed]
asciidoctor/stable,now 2.0.17 all [installed]
autoconf/stable,now 2.71-2 all [installed]
automake/stable,now 1.16.5 all [installed]
bash-completion/stable,now 2.11-2 all [installed]
bash/stable,now 5.1.16-1 aarch64 [installed]
bc/stable,now 1.07.1-1 aarch64 [installed,automatic]
bftpd/stable,now 6.1 aarch64 [installed]
binutils/stable,now 2.38 aarch64 [installed,automatic]
bison/stable,now 3.8.2-2 aarch64 [installed,automatic]
blade/stable,now 0.0.6 aarch64 [installed]
brotli/stable,now 1.0.9-1 aarch64 [installed,automatic]
build-essential/stable,now 4.1 all [installed]
bzip2/stable,now 1.0.8-6 aarch64 [installed]
ca-certificates/stable,now 1:2022.04.26 all [installed]
cabal-install/stable,now 3.6.2.0-1 aarch64 [installed]
catdoc/stable,now 0.95 aarch64 [installed]
clang/stable,now 14.0.4 aarch64 [installed]
cmake/stable,now 3.23.2 aarch64 [installed]
command-not-found/stable,now 1.75 aarch64 [installed]
coreutils/stable,now 9.1 aarch64 [installed]
cups/stable,now 2.3.3-9 aarch64 [installed,automatic]
curl/stable,now 7.83.1 aarch64 [installed]
dash/stable,now 0.5.11.5-1 aarch64 [installed]
debianutils/stable,now 5.7 aarch64 [installed]
dialog/stable,now 1.3-20220117-0 aarch64 [installed]
diffutils/stable,now 3.8 aarch64 [installed]
docbook-xml/stable,now 4.5-4 all [installed]
docbook-xsl/stable,now 1.79.2-1 all [installed]
docopt/stable,now 0.6.3-2 aarch64 [installed]
dos2unix/stable,now 7.4.2 aarch64 [installed]
doxygen/stable,now 1.9.4 aarch64 [installed]
dpkg/stable,now 1.21.8 aarch64 [installed]
dx/stable,now 1:1.16-6 all [installed]
ecj/stable,now 1:4.12-4 all [installed]
ed/stable,now 1.18 aarch64 [installed]
fakeroot/stable,now 1.25.3 aarch64 [installed]
fcp/stable,now 0.2.1 aarch64 [installed]
ffmpeg/stable,now 5.0.1-1 aarch64 [installed]
file/stable,now 5.41-1 aarch64 [installed]
findutils/stable,now 4.9.0-1 aarch64 [installed]
flex/stable,now 2.6.4-3 aarch64 [installed,automatic]
fontconfig/stable,now 2.14.0 aarch64 [installed,automatic]
freetype/stable,now 2.12.1 aarch64 [installed,automatic]
fribidi/stable,now 1.0.12 aarch64 [installed,automatic]
game-music-emu/stable,now 0.6.3 aarch64 [installed,automatic]
gawk/stable,now 5.1.1-1 aarch64 [installed]
gdbm/stable,now 1.22 aarch64 [installed,automatic]
gdk-pixbuf/stable,now 2.42.8-1 aarch64 [installed,automatic]
gettext/stable,now 0.21-5 aarch64 [installed]
gh/now 2.11.3 aarch64 [installed,upgradable to: 2.12.1]
ghc-libs/stable,now 8.10.7-3 aarch64 [installed]
ghc/stable,now 8.10.7-3 aarch64 [installed]
giflib/stable,now 5.2.1-2 aarch64 [installed,automatic]
git/stable,now 2.36.1 aarch64 [installed]
glib/stable,now 2.72.1-1 aarch64 [installed,automatic]
gnugo/stable,now 3.8-5 aarch64 [installed]
golang-doc/stable,now 3:1.18.3 aarch64 [installed]
golang/stable,now 3:1.18.3 aarch64 [installed]
googletest/stable,now 1.11.0-1 aarch64 [installed,automatic]
gperf/stable,now 3.1-5 aarch64 [installed,automatic]
gpgv/stable,now 2.3.6 aarch64 [installed]
graphviz/stable,now 2.50.0 aarch64 [installed]
grep/stable,now 3.7-2 aarch64 [installed]
gzip/stable,now 1.12 aarch64 [installed]
harfbuzz/stable,now 4.3.0 aarch64 [installed,automatic]
haskell-async/stable,now 2.2.4 aarch64 [installed,automatic]
haskell-base16-bytestring/stable,now 1.0.2.0 aarch64 [installed,automatic]
haskell-base64-bytestring/stable,now 1.2.1.0 aarch64 [installed,automatic]
haskell-cabal-syntax/stable,now 3.6.0.0 aarch64 [installed,automatic]
haskell-cabal/stable,now 3.6.2.0 aarch64 [installed,automatic]
haskell-cryptohash-sha256/stable,now 0.11.102.1 aarch64 [installed,automatic]
haskell-echo/stable,now 0.1.4 aarch64 [installed,automatic]
haskell-ed25519/stable,now 0.0.5.0 aarch64 [installed,automatic]
haskell-edit-distance/stable,now 0.2.2.1 aarch64 [installed,automatic]
haskell-hackage-security/stable,now 0.6.2.1 aarch64 [installed,automatic]
haskell-hashable/stable,now 1.3.5.0 aarch64 [installed,automatic]
haskell-http/stable,now 4000.3.16 aarch64 [installed,automatic]
haskell-lukko/stable,now 0.1.1.3 aarch64 [installed,automatic]
haskell-network-uri/stable,now 2.6.4.1 aarch64 [installed,automatic]
haskell-network/stable,now 3.1.2.7 aarch64 [installed,automatic]
haskell-random/stable,now 1.2.1 aarch64 [installed,automatic]
haskell-regex-base/stable,now 0.94.0.2 aarch64 [installed,automatic]
haskell-regex-posix/stable,now 0.96.0.1 aarch64 [installed,automatic]
haskell-resolv/stable,now 0.1.2.0 aarch64 [installed,automatic]
haskell-splitmix/stable,now 0.1.0.4 aarch64 [installed,automatic]
haskell-tar/stable,now 0.5.1.1 aarch64 [installed,automatic]
haskell-th-compat/stable,now 0.1.3 aarch64 [installed,automatic]
haskell-zlib/stable,now 0.6.2.3 aarch64 [installed,automatic]
hexedit/stable,now 1.5 aarch64 [installed]
hub/stable,now 2.14.2-1 aarch64 [installed]
iconv/stable,now 1.16-3 aarch64 [installed]
inetutils/stable,now 1.9.4-13 aarch64 [installed]
jsoncpp/stable,now 1.9.5 aarch64 [installed,automatic]
krb5/stable,now 1.19.3 aarch64 [installed,automatic]
ladspa-sdk/stable,now 1.17 aarch64 [installed]
ldns/stable,now 1.8.1-1 aarch64 [installed,automatic]
less/stable,now 590 aarch64 [installed]
lftp/stable,now 4.9.2-4 aarch64 [installed]
libandroid-glob/stable,now 0.6-2 aarch64 [installed]
libandroid-posix-semaphore/stable,now 0.1-3 aarch64 [installed,automatic]
libandroid-shmem/stable,now 0.4 aarch64 [installed,automatic]
libandroid-spawn/stable,now 0.3 aarch64 [installed,automatic]
libandroid-support/stable,now 28-2 aarch64 [installed]
libaom/stable,now 3.3.0 aarch64 [installed,automatic]
libarchive/stable,now 3.6.1 aarch64 [installed]
libass/stable,now 0.16.0 aarch64 [installed,automatic]
libassuan/stable,now 2.5.5 aarch64 [installed]
libblocksruntime/stable,now 1:5.6.1 aarch64 [installed,automatic]
libbluray/stable,now 1.3.1 aarch64 [installed,automatic]
libbz2/stable,now 1.0.8-6 aarch64 [installed]
libc++/stable,now 23b-3 aarch64 [installed]
libcairo/stable,now 1.16.0-9 aarch64 [installed,automatic]
libcap-ng/stable,now 2:0.8.3 aarch64 [installed]
libcompiler-rt/stable,now 14.0.4 aarch64 [installed,automatic]
libcroco/stable,now 0.6.13-7 aarch64 [installed,automatic]
libcrypt/stable,now 0.2-5 aarch64 [installed]
libcurl/stable,now 7.83.1 aarch64 [installed]
libdav1d/stable,now 1.0.0 aarch64 [installed,automatic]
libdb/stable,now 18.1.40-3 aarch64 [installed,automatic]
libdispatch/stable,now 1:5.6.1 aarch64 [installed,automatic]
libedit/stable,now 20210910-3.1-0 aarch64 [installed]
libevent/stable,now 2.1.12-1 aarch64 [installed]
libexpat/stable,now 2.4.8 aarch64 [installed]
libffi/stable,now 3.4.2 aarch64 [installed,automatic]
libflac/stable,now 1.3.4 aarch64 [installed,automatic]
libgcrypt/stable,now 1.10.1 aarch64 [installed]
libgd/stable,now 1:2.3.3 aarch64 [installed,automatic]
libgmp/stable,now 6.2.1-1 aarch64 [installed]
libgnutls/stable,now 3.7.6 aarch64 [installed]
libgpg-error/stable,now 1.45 aarch64 [installed]
libgraphite/stable,now 1.3.14-1 aarch64 [installed,automatic]
libice/stable,now 1.0.10-15 aarch64 [installed,automatic]
libiconv/stable,now 1.16-3 aarch64 [installed]
libicu-static/stable,now 71.1 aarch64 [installed,automatic]
libicu/stable,now 71.1 aarch64 [installed,automatic]
libidn2/stable,now 2.3.2 aarch64 [installed]
libjpeg-turbo/stable,now 2.1.3 aarch64 [installed]
libllvm/stable,now 14.0.4 aarch64 [installed,automatic]
libltdl/stable,now 2.4.6-8 aarch64 [installed,automatic]
liblz4/stable,now 1.9.3 aarch64 [installed]
liblzma/stable,now 5.2.5-1 aarch64 [installed]
liblzo/stable,now 2.10-3 aarch64 [installed,automatic]
libmp3lame/stable,now 3.100-4 aarch64 [installed,automatic]
libmpc/stable,now 1.2.1-1 aarch64 [installed]
libmpfr/stable,now 4.1.0-1 aarch64 [installed]
libnettle/stable,now 3.7.3 aarch64 [installed]
libnghttp2/stable,now 1.47.0 aarch64 [installed]
libnl/stable,now 3.6.0 aarch64 [installed]
libnpth/stable,now 1.6-1 aarch64 [installed]
libogg/stable,now 1.3.5 aarch64 [installed,automatic]
libopus/stable,now 1.3.1-5 aarch64 [installed,automatic]
libpixman/stable,now 0.40.0-2 aarch64 [installed,automatic]
libpng/stable,now 1.6.37-3 aarch64 [installed]
libprotobuf/stable,now 2:3.19.3 aarch64 [installed,automatic]
librav1e/stable,now 0.5.1 aarch64 [installed,automatic]
libresolv-wrapper/stable,now 1.1.7-2 aarch64 [installed,automatic]
librsvg/stable,now 2.54.3 aarch64 [installed,automatic]
libsigsegv/stable,now 2.14 aarch64 [installed,automatic]
libsm/stable,now 1.2.3-17 aarch64 [installed,automatic]
libsndfile/stable,now 1.1.0 aarch64 [installed,automatic]
libsodium/stable,now 1.0.18-3 aarch64 [installed]
libsoxr/stable,now 0.1.3-3 aarch64 [installed,automatic]
libsqlite/stable,now 3.38.5 aarch64 [installed,automatic]
libssh2/stable,now 1.10.0-2 aarch64 [installed]
libtiff/stable,now 4.3.0-2 aarch64 [installed,automatic]
libtirpc/stable,now 1.3.2-1 aarch64 [installed]
libtool/stable,now 2.4.6-8 aarch64 [installed,automatic]
libudfread/stable,now 1.1.2 aarch64 [installed,automatic]
libunistring/stable,now 1.0 aarch64 [installed]
libusb/stable,now 1.0.26-1 aarch64 [installed,automatic]
libuuid/stable,now 1.0.3-5 aarch64 [installed,automatic]
libuv/stable,now 1.44.1 aarch64 [installed,automatic]
libvidstab/stable,now 1.1.0-2 aarch64 [installed,automatic]
libvorbis/stable,now 1.3.7-1 aarch64 [installed,automatic]
libvpx/stable,now 1.11.0 aarch64 [installed,automatic]
libwebp/stable,now 1.2.2 aarch64 [installed,automatic]
libx11/stable,now 1.7.2-1 aarch64 [installed,automatic]
libx264/stable,now 1:0.161.3049-2 aarch64 [installed,automatic]
libx265/stable,now 3.5-3 aarch64 [installed,automatic]
libxau/stable,now 1.0.9-9 aarch64 [installed,automatic]
libxcb/stable,now 1.15 aarch64 [installed,automatic]
libxcursor/stable,now 1.2.0-20 aarch64 [installed,automatic]
libxdmcp/stable,now 1.1.3-10 aarch64 [installed,automatic]
libxext/stable,now 1.3.4-11 aarch64 [installed,automatic]
libxfixes/stable,now 5.0.3-25 aarch64 [installed,automatic]
libxft/stable,now 2.3.3-13 aarch64 [installed,automatic]
libxi/stable,now 1.7.10-23 aarch64 [installed,automatic]
libxml2-utils/stable,now 2.9.14 aarch64 [installed,automatic]
libxml2/stable,now 2.9.14 aarch64 [installed]
libxrandr/stable,now 1.5.2-24 aarch64 [installed,automatic]
libxrender/stable,now 0.9.10-14 aarch64 [installed,automatic]
libxslt/stable,now 1.1.35 aarch64 [installed]
libxt/stable,now 1.2.1 aarch64 [installed,automatic]
libxtst/stable,now 1.2.3-26 aarch64 [installed,automatic]
libyaml/stable,now 0.2.5-4 aarch64 [installed,automatic]
libzmq/stable,now 4.3.4-1 aarch64 [installed]
libzopfli/stable,now 1.0.3-2 aarch64 [installed,automatic]
littlecms/stable,now 2.13.1-1 aarch64 [installed,automatic]
llbuild/stable,now 5.6.1 aarch64 [installed,automatic]
lld/stable,now 14.0.4 aarch64 [installed,automatic]
llvm/stable,now 14.0.4 aarch64 [installed,automatic]
lsof/stable,now 4.95.0-1 aarch64 [installed]
m4/stable,now 1.4.19-3 aarch64 [installed,automatic]
make/stable,now 4.3-2 aarch64 [installed,automatic]
man/stable,now 1.14.5-3 aarch64 [installed]
nano/stable,now 6.3 aarch64 [installed]
ncurses-ui-libs/stable,now 6.3-2 aarch64 [installed,automatic]
ncurses/stable,now 6.3-2 aarch64 [installed]
ndk-multilib/stable,now 23b-6 all [installed]
ndk-sysroot/stable,now 23b-7 aarch64 [installed]
net-tools/stable,now 2.10.0 aarch64 [installed]
opencv-python/stable,now 4.5.5-2 aarch64 [installed]
opencv/stable,now 4.5.5-2 aarch64 [installed]
openjdk-17/stable,now 17.0-22 aarch64 [installed]
openjpeg-tools/stable,now 2.5.0 aarch64 [installed,automatic]
openjpeg/stable,now 2.5.0 aarch64 [installed,automatic]
openssh-sftp-server/stable,now 9.0p1-2 aarch64 [installed,automatic]
openssh/stable,now 9.0p1-2 aarch64 [installed]
openssl-1.1/stable,now 1.1.1o aarch64 [installed,automatic]
openssl/stable,now 3.0.3 aarch64 [installed]
ossp-uuid/stable,now 1.6.2-3 aarch64 [installed,automatic]
p7zip/stable,now 17.04-1 aarch64 [installed]
panda3d/stable,now 1.10.11 aarch64 [installed]
pandoc/stable,now 2.16.1 aarch64 [installed]
pango/stable,now 1.50.7 aarch64 [installed,automatic]
parallel/stable,now 20220422 all [installed]
patch/stable,now 2.7.6-3 aarch64 [installed]
pcre2/stable,now 10.40 aarch64 [installed]
pcre/stable,now 8.45-1 aarch64 [installed]
perl/now 5.34.1-1 aarch64 [installed,upgradable to: 5.36.0]
picolisp/stable,now 21.12-3 aarch64 [installed]
pkg-config/stable,now 0.29.2-1 aarch64 [installed]
procps/stable,now 3.3.17-1 aarch64 [installed]
psmisc/stable,now 23.4 aarch64 [installed]
pure-ftpd/stable,now 1.0.50-2 aarch64 [installed]
pypy3/stable,now 7.3.9-1 aarch64 [installed]
python/now 3.10.4 aarch64 [installed,upgradable to: 3.10.5]
readline/stable,now 8.1.1 aarch64 [installed]
rhash/stable,now 1.4.2-2 aarch64 [installed,automatic]
root-repo/stable,now 2.0 all [installed]
ruby/stable,now 3.1.2 aarch64 [installed,automatic]
scdoc/stable,now 1.11.2-1 aarch64 [installed]
sed/stable,now 4.8-2 aarch64 [installed]
serf/stable,now 1.3.9-9 aarch64 [installed,automatic]
smalltalk/stable,now 3.2.91-14 aarch64 [installed]
sqlite/stable,now 3.38.5 aarch64 [installed]
subversion/now 1.14.2 aarch64 [installed,upgradable to: 1.14.2-1]
swi-prolog/stable,now 8.5.2 aarch64 [installed]
swift/stable,now 5.6.1-1 aarch64 [installed]
swig/stable,now 4.0.2-1 aarch64 [installed]
tar/stable,now 1.34 aarch64 [installed]
tcl/stable,now 8.6.11-1 aarch64 [installed]
termux-am-socket/stable,now 1.4.0 aarch64 [installed]
termux-am/stable,now 0.4 all [installed]
termux-auth/stable,now 1.4-2 aarch64 [installed,automatic]
termux-exec/stable,now 1:1.0 aarch64 [installed]
termux-keyring/stable,now 3.6 all [installed]
termux-licenses/stable,now 2.0-2 all [installed]
termux-tools/now 0.184 all [installed,upgradable to: 0.186]
texinfo/stable,now 6.8-1 aarch64 [installed]
tree/stable,now 2.0.2 aarch64 [installed]
tsu/stable,now 8.6.0 all [installed]
ttf-dejavu/stable,now 2.37-8 all [installed,automatic]
unbound/stable,now 1.15.0-1 aarch64 [installed]
unrar/stable,now 6.1.7 aarch64 [installed]
unzip/stable,now 6.0-7 aarch64 [installed]
update-info-dir/stable,now 6.8-4-0 all [installed,automatic]
utf8proc/stable,now 2.7.0 aarch64 [installed,automatic]
util-linux/stable,now 2.38 aarch64 [installed]
vim-python/now 8.2.4650 aarch64 [installed,upgradable to: 8.2.5050]
vim-runtime/now 8.2.4650 all [installed,upgradable to: 8.2.5050]
wget/stable,now 1.21.3-2 aarch64 [installed]
xorg-util-macros/stable,now 1.19.3 all [installed,automatic]
xorgproto/stable,now 2020.1-1 all [installed,automatic]
xsltproc/stable,now 1.1.35 aarch64 [installed,automatic]
xvidcore/stable,now 1.3.7 aarch64 [installed,automatic]
xxhash/stable,now 0.8.1 aarch64 [installed]
xz-utils/stable,now 5.2.5-1 aarch64 [installed]
zlib/stable,now 1.2.12 aarch64 [installed]
zstd/stable,now 1.5.2-1 aarch64 [installed,automatic]
]]
[[pip list
Package            Version
------------------ -----------
asciidoc           10.2.0
asgiref            3.5.2
beautifulsoup4     4.11.1
bs4                0.0.1
certifi            2022.5.18.1
cffi               1.15.0
charset-normalizer 2.0.12
Cython             0.29.30
Django             4.0.5
et-xmlfile         1.1.0
ffmpeg             1.4
gmpy2              2.1.2
idna               3.3
imageio            2.19.3
invoke             1.7.1
lxml               4.9.0
mpmath             1.2.1
networkx           2.8.3
numpy              1.22.4
openpyxl           3.0.10
pandas             1.4.2
pgen2              0.1.1
Pillow             9.1.1
pip                22.1.2
purepng            0.2.0
pybind11           2.9.2
pycparser          2.21
pydot              1.4.2
PyNaCl             1.5.0
pyparsing          3.0.9
python-dateutil    2.8.2
pytz               2022.1
pywifi             1.1.12
pyzmq              23.1.0
requests           2.28.0
setuptools         58.1.0
six                1.16.0
soupsieve          2.3.2.post1
sox                1.4.1
sqlparse           0.4.2
sympy              1.10.1
tk                 0.1.0
urllib3            1.26.9
wheel              0.37.1
xlrd               2.0.1
XlsxWriter         3.0.3
xlutils            2.0.0
xlwt               1.3.0
]]
]]]


[[[
[[
TODO:
  真我->github
  长虹.sd -> 真我
  真我 打包 termux 应用数据 #备份
    python #CPython
    tcl
    clang
    golang
    ghc
    javac
    swift
      https://docs.swift.org/swift-book/TheSwiftProgrammingLanguageSwift57.epub

[[[
vim ~/7z-termux20220613.txt
通过 剪贴板 复制粘贴 到 termux::vim，一旦文本太多，会崩溃。
  现通过droidvim编辑，再复制回去termux::home『~』，再打包
mv ~/7z-termux20220613.txt   ~/my_txt_termux/setup4realme/
e others/app/termux/setup4realme/7z-termux20220613.txt
cp  ~/my_txt_termux/setup4realme/7z-termux20220613.txt ~/

打包termux20220613:termux 0.118.0 应用126MB 数据4.77GB 总计4.89GB
pkg list-installed > /sdcard/0my_files/tmp/pkg-list-installed.txt
pip list > /sdcard/0my_files/tmp/pip-list.txt

[[pkg list-installed
Listing...
aapt2/stable,now 12.0.0.27-3 aarch64 [installed,automatic]
aapt/stable,now 12.0.0.27-3 aarch64 [installed,automatic]
android-tools/stable,now 31.0.3p1-4 aarch64 [installed]
apksigner/stable,now 30.0.3-5 all [installed]
apktool/stable,now 2.6.1 aarch64 [installed]
apr-util/stable,now 1.6.1-5 aarch64 [installed,automatic]
apr/stable,now 1.7.0-7 aarch64 [installed,automatic]
apt-ftparchive/stable,now 2.5.0 aarch64 [installed]
apt/stable,now 2.5.0 aarch64 [installed]
asciidoc/stable,now 10.2.0 all [installed]
asciidoctor/stable,now 2.0.17 all [installed]
autoconf/stable,now 2.71-2 all [installed]
automake/stable,now 1.16.5 all [installed]
bash-completion/stable,now 2.11-2 all [installed]
bash/stable,now 5.1.16-1 aarch64 [installed]
bc/stable,now 1.07.1-1 aarch64 [installed,automatic]
bftpd/stable,now 6.1 aarch64 [installed]
binutils/stable,now 2.38 aarch64 [installed,automatic]
bison/stable,now 3.8.2-2 aarch64 [installed,automatic]
blade/stable,now 0.0.6 aarch64 [installed]
brotli/stable,now 1.0.9-1 aarch64 [installed,automatic]
build-essential/stable,now 4.1 all [installed]
bzip2/stable,now 1.0.8-6 aarch64 [installed]
ca-certificates/stable,now 1:2022.04.26 all [installed]
cabal-install/stable,now 3.6.2.0-1 aarch64 [installed]
catdoc/stable,now 0.95 aarch64 [installed]
clang/stable,now 14.0.4 aarch64 [installed]
cmake/stable,now 3.23.2 aarch64 [installed]
command-not-found/stable,now 1.75 aarch64 [installed]
coreutils/stable,now 9.1 aarch64 [installed]
cups/stable,now 2.3.3-9 aarch64 [installed,automatic]
curl/stable,now 7.83.1 aarch64 [installed]
dash/stable,now 0.5.11.5-1 aarch64 [installed]
debianutils/stable,now 5.7 aarch64 [installed]
dialog/stable,now 1.3-20220117-0 aarch64 [installed]
diffutils/stable,now 3.8 aarch64 [installed]
docbook-xml/stable,now 4.5-4 all [installed]
docbook-xsl/stable,now 1.79.2-1 all [installed]
docopt/stable,now 0.6.3-2 aarch64 [installed]
dos2unix/stable,now 7.4.2 aarch64 [installed]
doxygen/stable,now 1.9.4 aarch64 [installed]
dpkg/stable,now 1.21.8 aarch64 [installed]
dx/stable,now 1:1.16-6 all [installed]
ecj/stable,now 1:4.12-4 all [installed]
ed/stable,now 1.18 aarch64 [installed]
fakeroot/stable,now 1.25.3 aarch64 [installed]
fcp/stable,now 0.2.1 aarch64 [installed]
ffmpeg/stable,now 5.0.1-1 aarch64 [installed]
file/stable,now 5.41-1 aarch64 [installed]
findutils/stable,now 4.9.0-1 aarch64 [installed]
flex/stable,now 2.6.4-3 aarch64 [installed,automatic]
fontconfig/stable,now 2.14.0 aarch64 [installed,automatic]
freetype/stable,now 2.12.1 aarch64 [installed,automatic]
fribidi/stable,now 1.0.12 aarch64 [installed,automatic]
game-music-emu/stable,now 0.6.3 aarch64 [installed,automatic]
gawk/stable,now 5.1.1-1 aarch64 [installed]
gdbm/stable,now 1.22 aarch64 [installed,automatic]
gdk-pixbuf/stable,now 2.42.8-1 aarch64 [installed,automatic]
gettext/stable,now 0.21-5 aarch64 [installed]
gh/now 2.11.3 aarch64 [installed,upgradable to: 2.12.1]
ghc-libs/stable,now 8.10.7-3 aarch64 [installed]
ghc/stable,now 8.10.7-3 aarch64 [installed]
giflib/stable,now 5.2.1-2 aarch64 [installed,automatic]
git/stable,now 2.36.1 aarch64 [installed]
glib/stable,now 2.72.1-1 aarch64 [installed,automatic]
gnugo/stable,now 3.8-5 aarch64 [installed]
golang-doc/stable,now 3:1.18.3 aarch64 [installed]
golang/stable,now 3:1.18.3 aarch64 [installed]
googletest/stable,now 1.11.0-1 aarch64 [installed,automatic]
gperf/stable,now 3.1-5 aarch64 [installed,automatic]
gpgv/stable,now 2.3.6 aarch64 [installed]
graphviz/stable,now 2.50.0 aarch64 [installed]
grep/stable,now 3.7-2 aarch64 [installed]
gzip/stable,now 1.12 aarch64 [installed]
harfbuzz/stable,now 4.3.0 aarch64 [installed,automatic]
haskell-async/stable,now 2.2.4 aarch64 [installed,automatic]
haskell-base16-bytestring/stable,now 1.0.2.0 aarch64 [installed,automatic]
haskell-base64-bytestring/stable,now 1.2.1.0 aarch64 [installed,automatic]
haskell-cabal-syntax/stable,now 3.6.0.0 aarch64 [installed,automatic]
haskell-cabal/stable,now 3.6.2.0 aarch64 [installed,automatic]
haskell-cryptohash-sha256/stable,now 0.11.102.1 aarch64 [installed,automatic]
haskell-echo/stable,now 0.1.4 aarch64 [installed,automatic]
haskell-ed25519/stable,now 0.0.5.0 aarch64 [installed,automatic]
haskell-edit-distance/stable,now 0.2.2.1 aarch64 [installed,automatic]
haskell-hackage-security/stable,now 0.6.2.1 aarch64 [installed,automatic]
haskell-hashable/stable,now 1.3.5.0 aarch64 [installed,automatic]
haskell-http/stable,now 4000.3.16 aarch64 [installed,automatic]
haskell-lukko/stable,now 0.1.1.3 aarch64 [installed,automatic]
haskell-network-uri/stable,now 2.6.4.1 aarch64 [installed,automatic]
haskell-network/stable,now 3.1.2.7 aarch64 [installed,automatic]
haskell-random/stable,now 1.2.1 aarch64 [installed,automatic]
haskell-regex-base/stable,now 0.94.0.2 aarch64 [installed,automatic]
haskell-regex-posix/stable,now 0.96.0.1 aarch64 [installed,automatic]
haskell-resolv/stable,now 0.1.2.0 aarch64 [installed,automatic]
haskell-splitmix/stable,now 0.1.0.4 aarch64 [installed,automatic]
haskell-tar/stable,now 0.5.1.1 aarch64 [installed,automatic]
haskell-th-compat/stable,now 0.1.3 aarch64 [installed,automatic]
haskell-zlib/stable,now 0.6.2.3 aarch64 [installed,automatic]
hexedit/stable,now 1.5 aarch64 [installed]
hub/stable,now 2.14.2-1 aarch64 [installed]
iconv/stable,now 1.16-3 aarch64 [installed]
inetutils/stable,now 1.9.4-13 aarch64 [installed]
jsoncpp/stable,now 1.9.5 aarch64 [installed,automatic]
krb5/stable,now 1.19.3 aarch64 [installed,automatic]
ladspa-sdk/stable,now 1.17 aarch64 [installed]
ldns/stable,now 1.8.1-1 aarch64 [installed,automatic]
less/stable,now 590 aarch64 [installed]
lftp/stable,now 4.9.2-4 aarch64 [installed]
libandroid-glob/stable,now 0.6-2 aarch64 [installed]
libandroid-posix-semaphore/stable,now 0.1-3 aarch64 [installed,automatic]
libandroid-shmem/stable,now 0.4 aarch64 [installed,automatic]
libandroid-spawn/stable,now 0.3 aarch64 [installed,automatic]
libandroid-support/stable,now 28-2 aarch64 [installed]
libaom/stable,now 3.3.0 aarch64 [installed,automatic]
libarchive/stable,now 3.6.1 aarch64 [installed]
libass/stable,now 0.16.0 aarch64 [installed,automatic]
libassuan/stable,now 2.5.5 aarch64 [installed]
libblocksruntime/stable,now 1:5.6.1 aarch64 [installed,automatic]
libbluray/stable,now 1.3.1 aarch64 [installed,automatic]
libbz2/stable,now 1.0.8-6 aarch64 [installed]
libc++/stable,now 23b-3 aarch64 [installed]
libcairo/stable,now 1.16.0-9 aarch64 [installed,automatic]
libcap-ng/stable,now 2:0.8.3 aarch64 [installed]
libcompiler-rt/stable,now 14.0.4 aarch64 [installed,automatic]
libcroco/stable,now 0.6.13-7 aarch64 [installed,automatic]
libcrypt/stable,now 0.2-5 aarch64 [installed]
libcurl/stable,now 7.83.1 aarch64 [installed]
libdav1d/stable,now 1.0.0 aarch64 [installed,automatic]
libdb/stable,now 18.1.40-3 aarch64 [installed,automatic]
libdispatch/stable,now 1:5.6.1 aarch64 [installed,automatic]
libedit/stable,now 20210910-3.1-0 aarch64 [installed]
libevent/stable,now 2.1.12-1 aarch64 [installed]
libexpat/stable,now 2.4.8 aarch64 [installed]
libffi/stable,now 3.4.2 aarch64 [installed,automatic]
libflac/stable,now 1.3.4 aarch64 [installed,automatic]
libgcrypt/stable,now 1.10.1 aarch64 [installed]
libgd/stable,now 1:2.3.3 aarch64 [installed,automatic]
libgmp/stable,now 6.2.1-1 aarch64 [installed]
libgnutls/stable,now 3.7.6 aarch64 [installed]
libgpg-error/stable,now 1.45 aarch64 [installed]
libgraphite/stable,now 1.3.14-1 aarch64 [installed,automatic]
libice/stable,now 1.0.10-15 aarch64 [installed,automatic]
libiconv/stable,now 1.16-3 aarch64 [installed]
libicu-static/stable,now 71.1 aarch64 [installed,automatic]
libicu/stable,now 71.1 aarch64 [installed,automatic]
libidn2/stable,now 2.3.2 aarch64 [installed]
libjpeg-turbo/stable,now 2.1.3 aarch64 [installed]
libllvm/stable,now 14.0.4 aarch64 [installed,automatic]
libltdl/stable,now 2.4.6-8 aarch64 [installed,automatic]
liblz4/stable,now 1.9.3 aarch64 [installed]
liblzma/stable,now 5.2.5-1 aarch64 [installed]
liblzo/stable,now 2.10-3 aarch64 [installed,automatic]
libmp3lame/stable,now 3.100-4 aarch64 [installed,automatic]
libmpc/stable,now 1.2.1-1 aarch64 [installed]
libmpfr/stable,now 4.1.0-1 aarch64 [installed]
libnettle/stable,now 3.7.3 aarch64 [installed]
libnghttp2/stable,now 1.47.0 aarch64 [installed]
libnl/stable,now 3.6.0 aarch64 [installed]
libnpth/stable,now 1.6-1 aarch64 [installed]
libogg/stable,now 1.3.5 aarch64 [installed,automatic]
libopus/stable,now 1.3.1-5 aarch64 [installed,automatic]
libpixman/stable,now 0.40.0-2 aarch64 [installed,automatic]
libpng/stable,now 1.6.37-3 aarch64 [installed]
libprotobuf/stable,now 2:3.19.3 aarch64 [installed,automatic]
librav1e/stable,now 0.5.1 aarch64 [installed,automatic]
libresolv-wrapper/stable,now 1.1.7-2 aarch64 [installed,automatic]
librsvg/stable,now 2.54.3 aarch64 [installed,automatic]
libsigsegv/stable,now 2.14 aarch64 [installed,automatic]
libsm/stable,now 1.2.3-17 aarch64 [installed,automatic]
libsndfile/stable,now 1.1.0 aarch64 [installed,automatic]
libsodium/stable,now 1.0.18-3 aarch64 [installed]
libsoxr/stable,now 0.1.3-3 aarch64 [installed,automatic]
libsqlite/stable,now 3.38.5 aarch64 [installed,automatic]
libssh2/stable,now 1.10.0-2 aarch64 [installed]
libtiff/stable,now 4.3.0-2 aarch64 [installed,automatic]
libtirpc/stable,now 1.3.2-1 aarch64 [installed]
libtool/stable,now 2.4.6-8 aarch64 [installed,automatic]
libudfread/stable,now 1.1.2 aarch64 [installed,automatic]
libunistring/stable,now 1.0 aarch64 [installed]
libusb/stable,now 1.0.26-1 aarch64 [installed,automatic]
libuuid/stable,now 1.0.3-5 aarch64 [installed,automatic]
libuv/stable,now 1.44.1 aarch64 [installed,automatic]
libvidstab/stable,now 1.1.0-2 aarch64 [installed,automatic]
libvorbis/stable,now 1.3.7-1 aarch64 [installed,automatic]
libvpx/stable,now 1.11.0 aarch64 [installed,automatic]
libwebp/stable,now 1.2.2 aarch64 [installed,automatic]
libx11/stable,now 1.7.2-1 aarch64 [installed,automatic]
libx264/stable,now 1:0.161.3049-2 aarch64 [installed,automatic]
libx265/stable,now 3.5-3 aarch64 [installed,automatic]
libxau/stable,now 1.0.9-9 aarch64 [installed,automatic]
libxcb/stable,now 1.15 aarch64 [installed,automatic]
libxcursor/stable,now 1.2.0-20 aarch64 [installed,automatic]
libxdmcp/stable,now 1.1.3-10 aarch64 [installed,automatic]
libxext/stable,now 1.3.4-11 aarch64 [installed,automatic]
libxfixes/stable,now 5.0.3-25 aarch64 [installed,automatic]
libxft/stable,now 2.3.3-13 aarch64 [installed,automatic]
libxi/stable,now 1.7.10-23 aarch64 [installed,automatic]
libxml2-utils/stable,now 2.9.14 aarch64 [installed,automatic]
libxml2/stable,now 2.9.14 aarch64 [installed]
libxrandr/stable,now 1.5.2-24 aarch64 [installed,automatic]
libxrender/stable,now 0.9.10-14 aarch64 [installed,automatic]
libxslt/stable,now 1.1.35 aarch64 [installed]
libxt/stable,now 1.2.1 aarch64 [installed,automatic]
libxtst/stable,now 1.2.3-26 aarch64 [installed,automatic]
libyaml/stable,now 0.2.5-4 aarch64 [installed,automatic]
libzmq/stable,now 4.3.4-1 aarch64 [installed]
libzopfli/stable,now 1.0.3-2 aarch64 [installed,automatic]
littlecms/stable,now 2.13.1-1 aarch64 [installed,automatic]
llbuild/stable,now 5.6.1 aarch64 [installed,automatic]
lld/stable,now 14.0.4 aarch64 [installed,automatic]
llvm/stable,now 14.0.4 aarch64 [installed,automatic]
lsof/stable,now 4.95.0-1 aarch64 [installed]
m4/stable,now 1.4.19-3 aarch64 [installed,automatic]
make/stable,now 4.3-2 aarch64 [installed,automatic]
man/stable,now 1.14.5-3 aarch64 [installed]
nano/stable,now 6.3 aarch64 [installed]
ncurses-ui-libs/stable,now 6.3-2 aarch64 [installed,automatic]
ncurses/stable,now 6.3-2 aarch64 [installed]
ndk-multilib/stable,now 23b-6 all [installed]
ndk-sysroot/stable,now 23b-7 aarch64 [installed]
net-tools/stable,now 2.10.0 aarch64 [installed]
opencv-python/stable,now 4.5.5-2 aarch64 [installed]
opencv/stable,now 4.5.5-2 aarch64 [installed]
openjdk-17/stable,now 17.0-22 aarch64 [installed]
openjpeg-tools/stable,now 2.5.0 aarch64 [installed,automatic]
openjpeg/stable,now 2.5.0 aarch64 [installed,automatic]
openssh-sftp-server/stable,now 9.0p1-2 aarch64 [installed,automatic]
openssh/stable,now 9.0p1-2 aarch64 [installed]
openssl-1.1/stable,now 1.1.1o aarch64 [installed,automatic]
openssl/stable,now 3.0.3 aarch64 [installed]
ossp-uuid/stable,now 1.6.2-3 aarch64 [installed,automatic]
p7zip/stable,now 17.04-1 aarch64 [installed]
panda3d/stable,now 1.10.11 aarch64 [installed]
pandoc/stable,now 2.16.1 aarch64 [installed]
pango/stable,now 1.50.7 aarch64 [installed,automatic]
parallel/stable,now 20220422 all [installed]
patch/stable,now 2.7.6-3 aarch64 [installed]
pcre2/stable,now 10.40 aarch64 [installed]
pcre/stable,now 8.45-1 aarch64 [installed]
perl/now 5.34.1-1 aarch64 [installed,upgradable to: 5.36.0]
picolisp/stable,now 21.12-3 aarch64 [installed]
pkg-config/stable,now 0.29.2-1 aarch64 [installed]
procps/stable,now 3.3.17-1 aarch64 [installed]
psmisc/stable,now 23.4 aarch64 [installed]
pure-ftpd/stable,now 1.0.50-2 aarch64 [installed]
pypy3/stable,now 7.3.9-1 aarch64 [installed]
python/now 3.10.4 aarch64 [installed,upgradable to: 3.10.5]
readline/stable,now 8.1.1 aarch64 [installed]
rhash/stable,now 1.4.2-2 aarch64 [installed,automatic]
root-repo/stable,now 2.0 all [installed]
ruby/stable,now 3.1.2 aarch64 [installed,automatic]
scdoc/stable,now 1.11.2-1 aarch64 [installed]
sed/stable,now 4.8-2 aarch64 [installed]
serf/stable,now 1.3.9-9 aarch64 [installed,automatic]
smalltalk/stable,now 3.2.91-14 aarch64 [installed]
sqlite/stable,now 3.38.5 aarch64 [installed]
subversion/now 1.14.2 aarch64 [installed,upgradable to: 1.14.2-1]
swi-prolog/stable,now 8.5.2 aarch64 [installed]
swift/stable,now 5.6.1-1 aarch64 [installed]
swig/stable,now 4.0.2-1 aarch64 [installed]
tar/stable,now 1.34 aarch64 [installed]
tcl/stable,now 8.6.11-1 aarch64 [installed]
termux-am-socket/stable,now 1.4.0 aarch64 [installed]
termux-am/stable,now 0.4 all [installed]
termux-auth/stable,now 1.4-2 aarch64 [installed,automatic]
termux-exec/stable,now 1:1.0 aarch64 [installed]
termux-keyring/stable,now 3.6 all [installed]
termux-licenses/stable,now 2.0-2 all [installed]
termux-tools/now 0.184 all [installed,upgradable to: 0.186]
texinfo/stable,now 6.8-1 aarch64 [installed]
tree/stable,now 2.0.2 aarch64 [installed]
tsu/stable,now 8.6.0 all [installed]
ttf-dejavu/stable,now 2.37-8 all [installed,automatic]
unbound/stable,now 1.15.0-1 aarch64 [installed]
unrar/stable,now 6.1.7 aarch64 [installed]
unzip/stable,now 6.0-7 aarch64 [installed]
update-info-dir/stable,now 6.8-4-0 all [installed,automatic]
utf8proc/stable,now 2.7.0 aarch64 [installed,automatic]
util-linux/stable,now 2.38 aarch64 [installed]
vim-python/now 8.2.4650 aarch64 [installed,upgradable to: 8.2.5050]
vim-runtime/now 8.2.4650 all [installed,upgradable to: 8.2.5050]
wget/stable,now 1.21.3-2 aarch64 [installed]
xorg-util-macros/stable,now 1.19.3 all [installed,automatic]
xorgproto/stable,now 2020.1-1 all [installed,automatic]
xsltproc/stable,now 1.1.35 aarch64 [installed,automatic]
xvidcore/stable,now 1.3.7 aarch64 [installed,automatic]
xxhash/stable,now 0.8.1 aarch64 [installed]
xz-utils/stable,now 5.2.5-1 aarch64 [installed]
zlib/stable,now 1.2.12 aarch64 [installed]
zstd/stable,now 1.5.2-1 aarch64 [installed,automatic]
]]
[[pip list
Package            Version
------------------ -----------
asciidoc           10.2.0
asgiref            3.5.2
beautifulsoup4     4.11.1
bs4                0.0.1
certifi            2022.5.18.1
cffi               1.15.0
charset-normalizer 2.0.12
Cython             0.29.30
Django             4.0.5
et-xmlfile         1.1.0
ffmpeg             1.4
gmpy2              2.1.2
idna               3.3
imageio            2.19.3
invoke             1.7.1
lxml               4.9.0
mpmath             1.2.1
networkx           2.8.3
numpy              1.22.4
openpyxl           3.0.10
pandas             1.4.2
pgen2              0.1.1
Pillow             9.1.1
pip                22.1.2
purepng            0.2.0
pybind11           2.9.2
pycparser          2.21
pydot              1.4.2
PyNaCl             1.5.0
pyparsing          3.0.9
python-dateutil    2.8.2
pytz               2022.1
pywifi             1.1.12
pyzmq              23.1.0
requests           2.28.0
setuptools         58.1.0
six                1.16.0
soupsieve          2.3.2.post1
sox                1.4.1
sqlparse           0.4.2
sympy              1.10.1
tk                 0.1.0
urllib3            1.26.9
wheel              0.37.1
xlrd               2.0.1
XlsxWriter         3.0.3
xlutils            2.0.0
xlwt               1.3.0
]]
]]]
golang doc/tutorial/book
  xxxxxxxx:TODO
[[无效！
  https://www.programming-books.io/essential/go/access-documentation-offline-37188510275c44b7902ad4816f81c062

Search 'Essential Go' Tip: press '/'.
Access documentation offline
suggest change
To browse full documentation locally, run:

$ godoc -http=localhost:9000
Then open localhost:9000 in the browser. It’ll show the same information as https://golang.org/doc/.

You can run guided tour locally with:

$ go get golang.org/x/tour/gotour
$ go tool tour
This runs https://tour.golang.org/ locally.

You can use godoc for quick reference. For example, to see documentation for fmt.Print:

$ godoc cmd/fmt Print
General help is also available from the command-line:

$ go help [command]
For example, to see documentation for go build use go help build.

Found a mistake? Have a question or improvement idea? Let me know.
Getting started/
Windows install and setup
Mac OS install and setup
Linux install and setup
Hello, World!
Take a guided tour
Access documentation offline
Run Go in online playground
GOPATH, GOROOT, GOBIN
Table Of Contents
1 Getting started
2 Basic types
3 Variables
4 Constants
5 Strings
6 Pointers
7 Arrays
8 Slices
9 Maps
10 Structs
11 Interfaces
12 Empty interface
13 if, switch, goto
14 for, while loops
15 range statement
16 Functions
17 Methods
18 Error handling
19 Defer
20 Panic and recover
21 Concurrency
22 Channels and select
23 Mutex
24 Packages
25 Files and I/O
26 Time and date
27 Command line arguments
28 Logging
29 Executing commands
30 Hex, base64 encoding
31 JSON
32 XML
33 CSV
34 YAML
35 SQL
36 HTTP Client
37 HTTP Server
38 Text and HTML templates
39 Reflection
40 Context
41 Package fmt
42 OS Signals
43 Testing
44 Calling C from GO with cgo
45 Profiling using go tool pprof
46 Cross compilation
47 Conditional compilation with build tags
48 Inlining functions
49 sync.Pool for better performance
50 gob
51 Plugin
52 HTTP server middleware
53 Protobuf in Go
54 Console I/O
55 Cryptography
56 Images (PNG, JPEG, BMP, TIFF, WEBP, VP8, GIF)
57 The Go Command
58 Testing code with CI services
59 Windows GUI programming
60 Contributors
]]
[[
https://libgen.lc/edition.php?id=140736692
Title: Pro Go: The Complete Guide to Programming Reliable and Efficient Software Using Golang Edition: 1

Author(s): Adam Freeman

Publisher: Apress

Year: 2022
http://library.lol/main/794bbfa1ed6c8c52ebed579924342e88
  http://62.182.86.140/main/3216000/794bbfa1ed6c8c52ebed579924342e88/Adam%20Freeman%20-%20Pro%20Go_%20The%20Complete%20Guide%20to%20Programming%20Reliable%20and%20Efficient%20Software%20Using%20Golang-Apress%20%282022%29.pdf
mkdir /sdcard/Download/wget_
cd /sdcard/Download/wget_
curl -L -C - -O http://62.182.86.140/main/3216000/794bbfa1ed6c8c52ebed579924342e88/Adam%20Freeman%20-%20Pro%20Go_%20The%20Complete%20Guide%20to%20Programming%20Reliable%20and%20Efficient%20Software%20Using%20Golang-Apress%20%282022%29.pdf
curl: (28) Failed to connect to 62.182.86.140 port 80 after 31389 ms: Connection timed out

RiseupVPN
curl: (7) Failed to connect to 62.182.86.140 port 80 after 5137 ms: No route to host

https://libgen.rocks/ads.php?md5=794bbfa1ed6c8c52ebed579924342e88
  https://libgen.rocks/get.php?md5=794bbfa1ed6c8c52ebed579924342e88&key=ITYM0SRW1RGB8UJB
curl -L -C - -O https://libgen.rocks/get.php?md5=794bbfa1ed6c8c52ebed579924342e88&key=ITYM0SRW1RGB8UJB
curl: (23) Failure writing output to destination
^C

选第一个服务器下载:libgen 上面选的第三个:libgen.rs(gen.lib.rus.ec)
curl -L -C - -o 'Pro Go--The Complete Guide to Programming Reliable and Efficient Software Using Golang(1ed)(2022)(Adam).pdf'  https://libgen.rocks/get.php?md5=794bbfa1ed6c8c52ebed579924342e88&key=ITYM0SRW1RGB8UJB
19kb?
是个网页，看来还得运行js
view /sdcard/Download/wget_/Pro\ Go--The\ Complete\ Guide\ to\ Programming\ Reliable\ and\ Efficient\ Software\ Using\ Golang(1ed)(2022)(Adam).pdf.html
用浏览器下载，没问题

[[

搜索:curl xhtml1-transitional.dtd
搜索:curl run js to get url
  https://curl.se/mail/archive-2016-05/0049.html
  https://forums.phpfreaks.com/topic/131111-execute-javascript-using-curl/
只能用浏览器下载，不能用curl?
确实不能！见下面
  [other_redirects]:
    Browsers typically support at least two other ways of redirects that curl does not: first the html may contain a meta refresh tag that asks the browser to load a specific URL after a set number of seconds, or it may use JavaScript to do it.

https://curl.se/docs/httpscripting.html
Docs Overview Project Protocols Releases Tool Who and Why
curl / Docs / Tool / HTTP Scripting
Related:
curl man page
Manual
FAQ
The Art Of Scripting HTTP Requests Using Curl
Background
This document assumes that you are familiar with HTML and general networking.

The increasing amount of applications moving to the web has made "HTTP Scripting" more frequently requested and wanted. To be able to automatically extract information from the web, to fake users, to post or upload data to web servers are all important tasks today.

Curl is a command line tool for doing all sorts of URL manipulations and transfers, but this particular document will focus on how to use it when doing HTTP requests for fun and profit. I will assume that you know how to invoke curl --help or curl --manual to get basic information about it.

Curl is not written to do everything for you. It makes the requests, it gets the data, it sends data and it retrieves the information. You probably need to glue everything together using some kind of script language or repeated manual invokes.

The HTTP Protocol
HTTP is the protocol used to fetch data from web servers. It is a simple protocol that is built upon TCP/IP. The protocol also allows information to get sent to the server from the client using a few different methods, as will be shown here.

HTTP is plain ASCII text lines being sent by the client to a server to request a particular action, and then the server replies a few text lines before the actual requested content is sent to the client.

The client, curl, sends an HTTP request. The request contains a method (like GET, POST, HEAD etc), a number of request headers and sometimes a request body. The HTTP server responds with a status line (indicating if things went well), response headers and most often also a response body. The "body" part is the plain data you requested, like the actual HTML or the image etc.

See the Protocol
Using curl's option --verbose (-v as a short option) will display what kind of commands curl sends to the server, as well as a few other informational texts.

--verbose is the single most useful option when it comes to debug or even understand the curl<->server interaction.

Sometimes even --verbose is not enough. Then --trace and --trace-ascii offer even more details as they show everything curl sends and receives. Use it like this:

curl --trace-ascii debugdump.txt http://www.example.com/
See the Timing
Many times you may wonder what exactly is taking all the time, or you just want to know the amount of milliseconds between two points in a transfer. For those, and other similar situations, the --trace-time option is what you need. It will prepend the time to each trace output line:

curl --trace-ascii d.txt --trace-time http://example.com/
See the Response
By default curl sends the response to stdout. You need to redirect it somewhere to avoid that, most often that is done with -o or -O.

URL
Spec
The Uniform Resource Locator format is how you specify the address of a particular resource on the Internet. You know these, you have seen URLs like https://curl.se or https://yourbank.com a million times. RFC 3986 is the canonical spec. And yeah, the formal name is not URL, it is URI.

Host
The host name is usually resolved using DNS or your /etc/hosts file to an IP address and that is what curl will communicate with. Alternatively you specify the IP address directly in the URL instead of a name.

For development and other trying out situations, you can point to a different IP address for a host name than what would otherwise be used, by using curl's --resolve option:

curl --resolve www.example.org:80:127.0.0.1 http://www.example.org/
Port number
Each protocol curl supports operates on a default port number, be it over TCP or in some cases UDP. Normally you do not have to take that into consideration, but at times you run test servers on other ports or similar. Then you can specify the port number in the URL with a colon and a number immediately following the host name. Like when doing HTTP to port 1234:

curl http://www.example.org:1234/
The port number you specify in the URL is the number that the server uses to offer its services. Sometimes you may use a proxy, and then you may need to specify that proxy's port number separately from what curl needs to connect to the server. Like when using an HTTP proxy on port 4321:

curl --proxy http://proxy.example.org:4321 http://remote.example.org/
User name and password
Some services are setup to require HTTP authentication and then you need to provide name and password which is then transferred to the remote site in various ways depending on the exact authentication protocol used.

You can opt to either insert the user and password in the URL or you can provide them separately:

curl http://user:password@example.org/
or

curl -u user:password http://example.org/
You need to pay attention that this kind of HTTP authentication is not what is usually done and requested by user-oriented websites these days. They tend to use forms and cookies instead.

Path part
The path part is just sent off to the server to request that it sends back the associated response. The path is what is to the right side of the slash that follows the host name and possibly port number.

Fetch a page
GET
The simplest and most common request/operation made using HTTP is to GET a URL. The URL could itself refer to a web page, an image or a file. The client issues a GET request to the server and receives the document it asked for. If you issue the command line

curl https://curl.se
you get a web page returned in your terminal window. The entire HTML document that that URL holds.

All HTTP replies contain a set of response headers that are normally hidden, use curl's --include (-i) option to display them as well as the rest of the document.

HEAD
You can ask the remote server for ONLY the headers by using the --head (-I) option which will make curl issue a HEAD request. In some special cases servers deny the HEAD method while others still work, which is a particular kind of annoyance.

The HEAD method is defined and made so that the server returns the headers exactly the way it would do for a GET, but without a body. It means that you may see a Content-Length: in the response headers, but there must not be an actual body in the HEAD response.

Multiple URLs in a single command line
A single curl command line may involve one or many URLs. The most common case is probably to just use one, but you can specify any amount of URLs. Yes any. No limits. You will then get requests repeated over and over for all the given URLs.

Example, send two GETs:

curl http://url1.example.com http://url2.example.com
If you use --data to POST to the URL, using multiple URLs means that you send that same POST to all the given URLs.

Example, send two POSTs:

curl --data name=curl http://url1.example.com http://url2.example.com
Multiple HTTP methods in a single command line
Sometimes you need to operate on several URLs in a single command line and do different HTTP methods on each. For this, you will enjoy the --next option. It is basically a separator that separates a bunch of options from the next. All the URLs before --next will get the same method and will get all the POST data merged into one.

When curl reaches the --next on the command line, it will sort of reset the method and the POST data and allow a new set.

Perhaps this is best shown with a few examples. To send first a HEAD and then a GET:

curl -I http://example.com --next http://example.com
To first send a POST and then a GET:

curl -d score=10 http://example.com/post.cgi --next http://example.com/results.html
HTML forms
Forms explained
Forms are the general way a website can present an HTML page with fields for the user to enter data in, and then press some kind of 'OK' or 'Submit' button to get that data sent to the server. The server then typically uses the posted data to decide how to act. Like using the entered words to search in a database, or to add the info in a bug tracking system, display the entered address on a map or using the info as a login-prompt verifying that the user is allowed to see what it is about to see.

Of course there has to be some kind of program on the server end to receive the data you send. You cannot just invent something out of the air.

GET
A GET-form uses the method GET, as specified in HTML like:

<form method="GET" action="junk.cgi">
  <input type=text name="birthyear">
  <input type=submit name=press value="OK">
</form>
In your favorite browser, this form will appear with a text box to fill in and a press-button labeled "OK". If you fill in '1905' and press the OK button, your browser will then create a new URL to get for you. The URL will get junk.cgi?birthyear=1905&press=OK appended to the path part of the previous URL.

If the original form was seen on the page www.example.com/when/birth.html, the second page you will get will become www.example.com/when/junk.cgi?birthyear=1905&press=OK.

Most search engines work this way.

To make curl do the GET form post for you, just enter the expected created URL:

curl "http://www.example.com/when/junk.cgi?birthyear=1905&press=OK"
POST
The GET method makes all input field names get displayed in the URL field of your browser. That is generally a good thing when you want to be able to bookmark that page with your given data, but it is an obvious disadvantage if you entered secret information in one of the fields or if there are a large amount of fields creating a long and unreadable URL.

The HTTP protocol then offers the POST method. This way the client sends the data separated from the URL and thus you will not see any of it in the URL address field.

The form would look similar to the previous one:

<form method="POST" action="junk.cgi">
  <input type=text name="birthyear">
  <input type=submit name=press value=" OK ">
</form>
And to use curl to post this form with the same data filled in as before, we could do it like:

curl --data "birthyear=1905&press=%20OK%20" http://www.example.com/when/junk.cgi
This kind of POST will use the Content-Type application/x-www-form-urlencoded and is the most widely used POST kind.

The data you send to the server MUST already be properly encoded, curl will not do that for you. For example, if you want the data to contain a space, you need to replace that space with %20, etc. Failing to comply with this will most likely cause your data to be received wrongly and messed up.

Recent curl versions can in fact url-encode POST data for you, like this:

curl --data-urlencode "name=I am Daniel" http://www.example.com
If you repeat --data several times on the command line, curl will concatenate all the given data pieces - and put a & symbol between each data segment.

File Upload POST
Back in late 1995 they defined an additional way to post data over HTTP. It is documented in the RFC 1867, why this method sometimes is referred to as RFC1867-posting.

This method is mainly designed to better support file uploads. A form that allows a user to upload a file could be written like this in HTML:

<form method="POST" enctype='multipart/form-data' action="upload.cgi">
  <input type=file name=upload>
  <input type=submit name=press value="OK">
</form>
This clearly shows that the Content-Type about to be sent is multipart/form-data.

To post to a form like this with curl, you enter a command line like:

curl --form upload=@localfilename --form press=OK [URL]
Hidden Fields
A common way for HTML based applications to pass state information between pages is to add hidden fields to the forms. Hidden fields are already filled in, they are not displayed to the user and they get passed along just as all the other fields.

A similar example form with one visible field, one hidden field and one submit button could look like:

<form method="POST" action="foobar.cgi">
  <input type=text name="birthyear">
  <input type=hidden name="person" value="daniel">
  <input type=submit name="press" value="OK">
</form>
To POST this with curl, you will not have to think about if the fields are hidden or not. To curl they are all the same:

curl --data "birthyear=1905&press=OK&person=daniel" [URL]
Figure Out What A POST Looks Like
When you are about to fill in a form and send it to a server by using curl instead of a browser, you are of course interested in sending a POST exactly the way your browser does.

An easy way to get to see this, is to save the HTML page with the form on your local disk, modify the 'method' to a GET, and press the submit button (you could also change the action URL if you want to).

You will then clearly see the data get appended to the URL, separated with a ?-letter as GET forms are supposed to.

HTTP upload
PUT
Perhaps the best way to upload data to an HTTP server is to use PUT. Then again, this of course requires that someone put a program or script on the server end that knows how to receive an HTTP PUT stream.

Put a file to an HTTP server with curl:

curl --upload-file uploadfile http://www.example.com/receive.cgi
HTTP Authentication
Basic Authentication
HTTP Authentication is the ability to tell the server your username and password so that it can verify that you are allowed to do the request you are doing. The Basic authentication used in HTTP (which is the type curl uses by default) is plain text based, which means it sends username and password only slightly obfuscated, but still fully readable by anyone that sniffs on the network between you and the remote server.

To tell curl to use a user and password for authentication:

curl --user name:password http://www.example.com
Other Authentication
The site might require a different authentication method (check the headers returned by the server), and then --ntlm, --digest, --negotiate or even --anyauth might be options that suit you.

Proxy Authentication
Sometimes your HTTP access is only available through the use of an HTTP proxy. This seems to be especially common at various companies. An HTTP proxy may require its own user and password to allow the client to get through to the Internet. To specify those with curl, run something like:

curl --proxy-user proxyuser:proxypassword curl.se
If your proxy requires the authentication to be done using the NTLM method, use --proxy-ntlm, if it requires Digest use --proxy-digest.

If you use any one of these user+password options but leave out the password part, curl will prompt for the password interactively.

Hiding credentials
Do note that when a program is run, its parameters might be possible to see when listing the running processes of the system. Thus, other users may be able to watch your passwords if you pass them as plain command line options. There are ways to circumvent this.

It is worth noting that while this is how HTTP Authentication works, many websites will not use this concept when they provide logins etc. See the Web Login chapter further below for more details on that.

More HTTP Headers
Referer
An HTTP request may include a 'referer' field (yes it is misspelled), which can be used to tell from which URL the client got to this particular resource. Some programs/scripts check the referer field of requests to verify that this was not arriving from an external site or an unknown page. While this is a stupid way to check something so easily forged, many scripts still do it. Using curl, you can put anything you want in the referer-field and thus more easily be able to fool the server into serving your request.

Use curl to set the referer field with:

curl --referer http://www.example.come http://www.example.com
User Agent
Similar to the referer field, all HTTP requests may set the User-Agent field. It names what user agent (client) that is being used. Many applications use this information to decide how to display pages. Silly web programmers try to make different pages for users of different browsers to make them look the best possible for their particular browsers. They usually also do different kinds of JavaScript, VBScript etc.

At times, you will see that getting a page with curl will not return the same page that you see when getting the page with your browser. Then you know it is time to set the User Agent field to fool the server into thinking you are one of those browsers.

To make curl look like Internet Explorer 5 on a Windows 2000 box:

curl --user-agent "Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)" [URL]
Or why not look like you are using Netscape 4.73 on an old Linux box:

curl --user-agent "Mozilla/4.73 [en] (X11; U; Linux 2.2.15 i686)" [URL]
Redirects
Location header
When a resource is requested from a server, the reply from the server may include a hint about where the browser should go next to find this page, or a new page keeping newly generated output. The header that tells the browser to redirect is Location:.

Curl does not follow Location: headers by default, but will simply display such pages in the same manner it displays all HTTP replies. It does however feature an option that will make it attempt to follow the Location: pointers.

To tell curl to follow a Location:

curl --location http://www.example.com
If you use curl to POST to a site that immediately redirects you to another page, you can safely use --location (-L) and --data/--form together. Curl will only use POST in the first request, and then revert to GET in the following operations.

Other redirects
Browsers typically support at least two other ways of redirects that curl does not: first the html may contain a meta refresh tag that asks the browser to load a specific URL after a set number of seconds, or it may use JavaScript to do it.
  ######################
  #########here:other_redirects#########
  ######################

Cookies
Cookie Basics
The way the web browsers do "client side state control" is by using cookies. Cookies are just names with associated contents. The cookies are sent to the client by the server. The server tells the client for what path and host name it wants the cookie sent back, and it also sends an expiration date and a few more properties.

When a client communicates with a server with a name and path as previously specified in a received cookie, the client sends back the cookies and their contents to the server, unless of course they are expired.

Many applications and servers use this method to connect a series of requests into a single logical session. To be able to use curl in such occasions, we must be able to record and send back cookies the way the web application expects them. The same way browsers deal with them.

Cookie options
The simplest way to send a few cookies to the server when getting a page with curl is to add them on the command line like:

curl --cookie "name=Daniel" http://www.example.com
Cookies are sent as common HTTP headers. This is practical as it allows curl to record cookies simply by recording headers. Record cookies with curl by using the --dump-header (-D) option like:

curl --dump-header headers_and_cookies http://www.example.com
(Take note that the --cookie-jar option described below is a better way to store cookies.)

Curl has a full blown cookie parsing engine built-in that comes in use if you want to reconnect to a server and use cookies that were stored from a previous connection (or hand-crafted manually to fool the server into believing you had a previous connection). To use previously stored cookies, you run curl like:

curl --cookie stored_cookies_in_file http://www.example.com
Curl's "cookie engine" gets enabled when you use the --cookie option. If you only want curl to understand received cookies, use --cookie with a file that does not exist. Example, if you want to let curl understand cookies from a page and follow a location (and thus possibly send back cookies it received), you can invoke it like:

curl --cookie nada --location http://www.example.com
Curl has the ability to read and write cookie files that use the same file format that Netscape and Mozilla once used. It is a convenient way to share cookies between scripts or invokes. The --cookie (-b) switch automatically detects if a given file is such a cookie file and parses it, and by using the --cookie-jar (-c) option you will make curl write a new cookie file at the end of an operation:

curl --cookie cookies.txt --cookie-jar newcookies.txt http://www.example.com
HTTPS
HTTPS is HTTP secure
There are a few ways to do secure HTTP transfers. By far the most common protocol for doing this is what is generally known as HTTPS, HTTP over SSL. SSL encrypts all the data that is sent and received over the network and thus makes it harder for attackers to spy on sensitive information.

SSL (or TLS as the latest version of the standard is called) offers a truckload of advanced features to allow all those encryptions and key infrastructure mechanisms encrypted HTTP requires.

Curl supports encrypted fetches when built to use a TLS library and it can be built to use one out of a fairly large set of libraries - curl -V will show which one your curl was built to use (if any!). To get a page from an HTTPS server, simply run curl like:

curl https://secure.example.com
Certificates
In the HTTPS world, you use certificates to validate that you are the one you claim to be, as an addition to normal passwords. Curl supports client- side certificates. All certificates are locked with a pass phrase, which you need to enter before the certificate can be used by curl. The pass phrase can be specified on the command line or if not, entered interactively when curl queries for it. Use a certificate with curl on an HTTPS server like:

curl --cert mycert.pem https://secure.example.com
curl also tries to verify that the server is who it claims to be, by verifying the server's certificate against a locally stored CA cert bundle. Failing the verification will cause curl to deny the connection. You must then use --insecure (-k) in case you want to tell curl to ignore that the server cannot be verified.

More about server certificate verification and ca cert bundles can be read in the SSLCERTS document.

At times you may end up with your own CA cert store and then you can tell curl to use that to verify the server's certificate:

curl --cacert ca-bundle.pem https://example.com/
Custom Request Elements
Modify method and headers
Doing fancy stuff, you may need to add or change elements of a single curl request.

For example, you can change the POST request to a PROPFIND and send the data as Content-Type: text/xml (instead of the default Content-Type) like this:

curl --data "<xml>" --header "Content-Type: text/xml"   --request PROPFIND example.com
You can delete a default header by providing one without content. Like you can ruin the request by chopping off the Host: header:

curl --header "Host:" http://www.example.com
You can add headers the same way. Your server may want a Destination: header, and you can add it:

curl --header "Destination: http://nowhere" http://example.com
More on changed methods
It should be noted that curl selects which methods to use on its own depending on what action to ask for. -d will do POST, -I will do HEAD and so on. If you use the --request / -X option you can change the method keyword curl selects, but you will not modify curl's behavior. This means that if you for example use -d "data" to do a POST, you can modify the method to a PROPFIND with -X and curl will still think it sends a POST . You can change the normal GET to a POST method by simply adding -X POST in a command line like:

curl -X POST http://example.org/
... but curl will still think and act as if it sent a GET so it will not send any request body etc.

Web Login
Some login tricks
While not strictly just HTTP related, it still causes a lot of people problems so here's the executive run-down of how the vast majority of all login forms work and how to login to them using curl.

It can also be noted that to do this properly in an automated fashion, you will most certainly need to script things and do multiple curl invokes etc.

First, servers mostly use cookies to track the logged-in status of the client, so you will need to capture the cookies you receive in the responses. Then, many sites also set a special cookie on the login page (to make sure you got there through their login page) so you should make a habit of first getting the login-form page to capture the cookies set there.

Some web-based login systems feature various amounts of JavaScript, and sometimes they use such code to set or modify cookie contents. Possibly they do that to prevent programmed logins, like this manual describes how to... Anyway, if reading the code is not enough to let you repeat the behavior manually, capturing the HTTP requests done by your browsers and analyzing the sent cookies is usually a working method to work out how to shortcut the JavaScript need.

In the actual <form> tag for the login, lots of sites fill-in random/session or otherwise secretly generated hidden tags and you may need to first capture the HTML code for the login form and extract all the hidden fields to be able to do a proper login POST. Remember that the contents need to be URL encoded when sent in a normal POST.

Debug
Some debug tricks
Many times when you run curl on a site, you will notice that the site does not seem to respond the same way to your curl requests as it does to your browser's.

Then you need to start making your curl requests more similar to your browser's requests:

Use the --trace-ascii option to store fully detailed logs of the requests for easier analyzing and better understanding

Make sure you check for and use cookies when needed (both reading with --cookie and writing with --cookie-jar)

Set user-agent (with -A) to one like a recent popular browser does

Set referer (with -E) like it is set by the browser

If you use POST, make sure you send all the fields and in the same order as the browser does it.

Check what the browsers do
A good helper to make sure you do this right, is the web browsers' developers tools that let you view all headers you send and receive (even when using HTTPS).

A more raw approach is to capture the HTTP traffic on the network with tools such as Wireshark or tcpdump and check what headers that were sent and received by the browser. (HTTPS forces you to use SSLKEYLOGFILE to do that.)
]]
[[js call curl，没有curl exec js
https://www.codegrepper.com/code-examples/javascript/curl+command+execute+js


Follow
GREPPER SEARCH WRITEUPS FAQ DOCS INSTALL GREPPER Log In Signup
All Languages >> Javascript >> curl command execute js

Search more code snippets...


“curl command execute js” Code Answer

how to run curl in javascriptjavascript by Ahmed on Sep 30 2021 Comment
3
1
#Since javascript already has functions for this purpose
2
#so it is not advisable to load an extra library for that
3
#you can achieve the same in native javascript like this
4
var url = "http://www.google.com";
5
​
6
var xhr = new XMLHttpRequest();
7
xhr.open("GET", url);
8
​
9
xhr.onreadystatechange = function () {
10
   if (xhr.readyState === 4) {
11
      console.log(xhr.status);
12
      console.log(xhr.responseText);
13
   }};
14
​
15
xhr.send();
16
​
17
#But still if you want to do it using curl in Node.js, it is possible
18
#Take a look at: https://github.com/JCMais/node-libcurl
19
var Curl = require( 'node-libcurl' ).Curl;
20
​
21
var curl = new Curl();
22
​
23
curl.setOpt( 'URL', 'http://www.google.com' );
24
curl.setOpt( 'FOLLOWLOCATION', true );
25
​
26
curl.on( 'end', function( statusCode, body, headers ) {
27
​
28
    console.info( statusCode );
29
    console.info( '---' );
30
    console.info( body.length );
31
    console.info( '---' );
32
    console.info( this.getInfo( 'TOTAL_TIME' ) );
33
​
34
    this.close();
35
});
36
​
37
curl.on( 'error', function ( err, errCode ) {
38
​
39
    //do something
40
​
41
    this.close();
42
});
43
​
44
curl.perform();
45
​
46
​
Add a Grepper Answer

Javascript answers related to “curl command execute js”

]]
]]
[[
Learning Go Programming--Build ScalableNext-Gen Web Application using Golang(2021)(Agarwal).pdf
https://libgen.lc/edition.php?id=138897632
Title: Learning Go Programming: Build ScalableNext-Gen Web Application using Golang (English Edition)

Author(s): Shubhangi Agarwal

Publisher: BPB Publications

Year: 2021
]]
[[
LEARN GOLANG QUICKLY AND PYTHON CODING PRACTICE EXERCISES--Coding For Beginners(2021)(TAM).pdf
https://libgen.lc/edition.php?id=138854497
Title: LEARN GOLANG QUICKLY AND PYTHON CODING PRACTICE EXERCISES: Coding For Beginners

Author(s): TAM, JJ

Year: 2021
]]
[[
Hands-on Go Programming--Learn Google’s Golang Programming, Data Structures, Error Handling and Concurrency(2021)(Singh).pdf
https://libgen.lc/edition.php?id=138898450
Title: Hands-on Go Programming: Learn Google’s Golang Programming, Data Structures, Error Handling and Concurrency ( English Edition)

Author(s): Sachchidanand Singh, Prithvipal Singh

Publisher: BPB Publications

Year: 2021
]]
[[
Everyday Golang(2021)(Ellis).epub
https://libgen.lc/edition.php?id=141510089
Title: Everyday Golang

Author(s): Alex Ellis

Year: 2021
]]
[[
Mastering Go--Create Golang production applications using network libraries, concurrency, machine learning, and advanced data structures(2ed)(2019)(Tsoukalos).pdf
  失败，以下也未下载
  重新启用.rs
https://libgen.lc/edition.php?id=138211158
Title: Mastering Go: Create Golang production applications using network libraries, concurrency, machine learning, and advanced data structures Edition: 2

Author(s): Mihalis Tsoukalos

Publisher: Packt Publishing City: Birmingham, UK

Year: 2019


]]
[[
Learn Data Structures and Algorithms with Golang(2019)(Kommadi).epub
curl -L -C - -O http://62.182.86.140/main/2450000/4c0cad9e4d8ed148ba3cdbe40d759bf6/%281290319%29%20Bhagvan%20Kommadi%20-%20Learn%20Data%20Structures%20and%20Algorithms%20with%20Golang-Packt%20Publishing%20Ltd.%20%282019%29.epub
https://libgen.lc/edition.php?id=138227983
Title: Learn Data Structures and Algorithms with Golang

Author(s): Bhagvan Kommadi

Publisher: Packt Publishing Ltd.

Year: 2019
]]
[[
Hands-On System Programming with Go--Build Modern and Concurrent Applications for Unix and Linux Systems Using Golang(2019)(Guerrieri).pdf
curl -L -C - -o 'Hands-On System Programming with Go--Build Modern and Concurrent Applications for Unix and Linux Systems Using Golang(2019)(Guerrieri).pdf' http://62.182.86.140/main/2503000/b04bde9d3ef60d0af833f9f2f7dd6ada/Alex%20Guerrieri%20-%20Hands-On%20System%20Programming%20with%20Go_%20Build%20Modern%20and%20Concurrent%20Applications%20for%20Unix%20and%20Linux%20Systems%20Using%20Golang-Packt%20Publishing%20%282019%29.pdf
https://libgen.lc/edition.php?id=138281640
Title: Hands-On System Programming with Go: Build Modern and Concurrent Applications for Unix and Linux Systems Using Golang

Author(s): Alex Guerrieri

Publisher: Packt Publishing

Year: 2019
]]
[[
Go Programming Cookbook--Over 85 recipes to build modular, readable, and testable Golang applications across various domains(2ed)(2019)(Safari).epub
curl -L -C - -o 'Go Programming Cookbook--Over 85 recipes to build modular, readable, and testable Golang applications across various domains(2ed)(2019)(Safari).epub' http://62.182.86.140/main/2847000/ae4c2dc519b526bda45f0709c15ce769/Safari%2C%20an%20O%27Reilly%20Media%20Company._%20Torres%2C%20Aaron%20-%20Go%20Programming%20Cookbook_%20Over%2085%20recipes%20to%20build%20modular%2C%20readable%2C%20and%20testable%20Golang%20applications%20across%20various%20domains%20-%20Second%20Edition-Packt%20.epub
https://libgen.lc/edition.php?id=138639045
Title: Go Programming Cookbook: Over 85 recipes to build modular, readable, and testable Golang applications across various domains - Second Edition Edition: 2nd edition

Author(s): Safari, an O'Reilly Media Company.; Torres, Aaron

Publisher: Packt Publishing

Year: 2019
]]
[[
Hands-On Software Architecture with Golang--Design and architect highly scalable and robust applications using Go(2018)(Raiturkar).pdf
curl -L -C - -o 'Hands-On Software Architecture with Golang--Design and architect highly scalable and robust applications using Go(2018)(Raiturkar).pdf' http://62.182.86.140/main/2503000/87a4ebdaf21fa6cc70009a3dd63194ee/Jyotiswarup%20Raiturkar%20-%20Hands-On%20Software%20Architecture%20with%20Golang_%20Design%20and%20architect%20highly%20scalable%20and%20robust%20applications%20using%20Go-Packt%20Publishing%20%282018%29.pdf
https://libgen.lc/edition.php?id=138281637
Title: Hands-On Software Architecture with Golang: Design and architect highly scalable and robust applications using Go

Author(s): Jyotiswarup Raiturkar

Publisher: Packt Publishing

Year: 2018
]]
[[
十本golang 相关
ls /sdcard/Download/wget_
.../Download/wget_ $ ls /sdcard/Download/wget_
.../Download/wget_ $ ls /sdcard/0my_files/book/lang/swift/
TheSwiftProgrammingLanguageSwift57.epub
.../Download/wget_ $
mkdir /sdcard/0my_files/book/lang/golang/
mv /sdcard/Download/wget_/* /sdcard/0my_files/book/lang/golang/
ls /sdcard/0my_files/book/lang/golang/
.../Download/wget_ $ ls /sdcard/0my_files/book/lang/golang/
'Everyday Golang(2021)(Ellis).epub'
'Go Programming Cookbook--Over 85 recipes to build modular, readable, and testable Golang applications across various domains(2ed)(2019)(Safari).epub'
'Hands-On Software Architecture with Golang--Design and architect highly scalable and robust applications using Go(2018)(Raiturkar).pdf'
'Hands-On System Programming with Go--Build Modern and Concurrent Applications for Unix and Linux Systems Using Golang(2019)(Guerrieri).pdf'
'Hands-on Go Programming--Learn Google’s Golang Programming, Data Structures, Error Handling and Concurrency(2021)(Singh).pdf'
'LEARN GOLANG QUICKLY AND PYTHON CODING PRACTICE EXERCISES--Coding For Beginners(2021)(TAM).epub'
'Learn Data Structures and Algorithms with Golang(2019)(Kommadi).epub'
'Learning Go Programming--Build ScalableNext-Gen Web Application using Golang(2021)(Agarwal).epub'
'Mastering Go--Create Golang production applications using network libraries, concurrency, machine learning, and advanced data structures(2ed)(2019)(Tsoukalos).pdf'
'Pro Go--The Complete Guide to Programming Reliable and Efficient Software Using Golang(1ed)(2022)(Adam).pdf'
'Pro Go--The Complete Guide to Programming Reliable and Efficient Software Using Golang(1ed)(2022)(Adam).pdf.html'
.../Download/wget_ $

]]
offline doc/tutorial tcl
offline doc/tutorial android
offline doc/tutorial swift
offline doc/tutorial prolog
offline doc/tutorial lisp
offline doc/tutorial c++
  tcl/swift/golang/c++/java/android doc/tutorial/book

pkg install swi-prolog
pkg install picolisp
pkg install golang-doc
  65.2MB 压缩包
  [[
pkg install golang-doc
.../txt_phone/txt $ pkg files golang-doc
/data/data/com.termux/files/usr/lib/go/doc
/data/data/com.termux/files/usr/lib/go/doc/go1.17_spec.html
/data/data/com.termux/files/usr/lib/go/doc/go_mem.html
/data/data/com.termux/files/usr/lib/go/doc/go1.18.html
/data/data/com.termux/files/usr/lib/go/doc/asm.html
/data/data/com.termux/files/usr/lib/go/doc/go_spec.html
  ]]
pkg install scdoc
pkg install asciidoc
  36MB
  [
Unpacking asciidoc (10.2.0) ...
Setting up xsltproc (1.1.35) ...
Setting up libxml2-utils (2.9.14) ...
Setting up docbook-xml (4.5-4) ...
Setting up docbook-xsl (1.79.2-1) ...
Setting up asciidoc (10.2.0) ...
Processing triggers for man (1.14.5-3) ...
  ]
pkg install asciidoctor
  42MB
pkg install catdoc
pkg install docbook-xml
pkg install docbook-xsl
pkg install docopt
pkg install panda3d
  26MB
pkg install doxygen
  36MB
pkg install ndk-multilib
  29MB -> 211MB
pkg install ndk-sysroot

pkg install pypy3
  13MB->83MB
pkg install opencv-python
pkg install opencv
  7MB->39MB
  [
Unpacking opencv (4.5.5-2) ...
Setting up littlecms (2.13.1-1) ...
Setting up openjpeg (2.5.0) ...
Setting up openjpeg-tools (2.5.0) ...
Setting up opencv (4.5.5-2) ...
  ]
pkg install ladspa-sdk
  [
Unpacking ladspa-sdk (1.17) ...
Setting up libflac (1.3.4) ...
Setting up libsndfile (1.1.0) ...
Setting up ladspa-sdk (1.17) ...
  ]

view others/app/termux/apt_pkg.txt
pip\|pkg\|apt
[[

apt update
apt-get update
apt list --upgradable
pkg install tsu
apt install curl
apt install wget
apt upgrade wget
more
  pkg install util-linux

pkg install ffmpeg
pkg install vim
#pkg install apk-tools
pkg install apktool
pkg install clang
pkg install libxml2
pkg install libxslt
pip install lxml


pkg install git
pkg install hub

pkg install openssh
pkg install patch
pkg install diff


pkg install unrar
pkg install p7zip
pkg install tree

pkg install gettext
  16MB
  [
Unpacking gettext (0.21-5) ...
Setting up libcroco (0.6.13-7) ...
Setting up gettext (0.21-5) ...
  ]
pkg install bash-completion

pkg install cmake
pkg install tcl
	tclsh
	info patchlevel

pkg install hexedit
pkg install man

pkg install lftp
pkg install pure-ftpd

pkg install iconv
pkg install dx
pkg install ecj
pkg install graphviz
pkg install autoconf
pkg install automake

#pkg install libedit-dev
  [
  Package libedit-dev is not available, but is referred to by another package.
  This may mean that the package is missing, has been obsoleted, or
  is only available from another source
  However the following packages replace it:
    libedit

    E: Package 'libedit-dev' has no installation candidate
    Reading package lists...
  ]
pkg install libedit


pip install bs4
pip install scipy
  #fail
pip install Django
pip --timeout 100 --retries 40 install Django
  8MB
pip install purepng
pip install networkx
pip --timeout 100 --retries 40 install networkx
  2MB
pip install pydot
py -m pip  --default-timeout=100 install --upgrade pip
pip --default-timeout=1000 install networkx
pip --timeout 100 --retries 10 install imageio
  pillow
py -m pip install requests
pip --timeout 100 --retries 40 install requests

pip install invoke
  pip install cffi
  pip install pybind11
  pip install cython
pip --timeout 100 --retries 40 install invoke


pip install openpyxl
pip install xlutils
  pip install xlrd
  pip install xlwt
pip install xlsxwriter

pip install pgen2


pip3 install cairo ffmpeg sox
ERROR: Could not find a version that satisfies the requirement cairo (from versions: none)
ERROR: No matching distribution found for cairo
pip3 install ffmpeg sox
pip3 install manimlib
  requirements are
    cairo
    ffmpeg
    sox
pip --timeout 100 --retries 40 install manimlib
  [需要scipy，失败
  ]
]]


view others/app/termux/apt_pkg_dpkg__usage.txt
pkg list-installed > /sdcard/0my_files/tmp/pkg-list-installed.txt
pkg list-all > /sdcard/0my_files/tmp/pkg-list-all.txt

view /sdcard/0my_files/tmp/pkg-list-installed.txt
view /sdcard/0my_files/tmp/pkg-list-all.txt
pkg show swi-prolog
Description: Most popular and complete prolog implementation
pkg files root-repo
/data/data/com.termux/files/usr/etc/apt/sources.list.d
/data/data/com.termux/files/usr/etc/apt/sources.list.d/root.list
/data/data/com.termux/files/usr/share/doc/root-repo/LICENSE

pkg show picolisp
Description: Lisp interpreter and application server framework
pkg show golang-doc
Description: Go programming language - documentation
pkg show rust-docs
Description: Rust documentation
pkg show rust
Description: Systems programming language focused on safety, speed and concurrency
pkg show rustc-nightly
Description: Rust compiler and utilities (nightly version)
pkg show rustc-dev
Description: developer compiler libs
pkg show rust-std-wasm32
Description: rust std for wasm32-unknown-unknown target
pkg show rust-nightly-wasm32-unknown-unknown
Description: rust std for wasm32-unknown-unknown target
  ??有问题？
pkg show scdoc
Description: Small man page generator
pkg show valadoc
Description: API documentation generator for vala
pkg show asciidoc
Description: Text document format for short documents, articles, books and UNIX man pages.
pkg show asciidoctor
Description: An implementation of AsciiDoc in Ruby
pkg show catdoc
Description: Program which reads MS-Word file and prints readable ASCII text to stdout
pkg show docbook-xml
Description: A widely used XML scheme for writing documentation and help
pkg show docbook-xsl
Description: XML stylesheets for Docbook-xml transformations
pkg show docker-compose
Description: Compose is a tool for defining and running multi-container Docker applications.
pkg show docker
Description: Set of products that use OS-level virtualization to deliver software in packages called containers.
pkg show docopt
Description: Command line arguments parser for C++11 and later
pkg show pandoc
Description: Universal markup converter
pkg show panda3d
Description: A framework for 3D rendering and game development for Python and C++ programs

pkg show doxygen
Description: A documentation system for C++, C, Java, IDL and PHP
pkg show ladspa-sdk
Description: Linux Audio Developer's Simple Plugin API
pkg show vamp-plugin-sdk
Description: An API for audio analysis and feature extraction plugins
pkg show c-script
Description: Compile and execute C "scripts" in one go!
pkg show tcl
Description: Powerful but easy to learn dynamic programming language

dpkg -S javac
pkg show openjdk-17
Description: Java development kit and runtime

pkg show ndk-multilib
Description: Multilib binaries for cross-compilation
pkg show ndk-sysroot
Description: System header and library files from the Android NDK needed for compiling C programs

pkg show pypy
pkg show libarrow-python
Description: Arrow CPython extensions
pkg show libarrow-cpp
Description: C++ libraries for Apache Arrow
pkg show libsnappy
Description: A compression/decompression library
pkg show opencv-python
Description: Python bindings for OpenCV
pkg show opencv
Description: Open Source Computer Vision Library
pkg show pypy3
Description: A fast, compliant alternative implementation of Python 3
pkg show pypy
Description: A fast, compliant alternative implementation of Python
pkg show python-apt
Description: Python bindings for APT
pkg show python-tldp
Description: Tools for publishing from TLDP sources
pkg show tsduck-python
Description: Python bindings for TSDuck
pkg show libtsduck
Description: An extensible toolkit for MPEG transport streams


jdk vs ndk
    Android sdk?
    golang.doc?

]]
[[sdk/jdk/ndk/apk

https://bytescout.com/blog/sdk-vs-jdk-vs-ndk-vs-apk.html

Home/Blog/SDK vs JDK vs NDK vs APK
SDK VS JDK VS NDK VS APK
If you are into software development, you might have heard about the terms SDK, JDK, NDK, and APK. All of them are related to software or app development in some way. However, there are a few differences that separate them from each other. This article has compared all these terms and explained everything you need to know about them.

SDK vs JDK vs NDK vs APK
SDK
SDK (Software development Kit) is a toolkit where developers can create new applications for different platforms. An SDK consists of libraries, frameworks, IDE, APIs, and many other features. Developers use it to build apps with additional functionality, and the whole process is easier and faster than developing everything from scratch. It’s just like building your house with pre-built materials and furniture.

JDK
JDK stands for Java Development Kit, and it is also used for developing software programs and applets. The primary thing to note here is that it is a Java-based environment and offers you different libraries and tools necessary for Java.

Features of JDK
A JDK consists of several resources, some of which are mentioned below:

1. JRE(Java Runtime Environment)
Any program or application requires a suitable runtime environment for it to execute. And JRE provides that to Java applications. It consists of JVM(Java virtual machine), Java class libraries, and the Java class loader.

2. Interpreter
The job of an interpreter is to convert a high-level language into a low-level language. An interpreter reads the code written by the user one by one and then converts it into the other format. If by chance any error occurs, it stops working.

3. Compiler
A compiler is similar to an interpreter and converts programming language into machine language. However, the difference lies in the interpretation. A compiler interprets the source code at once and doesn’t stop if any error occurs.

4. JAR(Java Archive)
To understand JAR clearly, let us suppose it as a zip file. We know a zip file contains several compressed versions of the files, and we can unzip it whenever we like. Similarly, a JAR is a file format like .zip, which compresses multiple files like source code, XML files, images, sounds, and security certificates.

NDK
Most of the apps we use are usually written in Java and are created with the help of a JDK. However, Java has its limitations. It can cause some performance or memory-based problems. Also, if someone is not familiar with Java, it becomes pretty difficult for them to create an Android application. This is where NDK or Native Development Kit comes into play.

An NDK provides a development kit like a JDK but not in the Java language. Codes in NDK are written in C or C++. But be aware that it is not recommended to code in NDK unless it is crucial for your application.

Features of NDK
1. Tools for Development
NDK contains pre-built tools such as libc, libz, libm, and APIs that help you work with your sources without facing any trouble.

2. Documentation
An NDK also consists of documentation that helps you understand how to create your android apps.

APK
APK or Android Package is a file format like .zip or .pdf that Android uses to install a particular app. If you use a smartphone, you already have installed many APK files. These APK files contain essential items to help your app install without errors. Further, an APK file can be considered as another version of JAR files because most apps are built using JDK.

SDK vs JDK vs NDK vs APK
Coming to the differences among these four terms. The first difference is in the name. While SDK, JDK, and NDK are development kits used to build applications and software products, APK is just a by-product of a development kit, most probably Android Studio. It is not a development kit in itself.

The second difference between them is that JDK and NDK are examples of SDKs that use different languages and work on various platforms.

The third and final difference is between JDK and NDK, and it lies in the languages they use to create applications. JDK uses Java for developing and testing programs, whereas NDK uses C or C++.

Conclusion
In this article, we tried to overview SDK, NDK, JDK, and APK. We also highlighted the differences between these four terms and their several features.



]]
]]]
