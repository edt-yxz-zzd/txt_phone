xls文件-python库
  python xls
https://owlcation.com/stem/8-Ways-to-Use-Python-with-Excel
  openpyxl
    excel (2007~) === .xlsx === OOXML standard
    read&write
  pyxll
    #xxx 商业；excel add-in；不是python库！
  xlrd
    excel (1995~2003) === .xls
    read
  xlwt
    excel (1995~2003) === .xls
    write
  xlutils
    依赖: xlrd xlwt
  pandas
    #xxx 太大？或 手机安装不了？
  pywin32
    #xxx windows
  xlsxwriter
    excel (2007~) === .xlsx === OOXML standard
    write
=======
=======
=======
=======
pip install openpyxl
===
openpyxl.worksheet._read_only.ReadOnlyWorksheet
openpyxl.worksheet._write_only.WriteOnlyWorksheet
===
from openpyxl import Workbook

#create workbook
wb = Workbook()

#create excel file
xl_file = 'tut_openpyxl.xlsx'

#get the active worksheet (e.g. sheet1)
ws1 = wb.active

#add content to the sheet
for row in range(1, 40):
    ws1.append(range(600))

#save the file
wb.save(filename = xl_file)
===
from openpyxl import load_workbook

#get handle on existing file
wk = load_workbook(filename='countries.xlsx')
#get active worksheet or wk['some_worksheet']
ws = wk.active

#loop through range values
for t in range(1,20):
    range = 'A'+str(t)
    print(ws[range].value)
===
===
pip install xlrd
===
import xlrd
xlrd.open_workbook(excelFilePath)
sheetNames = xlWorkbook.sheet_names()
xlSheet = xlWorkbook.sheet_by_name(sheetNames[0])

# Or grab the first sheet by index
xlSheet = xlWorkbook.sheet_by_index(0)

# Get the first row of data
row = xlSheet.row(0)

#to enumerate through all columns and rows
#get the number of rows in the sheet
numColumns = xlSheet.ncols

for rowIdx in range(0, xlSheet.nrows):    # Iterate through rows

    print ('Row: %s' % rowIdx) # Print the row number
    for colIdx in range(0, numColumns):  # Iterate through the columns
        cell = xlSheet.cell(rowIdx, colIdx) # Get cell object by row, col
        print ('Column: [%s] cell: [%s]' % (colIdx, cell))
===
pip install xlwt
===
import xlwt
from datetime import datetime

style0 = xlwt.easyxf('font: name Times New Roman, color-index red, bold on',
    num_format_str='#,##0.00')
style1 = xlwt.easyxf(num_format_str='D-MMM-YY')

wb = xlwt.Workbook()
ws = wb.add_sheet('Hello world')
ws.write(0, 0, 999.99, style0)
ws.write(1, 0, datetime.now(), style1)
ws.write(2, 0, 1)
ws.write(2, 1, 1)
ws.write(2, 2, xlwt.Formula("A3+B3"))
wb.save(HW.xls')
===
pip install xlutils
===
===
pip install xlsxwriterp
pip install pandas
===
import pandas as pd

# Create a Pandas dataframe from the data.
df = pd.DataFrame({'Data': [10, 20, 30, 20, 15, 30, 45]})
# Create a Pandas Excel writer using XlsxWriter as the engine or openpyxl and xlwt for older versions of Excel.
writer = pd.ExcelWriter('pandas xl test.xlsx', engine='xlsxwriter')
# Convert the dataframe to an XlsxWriter Excel object.
df.to_excel(writer, sheet_name='Test')
# Close the Pandas Excel writer and output the Excel file.
writer.save()
===
===
pip install xlsxwriter
===
import xlsxwriter

# create a Excel file
xlWb = xlsxwriter.Workbook('simpleXl.xlsx')
xlWks = xlWb.add_worksheet()

# add some data
groceries = (
    ['apples', 2.00],
    ['bread',  1.00],
    ['meat',  15.00],
    ['celery', 1.00],
)
row = 0
col = 0
# add groceries data to sheet
for item, cost in (groceries):
    xlWks.write(row, col,     item)
    xlWks.write(row, col + 1, cost)
    row += 1

# Write a total using a formula.
xlWks.write(row, 0, 'Total')
xlWks.write(row, 1, '=SUM(B1:B4)')

xlWb.close()
xlWb.close()
===
===

































































































=========
import xlrd
fnm = '/sdcard/0my_files/apk/游戏/街机/FC游戏列表(中英文).XLS'
bk = xlrd.open_workbook(fnm)
#with xlrd.open_workbook(fnm) as bk:
nms = bk.sheet_names()
#ls = bk.sheets()
assert nms == ['Mesky_Down_Address']
[shnm] = nms
sh = bk.sheet_by_name(shnm)
nr = sh.nrows
nc = sh.ncols
assert (nr, nc) == (1982, 2)
cn2rom = {}
for ri in range(nr):
  row = []
  for ci in range(nc):
    ce = sh.cell(ri, ci)
    #print(ce)
    assert ce.ctype == 1 == xlrd.XL_CELL_TEXT
    assert type(ce.value) is str
    row.append(ce.value)
  [游戏中文名, ROM压缩文件名] = row
  """
  text:'游戏名称'
  text:'ROM 名称'
  text:'100万美元-幻之帝王篇 (Maboroshi No Teiou Hen) 日版'
  text:'100_Man_$_Kid-Maboroshi_No_Teiou_Hen(J).zip'
  """
  print(row)
  cn2rom[游戏中文名] = ROM压缩文件名
assert len(cn2rom) == nr
del cn2rom['游戏名称']
assert len(cn2rom) == 1981




=========
e script/extract_xls_game_rom_names.py
view /sdcard/0my_files/apk/游戏/街机/FC游戏列表(中英文).XLS.out.txt
view others/app/app.txt
  http://m.rsdown.cn/game/25587.html
    FC游戏完整版(合集)全集打包1981个rom游戏.rar
      231 MB
=========

ifnm = '/sdcard/0my_files/apk/游戏/街机/FC游戏列表(中英文).XLS'
ofnm = f'{ifnm}.out.txt'

import xlrd
from pprint import pprint
#bk = xlrd.open_workbook(ifnm)
with xlrd.open_workbook(ifnm) as bk:
    nms = bk.sheet_names()
    #ls = bk.sheets()
    assert nms == ['Mesky_Down_Address']
    [shnm] = nms
    sh = bk.sheet_by_name(shnm)
    nr = sh.nrows
    nc = sh.ncols
    assert (nr, nc) == (1982, 2)
    cn2rom = {}
    dup = {}
    for ri in range(nr):
      row = []
      for ci in range(nc):
        ce = sh.cell(ri, ci)
        #print(ce)
        assert ce.ctype == 1 == xlrd.XL_CELL_TEXT
        assert type(ce.value) is str
        row.append(ce.value)
      [游戏中文名, ROM压缩文件名] = row
      """
      text:'游戏名称'
      text:'ROM 名称'
      text:'100万美元-幻之帝王篇 (Maboroshi No Teiou Hen) 日版'
      text:'100_Man_$_Kid-Maboroshi_No_Teiou_Hen(J).zip'
      """
      print(row)
      if 游戏中文名 in cn2rom:
        if 游戏中文名 not in dup:
          dup[游戏中文名] = [cn2rom[游戏中文名]]
        dup[游戏中文名].append(ROM压缩文件名)
      cn2rom[游戏中文名] = ROM压缩文件名
#if dup: pprint(dup)
assert len(dup) == 1
assert dup == {
    '未来小子 (Metal Fighter) 美版':
        ['Metal Fighter.zip'
        ,'Metal.Fighter(Unl)(Joy.Van)(Asia).zip']
    }
cn2rom.update({
    '未来小子 (Metal Fighter) ':
        'Metal Fighter.zip'
    ,'未来小子 (Metal Fighter) 美版':
        'Metal.Fighter(Unl)(Joy.Van)(Asia).zip'
    })
assert len(cn2rom) == nr
del cn2rom['游戏名称']
assert len(cn2rom) == 1981



cn2rom
ofnm
from pprint import pprint
from seed.for_libs.for_pprint.pprint1 import pprint1
with open(ofnm, 'x', encoding='utf8') as fout:
    print('cn2rom = \\', file=fout)
    #pprint(cn2rom, stream=fout)
    pprint1(cn2rom, file=fout)


