
===
ML Manager
  过气
===
Applications Info
  good:F_Droid:2个:100KB上下
  但信息不能复制？？差评！
App Manager
  F_Droid
  很大
  17.2 MiB @ver:3.1.6



===

[[[
Applications Info
  good:F_Droid:2个:100KB上下
  但信息不能复制？？差评！
App Manager
  F_Droid
  很大
  17.2 MiB @ver:3.1.6
<<==:
https://android.stackexchange.com/questions/28767/view-apps-full-package-name
  good




===
howto termux query Android status?
howto termux list all Android apps?
  查无:
  termux 需要 root权限?
    但 只读明显不需要 比如 ML_Manager
      但ML_Manager旧版在新机上有毛病，新版在google_play(gihlthub只有2016版)
  view others/app/查看app包名和启动页Activity.txt
    均告失败
  需求源起:<<==:
  e others/app/app.txt
    F_Droid::游戏
      @20240627


===
howto java get Android app package names?
  App Inspector
  App Manager
  Package Name Viewer
  https://technastic.com/app-package-name-android/
    https://technastic.com/run-adb-commands-android-without-pc/
  Using ADB Command via aShell
    Shizuku+aShell
https://apt.izzysoft.de/fdroid/index/apk/moe.shizuku.privileged.api
https://apt.izzysoft.de/fdroid/repo/moe.shizuku.privileged.api_1049.apk


https://android.stackexchange.com/questions/28767/view-apps-full-package-name
  Applications Info
    good:F_Droid:2个
  Package Name Viewer 2
  App Manager
  Link2SD
    https://link2sd.fileplanet.com/apk/download
    https://secure.downloadfp.com/android/v3/US/com.buak.Link2SD.apk?st=G0uWRuAnzaf9_ehOvzZZAQ&e=1719589414
    广告插件！

F_Droid分享:
App Manager - Android package manager (A full-featured open source package manager for android.)
https://f-droid.org/packages/io.github.muntashirakon.AppManager/

[[
https://technastic.com/app-package-name-android/

5 Ways to Find App Package Name on Android
By Rakesh Shukla
Updated on June 23, 2024
App package name or APK (Android Application Package) is a unique identifier assigned to every Android app. This package name acts as an application ID that distinguishes it from other apps installed on the device or hosted at the Google Play Store. You can find the app package name of an Android app in the Play Store URL, using a package name viewer app, and via ADB commands. I have discussed these 5 methods in this tutorial.


When developers create apps, they assign a package name to them. This package name serves as the foundation of the app’s identity and is used by the operating system to manage and run the app. It also allows us to identify and differentiate apps on our devices. Whether you want to sideload apps, pull or push APK, or uninstall or freeze apps using ADB, having package names is mandatory.

The format of a package name follows a specific convention which includes the following three elements:

It usually begins with a top-level domain (usually ‘com’, ‘org’, ‘in’, ‘app’, etc.). However, a domain is not mandatory for app package names.
The domain is followed by the company or developer’s name.
The package name concludes with the app’s name itself.
Now take a look at the app package names of some of the most popular Android apps for a better understanding:


com.facebook.katana
org.telegram.messenger
com.android.chrome
com.google.maps
Below, we will discuss the various methods to find an Android app’s package name.

Table of Content
1. Via the App URL in the Google Play Store
2. Using a Third-Party App
3. Using ADB Command via aShell
4. Via ADB Commands
Get the List of App Package Names using ADB
5. Using ADB AppControl and UAD GUI
1. Via the App URL in the Google Play Store

The Google Play Store is a one-stop shop for all Android apps. It is also the most convenient and reliable method to find the package name of an app. Follow the steps below to easily locate the package name of any app on your Android device using the Google Play Store:

Open the Google Play Store on your Android device.
Tap on the search bar, and type the name of the app whose package name you want to find. Type in the name of the app or use related keywords.
Click the app in the list of results that appear. This will take you to its official page in the Google Play Store.
On this page, tap the 3-dot icon at the top right corner of the screen and select the Share option.app share option in google play store
Now, you can share this app’s URL via Share Menu. Alternatively, you can tap the Copy option to save it to the clipboard. The app URL contains the app package name after “id=“.

https://play.google.com/store/apps/details?id=com.google.android.gm
If you use a computer, open the Google Play Store in your web browser. Search for the app whose package name you want to know. You’ll find the app package in the app URL itself as shown below.app package name in google play store url

2. Using a Third-Party App
If you are an app developer who needs package names too frequently, the Google Play Store method may not suffice. In such a case, using a third-party app is a quick and easy way to find the package name of any app installed on your device.


Download and install App Inspector, App Manager, or Package Name Viewer from the Play Store.
When the app is installed, open it from the app drawer.
The app will show you a list of all apps along with their package names.app package name viewer
Tap the desired app to find its package name. Select the Copy option to copy the name.
3. Using ADB Command via aShell

The Google Play Store has several terminal apps that allow you to use ADB commands. Until 2022, terminal apps required root permission to function. However, with the advent of Shizuku, things have become easier. You can also execute ADB commands on Android devices without root.

Let’s check out how to find the package names using a Shizuku-supported app called aShell.

Set up Shizuku on your Android phone.
Download and install the aShell terminal app from F-Droid (free) or Google Play Store (paid).
Make sure Shizuku is running in the background and launch aShell. Select Allow all the time option when prompted to Allow aShell access to Shizuku.allow ashell to access shizuku
Type the following command in the aShell Command Box and tap the Enter key on your phone’s keyboard.

pm list packages | grep '<app-name>'
Example: pm list packages | grep 'telegram'
You’ll have the app’s package name on your phone’s screen.find android app package name using ashell
That’s it! You can also use other ADB commands listed in the next section.

Related posts
How to Fix ADB Device Unauthorized Error on Android
4. Via ADB Commands

Another way to find the app package name on your Android device using ADB. This method involves using your computer and a USB cable to connect to your device.

The ADB method may require technical knowledge but can be useful if other methods don’t work.

Launch a PowerShell or Terminal window with the path of the ‘platform-tools’ folder.
Make sure to increase the display timeout of your phone to 5 or 10 minutes. ADB can’t detect your device if its screen is locked.
Connect your Android device to your computer using a USB cable or ADB over Wi-Fi.
Now execute the adb devices command in Windows PowerShell or the macOS Terminal window.
You’ll see an alphanumeric value representing your device under the list of attached devices.adb devices command in windows powershell
Open the app whose name you need to find. Now type the following command and press the Enter key to execute it.

adb shell
When the ADB Shell is invoked, paste the following command into the command window after the $ sign.

dumpsys window | grep -E 'mCurrentFocus'
As soon as you hit Enter, ADB will get the app package name of the app that is currently open on your Android phone. In my case, I opened Telegram on my device.get the package name of app in focus using adb

There’s another nifty ADB command to get the package names by keyword. For example, you can use the following command to find Telegram’s package name.


adb shell pm list packages | grep 'telegram'
find the android app package names by group using adb

Get the List of App Package Names using ADB

In case you want to find the list of package names of all Android apps installed on your device, you can use the adb shell pm list packages. There are various filters you can add to this command to get more specific results.

Get Package Names by Group
For instance, you can get the list of all Google apps package names using the ‘grep’ parameter with a keyword (‘google’, for example) filter.


adb shell pm list packages | grep 'google'
You can replace ‘google’ with ‘android’, ‘samsung’, ‘mi, ‘xiaomi’, ‘coloros’, ‘oneplus’, etc. to list all app packages with the provided keyword.

List All System App Packages
The following command will give you the list of all system apps installed on your Android device.


adb shell pm list packages -s
List All 3rd-Party App Packages
If you want ADB to filter all third-party apps on your phone and list their package names, you can execute the following command.


adb shell pm list packages -3
Get the List of All Apps with Their Package Names
By using -f as a filter, you can get the list of all installed apps along with the associated package names.

5. Using ADB AppControl and UAD GUI
In most cases, we want the package names of apps we want to uninstall or disable on our Android phone. Debloater tools like ADB AppControl and Universal Aandroid Debloater not only show the package names but also let you uninstall them with a single click.

Download ADB AppControl or Universal Android Debloater on your computer. Connect your Android device with USB debugging enabled to your computer via a USB cable. The tool will show all system and 3rd-party apps installed on your device with their package names. ADB AppControl even allows you to copy package names. Hover the mouse pointer on an app, right-click on it, and select Copy package name from the context menu.adb app control copy app package name

]]


[[
https://technastic.com/run-adb-commands-android-without-pc/

How to Run ADB Commands on Android without PC or Root
With app like aShell and Web ADB, you can execute use ADB commands directly on your Android phone without a computer.
By Rakesh Shukla
Updated on June 26, 2024

Do you need to use an ADB command on your Android phone or tablet to perform a task but don’t have access to a computer? Earlier, it was impossible to run commands on an Android device itself without superuser permissions. Thankfully, Terminal emulator apps like aShell (Shizuku) and Termux allow you to use ADB natively. This tutorial will explore different methods to run ADB on Android devices without root including Termux, aShell, and WebADB app.


Let’s check out different methods to harness the power of ADB on Android devices without a PC.

Table of Content
Using Shizuku-supported aShell App
Setting up ADB in Termux (Root)
Using ADB Commands on Android without Root
Using Shizuku-supported aShell App

Shizuku acquires system APIs and permissions through wireless debugging and passes them to supported apps. Many apps require root only to access certain Android permissions so you can modify your Android device. You can use the Shizuku-supported apps to do amazing things without rooting your device. Besides modifying, tweaking, and customizing your Android phone, Shizuku also makes it possible to use ADB on Android devices without root.

Download and install Shizuku on your Android device.
Enable the Developer options on your device.
Open Shizuku and tap the Pairing button under the ‘Start via Wireless debugging’ section.pairing option in shizuku
Shizuku will request notification permission. To grant it, tap Notification options and allow notifications for Shizuku.allow notifications permission to shizuku
Having allowed notifications, tap the back button on the navigation bar and select Developer options.developer options in shizuku
 Go to the Debugging section, tap Wireless Debugging, and enable the feature. Next, select the Pair device with pairing code option.pair shizuku with pairing code via wireless debugging
A pop-up with a pairing code will appear and you’ll receive a notification from Shizuku requesting to enter the 6-digit code.enter wireless debugging pairing code for shuzuku
Type the Wi-Fi pairing code and tap the Send option.
In Shizuku, tap the Start button. The app will run a script and start the Shizuku service in the background.
Exit Shizuku and install aShell from the Play Store (paid) or F-Droid (free).
Launch aShell and grant it access to Shizuku.allow ashell to access shizuku
That’s it! You can now use the aShell command box to execute ADB and Shell commands on your device without root. For instance, to check the health of your phone’s battery, type “dumpsys battery” and press the Send or Enter button.
Setting up ADB in Termux (Root)
It’s possible to install ADB and Fastboot on Android by cloning any of the 3 Gits listed below using a terminal emulator like Termux.


ADB Fastboot Termux
Termux ADB
Termux ADB Fastboot
Now let’s see how you can install ADB and Fastboot on an Android phone or tablet.

Download and install Termux from the Play Store.
Having installed the app, you need to grant Storage permission to Termux. To do so, go to Settings > Apps > Termux and select Permissions. Then tap Storage and select Allow.termux storage permission android
Now open Termux, type the following, and tap the Enter key on the keyboard.

pkg update
Now, execute the following command to upgrade Termux packages.

pkg upgrade
Since ADB Fastboot Termux is a Python-based script, we must install Python on the Android device. Issue the following command in Termux.

pkg install python
install python on android via termux

While installing Python on your Android device, you might be prompted to authorize the installation by typing ‘Y‘ (for Yes).
Since we have to clone Git from GitHub, you’ll need to install another package called Git using this command.

pkg install git
install git and android via termux

It’s time to clone the ADB Fastboot Termux Git using Termux.

git clone https://github.com/freetheorange905/adb-fastboot-termux.git
adb fastboot git clone termux android

Now that the ADB and Fastboot Git have been cloned to your Android device we need to change the path directory path using cd as shown below (see the screenshot above).

cd adb-fastboot-termux
Finally, execute the following command in Termux.

python af.py
As soon as you tap the Enter key, a new screen will appear and you will be prompted to type 1 to install ADB and Fastboot on your Android device, and 2 to uninstall them. Type 1 and tap the Enter key.adb fastboot installed in termux android
When ADB and Fastboot are installed, you’ll get a message saying, “Tools were successfully installed!“
You can also install the ADB and Fastboot tools on your Android with a single command that includes all the above commands in one line.


pkg update && pkg upgrade && pkg install python && pkg install git && git clone https://github.com/freetheorange905/adb-fastboot-termux.git && cd adb-fastboot-termux && python af.py
Having set up ADB and Fastboot on your device via Termux, use the following command to verify if you have done everything as expected.


adb
or
adb help
As you can see below, you’ll get information such as the Android Debug Bridge version and other ADB options on your phone’s screen.


adb command in termux for android

Please note that if you run the adb devices command, you won’t get any device ID under the list of devices attached because your Android device will now act like an ADB/Fastboot host.


adb devices command on android device via termux

Please note that to use ADB, your host Android device needs to be rooted as it can be done using a Magisk module called ADB & Fastboot for Android NDK. I’ll update this tutorial describing the steps to use ADB commands without a PC or laptop.


Using ADB Commands on Android without Root
Recently, a developer named Yume Chan launched a website that lets us use ADB on Android via Chrome, Opera, and Microsoft Edge browsers. It means we no longer need a rooted Android device to use ADB. WebADB, as it’s aptly named, makes use of the WebUSB API found in all Chromium-based desktop and mobile browsers.

Web ADB comes with a bunch of features. It lets you send ADB commands from one Android device to another, mirror the screen and control the other device, install APK, browse the files on the other device, capture screenshots, etc.

Prerequisites

Two Android devices (phone or tablet).
A USB OTG or a USB Type-C to a USB Type-C cable.USB OTG and USB Type-C to Type-C cable
Enable USB debugging on the Android device you want to send ADB commands.
Let’s see how to use Web ADB to run ADB commands on Android devices without root. You can use one of two Android devices as a host to perform ADB commands on the other device.

Open the Web ADB website on the Android device you want to use as a host.
Tap the 3-dot icon in the Chrome browser and enable the Desktop site option.enable desktop site option in chrome for android
Insert the USB OTG or the USB Type-C cable on the device you want to use as a host. Now plug the other end of the USB cable into the client Android device you want to send the command to.
Tap the Add Device option on the Web ADB website. Select your device in the pop-up window and tap the Connect button.select android device in web adb
Tap OK when the browser asks to grant access to your connected device.grant usb adb connection on chrome for android
At this point, you will receive a notification on your second device asking you to Allow USB debugging. Tap on Allow.allow usb debugging on computer
You’ll see your device codename in the Web ADB command box. It means that both devices have been appropriately connected for ADB operations.android devices connected via adb
You’re all set to use ADB commands to control the connected Android device. Don’t forget to omit “adb” and “adb shell” while executing commands on a computer. For example, if you want to reboot the connected Android phone or tablet into the bootloader mode, you should use just reboot bootloader and tap Enter on the keyboard.adb reboot bootloader comand
You can execute any other ADB command on your Android device without a laptop or PC without rooting your device.

]]
]]]

===
[[[

查看app包名和启动页Activity的方法 原创

ML Manager
===

方法一：

先进入cmd窗体，adb shell 后：

cd /data/data

ls

能够看到包名了吧，缺点非常明显，必须root手机先

方法四：

首先在手机上执行一下程序，进入第一个界面即可了，别去多多操作了。usb连接电脑，进入cmd窗体执行：

adb shell "dumpsys usagestats"|findstr /i "keyword"

 

keyword是你须要匹配的关键字。这个也不用root手机的。原本这个dumpsys usagestats 是用来记录打开了程序的哪些activity次数和时间一类信息的。这里能够用来直接看看你的这个程序开启了哪些activity。


还是不正确？那就參考以下的am start 一个个试试

 

你能够试试在cmd下运行以下的命令：

微信
	

adb shell "am start -n com.tencent.mm/com.tencent.mm.ui.LauncherUI"

手机QQ
	

adb shell "am start -n com.tencent.mobileqq/com.tencent.mobileqq.activity.SplashActivity"

微博
	

adb shell "am start -n com.sina.weibo/com.sina.weibo.SplashActivity"

QQ空间
	

adb shell "am start -n com.qzone/com.tencent.sc.activity.SplashActivity"

 

 

只是假设你能够直接看到程序项目中的AndroidManifest.xml或者能够直接问开发，那这篇文章你就压根不用看了。

 

DONE!

 


2018-07-05

    凤凰浴火重生

    码龄2年
关注

一、如何获取一个APP的包名

1.adb shell pm list package -f

将获取手机内所有apk对应的包名和路径，ctrl+f后输入你要查找的app的关键词可快速找到你想要的app包名，如下图：


2.GT的界面中自带了读取app包名的功能，从应用宝上或者官网下载GT，然后选择一个被测应用，就可以看到了。（如下图）


3.ML Manager同样可以读取手机app的包名，它是一个简单的app管理器，能够获取安装在 设备上的app的详细信息，也能将app安装包分享给别人。在应用市场下载ML Manager后，打开界面的就可以显示设备上所有app的包名，如下图：


二、如何 查看app启动页Activity

一般来说Activity指的就是App中我们看到的页面，一个页面就是一个Activity，通常第一页启动起来的页面我们就称之为 “启动页Activity”。

　　我们在做自动化测试中，通常第一步都是启动被测应用，而启动的方法就是利用 “包名/启动页的Activity”，因此我们在测试的过程中通常需要知道这个Activity的名称。下面是查看启动页Activity的方法。

1.dump package 包名

使用命令：adb shell

            dumpsys package com.saj.esolar 回车之后找到包含“category.LAUNCHER” 字样的Activity即可

2.使用Monkey命令 monkey -p com.saj.esolar -vvv 1 可以设置日志的详细程度，当我们指定为 -VVV 的时候，并且指定模拟随机事件为一次，即可查看：



参考文档：http://www.cnblogs.com/by-dream/p/5157308.html
文章最后发布于: 2018-07-05
2人已点赞
版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。
本文链接：https://blog.csdn.net/yangsummer2426/article/details/80929869

]]]




