
r"""
see:
    others/汉字/部件.txt
    script/handle_现代常用字部件表.py

===== copy from others/汉字/部件.txt
cd /sdcard/0my_files/unzip/e_book/汉字分解/现代常用字部件及部件名称规范

现代常用字部件及部件名称规范_2009[GF0014_2009]
  现代常用字部件表
    3500现代汉语常用字
    441组514部件
      >=311成字部件 vs <=203非成字部件
        311常用成字部件
      441主形部件 vs 73附形部件
      10单笔部件
        2成字单笔部件
        8非成字单笔部件

部件名称 成字与否 附形与否
主形前缀 + #一组多字情形
附形前缀 -
成字前缀 * #非〖〖单字〗部件名称〗情形
单笔前缀 =

命名规则
  左旁右边
  #我的:上角下足




9 现代常用字部件表
  page7 (10/41) - page20 (23/41)
  36+37*12+34 = 40*12+34 = 514
10 常用成字部件表
  page21 (24/41) - page29 (32/41)
  34+37*7+18 = 40*8-8 = 311
附录A 现代常用字部件构字数表
  page30 (33/41) - page34 (37/41)
  33+35*2 + 40*3*3 + 17*3 = 40*13+11-17 = 514
附录B 现代常用字部件笔画序检索表
  page35 (38/41) - page38 (41/41)
  35+36*3 + 40*4*2 + 13*3+12 = 40*13-6 = 514














横提竖撇捺点折弯钩



#pg?: 部件累计数-附形部件累计数=部件组累计数
现代常用字部件表_部件名称顺序
*
#"""






__all__ = """
现代常用字部件及部件名称规范_GF0014_2009_main_result


    现代常用字部件表_部件名称顺序
        现代常用字部件表_result_dict

    现代常用字部件笔画序检索表_笔画数到部件数
    现代常用字部件笔画序检索表_笔画数到部件序号列表
        现代常用字部件笔画序检索表_部件序号到笔画数
        现代常用字部件笔画序检索表_笔画数到部件名列表

    现代常用字部件构字数表_部件序号_构字数_出现次数__按构字数逆序排列
        现代常用字部件构字数表_部件序号到构字数出现次数

    常用成字部件表_部件序号_部件名__按拼音排序

    常用成字部件列表_我的判断_多余部分
    """.split()















##data##
现代常用字部件表_部件名称顺序 = r"""

*昂字底【卬】ang2
凹
敖字旁
奥字头
+八
-倒八
巴
白
百
拜字边
办
半
宝盖
卑
贝
贲字腰
本
鼻字底
+匕
-北字旁
必
敝字旁
*番字头【釆】bian4
丙
秉
病字框
+卜
-卢字头
不
才
曹字头
草字头
+册
-扁字心
-典字头
曾字头 #pg1: 36-5
叉
产
长
厂
车
+臣
-临字旁
辰
丞
承
尺
斥
赤
虫
丑
出
+川
-荒字底
-巡字心
串
垂
春字头
*刺字旁【朿】ci4
匆
囱
寸
大
+歹
-餐左角
带字头
丹
单
+刀
-刀中 # 班辨
-黎右角
-立刀 # 出现在右边
登字头 #pg2: 73-12
帝字头
+弟
-弟省 # 第
=点
电
刁
丁
鼎
冬字头
东
兜
斗
豆
段字旁
而
尔字头
耳
二
发
凡
反字框
+反文
-*敲字边【攴】pu1
方
飞
非
+丰
-寿字头
+风
-风省
缶
夫
*肺字边【巿】fu2
弗
甫
父
丐 #pg3: 110-16
干
尴字框
甘
高
戈
革
个
*根字边【艮】gen4
庚字心
更
工
弓
骨字头
谷
瓜
*决字边【夬】guai4
*贯字头【毌】guan4
广
龟
鬼
果
亥
寒字腰 # 不含〖八〗
号字底
禾
鹤字旁
黑
=*横【一】
+=*横折弯钩【乙】
-=横钩
-=横折
-=横折钩
后
乎
虎字头
互
户 #pg4: 147-19
画字框
奂
黄
惠字头
+火
-横四点 # 灬
击
及
即字旁
几
+己
-已
-以字旁 # 〖竖提〗+〖点〗
-巳
*既字边【旡】ji4
夹
甲
*假字边【叚】jia3
兼
+柬
-拣字边
建之
见
+绞丝旁
-绞丝底 # 系紧
角
+*单耳【卩】jie2 # 却
-节字底
-仓字底
*捷字边【疌】jie2
巾
斤
今
+金 # 鉴
-金旁 # 针
*谨字边【堇】jin3
京 #pg5: 184-28
井
*纠字边【丩】jiu1
九
久
韭
臼
举字底
句字框
巨
聚字底 # 似〖豕〗，少一撇，弯钩改竖
具
卷字头
卡
开
可字框 # 〖丁〗？
口
来
+老
-老省 # 者
乐
耒 #lei3
离字底
里
力
立
吏
丽
隶
*隔字边【鬲】li4
+冰字旁【两点水】
-冬字底【两点】
两
尞字头
了
临右角
临下角 # 〖下角〗特指〖右下角〗
六 #pg6: 221-30
龙
卤
录字头
鹿
旅下角
卵
仑
罗字头
马
毛
矛
+卯
-留字头
冒字头 # 似〖日〗，下两横不与其他笔画接触
么
眉字框
门
米
免
面
民
皿
末
母
木
目
那字旁
乃
南
囊字头
内
*逆字心【屰】ni4
年
廿
+鸟
-鸟省
+牛 #pg7: 258-32
-告字头
农
+弄字底
-共字底 # 三笔
女
+爿 #pan2，藏？
-将字旁
皮
片
=撇
+乒
-乓
平
七
妻
其
气
千
前字头
钱字边
欠
乔字底
且
青字头
轻字边
丘
求
区字框
曲
去
+犬
-反犬旁
冉
+人
-单立人
-儿
-负字头 #pg8: 295-40
-卧人 # 每
壬
刃
+日
-曰 # 似〖日〗，中间一横左触右不触
入
三
伞
丧字头 # 墙
色
山
彡 #shan1
商字头 # 滴，含框，商字框？
上
勺
少
舌
申
身
升
生
尸
失
十
石
+食
-食旁
史
矢
+豕
-豕省 #少顶横，毅缘
士
氏
+示
-示旁 # 礼
世
事 #pg9: 332-45
+手
-提手
首
*设字边【殳】shu1
书
鼠
=竖
+=竖折
-=竖弯钩
术
束
衰字腰 # 〖中〗倾
甩
率字腰 # 仅四点，〖率夹腰〗？〖脊双角〗？
双耳 # 要不要分左右？形、位 分离？
双立人 # 行
+水
-三点水
-水底 # 暴录
-益字头
*私字边【厶】si1
司
丝
四
肆字旁
叟字头
肃
太
唐字心 # 不含〖口〗
天
田
同字框
头
秃宝盖
凸
土
屯 #tun2 #pg10: 369-50
*托字边【乇】tuo1
瓦
丸
万
亡
王
*围字框【囗】wei2
韦
卫
畏字底 # 不含〖一〗
为
未
文
我
乌
无
五
午
舞字头 # 除双足
兀
勿
戊
+夕
-夜下角
昔字头
+西
-要字头
习
夏字头 # 仅两笔
下
乡
向
象
+小
-尚字头 # 仅三笔，vs〖商字头〗
卸字旁
+心 #pg11: 406-53
-恭字底
-竖心
辛
囟 # xin4，傻瑙
戌 # xu1
玄字头 # 亩
学字头 # 仅三笔
穴
+雪字底
-虐字底
血
熏
讯字边
丫
牙
亚
焉字底 # 除〖正〗
延字心
严
+言
-言旁 # 话
央
杨字边
+羊
-美字头 # 盖
-养字头 # 除底两笔
*幼字旁【幺】yao1
夭
尧字头
也
业
页
*拽字边【曳】ye4
+衣 # 裹
-衣省 # 除顶两笔
-衣旁 # 补
彝字头 # 仅三笔，含〖一〗，缘 #pg12: 443-61
夷
颐字旁
*艾字底【乂】yi4
*代字边【弋】yi4
义
亦
殷字旁
*枕字边【冘】yin2
尹
庸
勇字头 # 仅两笔
永
用
尤
由
酉
又
于
鱼
*愚字头【禺】yu2
与
予
雨
禹
+玉
-斜玉 # 玻班
*律字边【聿】yu4
+*月【肉月】 # 胆
-肉
-青字底 # 肩
-然左角
*越字心【戉】yue4
云
再
乍 # zha3
丈
+爪 #pg13: 480-65
-印字旁
-爪头 # 采
兆
争
正
之
直
+止
-降下角
-足字底
-步字底
至
制字旁
*豹字旁【豸】zhi4
中
重
周字框
舟
州
朱
+竹
-竹头
主
专
+追字心
-官字底
-师字旁 # 归帅
*锥字边【隹】zhui1
啄字边
子
姊字边
自
走之
左字框 #pg14: 514-73



""" #end of 现代常用字部件表_部件名称顺序














##data##
现代常用字部件笔画序检索表_笔画数到部件数 = [0
,10
,56 #35-10 + 36-5
,92 #5+36*2+15
,110 #25+40*2+5
,92 #35+40+17
,65 #23+40+2
,38 #38
,24 #13*2-2
,13 #2+13-2
,4 #
,6 #
,2 #
,1 #
,1 #
]


assert 514 == sum(现代常用字部件笔画序检索表_笔画数到部件数)


##data##
现代常用字部件笔画序检索表_笔画数到部件序号列表 = {
0:[]
,1:[
    138,339,268,77,140
    ,141,340,142,341,139
    ]
,2:[
    91,319,80,199,40
    ,398,514,286,272,134
    #
    ,28,43,72,507,27
    ,364,296,280,293,94
    #
    ,5,292,301,446,295
    ,89,497,192,103,294
    #
    ,19,157,187,412,214
    ,6,70,215,366,427
    #
    ,79,218,148,186,174
    ,175,347,69,208,249
    #
    ,454,460,160,353,169
    ,176
    ]
,3:[
    302,111,191,461,121
    ,368,327,334,32,16
    #
    ,30,399,62,18,261
    ,262,63,479,389,112
    #
    ,416,464,489,435,373
    ,447,309,20,491,403
    #
    ,379,404,200,376,306
    ,178,276,219,370,53
    #
    ,54,348,307,117,481
    ,290,71,392,188,82
    #
    ,236,310,93,372,155
    ,322,265,128,374,238
    #
    ,277,420,448,350,408
    ,413,13,513,486,415
    #
    ,224,419,317,158,159
    ,161,122,510,378,436
    #
    ,263,429,298,98,397
    ,37,230,443,171,400
    #
    ,433,55
    ]
,4:[
    100,101,375,282,469
    ,198,185,362,105,385
    #
    ,377,476,504,203,110
    ,255,394,66,246,386
    #
    ,106,29,289,360,64
    ,457,41,193,421,369
    #
    ,115,162,146,371,488
    ,490,96,311,407,235
    #
    ,300,299,344,473,495
    ,220,15,252,349,170
    #
    ,206,387,258,333,275
    ,231,259,297,315,434
    #
    ,95,39,267,424,179
    ,480,109,228,482,180
    #
    ,471,328,511,390,279
    ,102,226,441,67,474
    #
    ,393,257,384,1,336
    ,221,382,346,97,152
    #
    ,380,85,153,147,330
    ,451,406,361,452,248
    #
    ,47,126,51,237,264
    ,7,11,465,127,337
    ]
,5:[
    10,58,468,133,381
    ,244,329,154,278,485
    #
    ,288,113,331,17,342
    ,304,24,320,217,391
    #
    ,222,271,83,475,168
    ,197,367,65,437,351
    #
    ,247,281,164,313,78
    ,363,458,34,35,323
    #
    ,428,506,291,229,243
    ,2,356,123,182,316
    #
    ,324,318,478,135,87
    ,284,8,48,125,144
    #
    ,456,345,204,60,33
    ,233,256,234,503,26
    #
    ,209,12,352,365,414
    ,442,21,455,119,156
    #
    ,354,242,76,107,52
    ,266,92,283,73,232
    #
    ,245,355
    ]
,6:[
    205,3,202,90,422
    ,42,210,477,396,59
    #
    ,395,411,9,88,438
    ,163,444,492,423,145
    #
    ,439,50,287,472,254
    ,500,104,493,312,501
    #
    ,502,269,270,190,194
    ,512,505,417,401,410
    #
    ,143,450,498,483,303
    ,326,484,305,449,440
    #
    ,38,308,74,132,430
    ,431,196,239,253,499
    #
    ,260,470,118,45,172
    ]
,7:[
    357,49,425,445,285
    ,108,120,31,343,251
    #
    ,86,216,459,211,44
    ,325,201,223,207,56
    #
    ,405,383,358,314,61
    ,23,124,494,129,149
    #
    ,240,173,227,426,409
    ,432,22,75
    ]
,8:[
    274,487,151,332,466
    ,509,177,273,99,195
    #
    ,131,388,57,25,508
    ,14,181,462,184,68
    #
    ,36,359,212,46
    ]
,9:[
    116,250,167,241,189
    ,463,496,130,467,4
    #
    ,321,335,165
    ]
,10:[213,114,166,136]
,11:[183,150,84,402,453,225]
,12:[81,137]
,13:[338]
,14:[418]
} #end of 现代常用字部件笔画序检索表_笔画数到部件数



















##data##
现代常用字部件构字数表_部件序号_构字数_出现次数__按构字数逆序排列 = [
(200,516,581, "<") ##########
,(299,232,243, "<") ##########
,(246,218,238, "<") ##########
,(350,204,204, "=")
,(334,197,197, "=")
,(32,167,167, "=")
,(138,161,180, "<") ##########
,(293,156,157, "<") ##########
,(368,136,153, "<") ##########
,(292,116,133, "<") ##########
,(319,108,116, "<") ##########
,(460,106,119, "<") ##########
,(13,104,104, "=")
,(471,93,99, "<") ##########
,(263,89,89, "=")
,(427,79,79, "=")
,(513,79,79, "=")
,(171,77,77, "=")
,(473,77,78, "<") ##########
,(15,77,80, "<") ##########
,(5,72,72, "=")
,(412,72,72, "=")
,(366,70,70, "=")
,(347,70,70, "=")
,(63,68,68, "=")
,(406,67,69, "<") ##########
,(72,64,64, "=")
,(353,64,66, "<") ##########
,(408,64,64, "=")
,(363,64,67, "<") ##########
,(135,64,64, "=")
,(62,62,62, "=")
,(50,62,63, "<") ##########
,(488,61,62, "<") ##########
,(82,59,59, "=")
,(152,59,65, "<") ##########
,(182,59,59, "=")
,(19,58,74, "<") ##########
,(128,57,57, "=")
,(208,56,58, "<") ##########
,(192,55,55, "=")
,(317,55,55, "=")
,(95,55,55, "=")
,(446,52,58, "<") ##########
,(247,52,52, "=")
,(306,49,49, "=")
,(514,45,45, "=")
,(404,45,45, "=")
,(178,45,45, "=")
,(209,45,45, "=")
,(510,44,44, "=")
,(320,44,46, "<") ##########
,(508,43,43, "=")
,(502,42,42, "=")
,(41,41,41, "=")
,(239,41,41, "=")
,(69,39,39, "=")
,(8,39,39, "=")
,(392,38,44, "<") ##########
,(77,37,39, "<") ##########
,(157,36,36, "=")
,(6,36,36, "=")
,(121,36,36, "=")
,(26,35,35, "=")
,(179,33,33, "=")
,(40,32,32, "=")
,(490,32,32, "=")
,(97,32,32, "=")
,(438,32,32, "=")
,(294,31,33, "<") ##########
,(230,31,31, "=")
,(296,30,30, "=")
,(214,30,32, "<") ##########
,(348,30,30, "=")
,(375,30,32, "<") ##########
,(482,30,30, "=")
,(90,30,30, "=")
,(376,29,29, "=")
,(290,29,29, "=")
,(176,28,28, "=")
,(261,28,28, "=")
,(307,28,28, "=")
,(238,28,28, "=")
,(279,28,28, "=")
,(153,28,28, "=")
,(329,28,29, "<") ##########
,(243,28,28, "=")
,(262,27,27, "=")
,(403,27,27, "=")
,(469,27,27, "=")
,(389,26,26, "=")
,(229,26,26, "=")
,(295,25,25, "=")
,(203,25,25, "=")
,(115,25,25, "=")
,(147,25,25, "=")
,(466,25,25, "=")
,(28,24,24, "=")
,(324,24,24, "=")
,(414,24,24, "=")
,(286,23,23, "=")
,(415,23,23, "=")
,(459,23,23, "=")
,(80,22,22, "=")
,(180,22,22, "=")
,(118,22,22, "=")
,(111,21,21, "=")
,(161,21,22, "<") ##########
,(100,21,22, "<") ##########
,(394,21,21, "=")
,(86,21,21, "=")
,(322,20,20, "=")
,(397,20,39, "<") ##########
,(256,20,20, "=")
,(442,20,20, "=")
,(409,20,24, "<") ##########
,(134,19,19, "=")
,(280,19,19, "=")
,(148,19,19, "=")
,(122,19,22, "<") ##########
,(362,19,19, "=")
,(199,18,20, "<") ##########
,(364,18,18, "=")
,(433,18,23, "<") ##########
,(282,18,18, "=")
,(289,18,18, "=")
,(336,18,18, "=")
,(382,18,18, "=")
,(440,18,18, "=")
,(108,18,18, "=")
,(340,17,17, "=")
,(43,17,17, "=")
,(430,17,17, "=")
,(413,16,16, "=")
,(170,16,16, "=")
,(391,16,16, "=")
,(281,16,16, "=")
,(327,15,15, "=")
,(64,15,15, "=")
,(258,15,15, "=")
,(351,15,15, "=")
,(266,15,15, "=")
,(207,15,15, "=")
,(274,15,15, "=")
,(311,14,14, "=")
,(495,14,14, "=")
,(333,14,15, "<") ##########
,(330,14,14, "=")
,(458,14,14, "=")
,(156,14,14, "=")
,(245,14,14, "=")
,(462,14,14, "=")
,(374,13,13, "=")
,(259,13,14, "<") ##########
,(434,13,13, "=")
,(221,13,13, "=")
,(316,13,13, "=")
,(88,13,13, "=")
,(312,13,13, "=")
,(190,13,13, "=")
,(74,13,13, "=")
,(172,13,13, "=")
,(487,13,15, "<") ##########
,(339,12,12, "=")
,(27,12,12, "=")
,(94,12,12, "=")
,(174,12,12, "=")
,(249,12,12, "=")
,(447,12,12, "=")
,(219,12,12, "=")
,(476,12,12, "=")
,(396,12,12, "=")
,(498,12,12, "=")
,(325,12,12, "=")
,(99,12,12, "=")
,(140,11,11, "=")
,(139,11,11, "=")
,(169,11,11, "=")
,(265,11,11, "=")
,(198,11,11, "=")
,(7,11,11, "=")
,(58,11,11, "=")
,(456,11,11, "=")
,(52,11,11, "=")
,(104,11,11, "=")
,(124,11,11, "=")
,(426,11,11, "=")
,(184,11,11, "=")
,(130,11,11, "=")
,(215,10,10, "=")
,(454,10,10, "=")
,(435,10,10, "=")
,(158,10,10, "=")
,(29,10,10, "=")
,(297,10,10, "=")
,(390,10,10, "=")
,(485,10,10, "=")
,(288,10,10, "=")
,(113,10,10, "=")
,(222,10,10, "=")
,(343,10,10, "=")
,(268,9,9, "=")
,(141,9,9, "=")
,(191,9,9, "=")
,(54,9,9, "=")
,(310,9,9, "=")
,(277,9,9, "=")
,(436,9,9, "=")
,(105,9,12, "<") ##########
,(255,9,9, "=")
,(252,9,9, "=")
,(349,9,9, "=")
,(85,9,9, "=")
,(133,9,9, "=")
,(278,9,9, "=")
,(313,9,9, "=")
,(34,9,9, "=")
,(478,9,9, "=")
,(12,9,9, "=")
,(492,9,9, "=")
,(145,9,9, "=")
,(512,9,9, "=")
,(196,9,9, "=")
,(240,9,9, "=")
,(116,9,9, "=")
,(187,8,8, "=")
,(309,8,8, "=")
,(429,8,8, "=")
,(377,8,8, "=")
,(386,8,8, "=")
,(421,8,8, "=")
,(275,8,8, "=")
,(231,8,10, "<") ##########
,(465,8,8, "=")
,(503,8,8, "=")
,(73,8,8, "=")
,(449,8,8, "=")
,(431,8,9, "<") ##########
,(383,8,8, "=")
,(131,8,8, "=")
,(341,7,7, "=")
,(272,7,7, "=")
,(218,7,7, "=")
,(20,7,7, "=")
,(379,7,7, "=")
,(93,7,7, "=")
,(372,7,7, "=")
,(457,7,7, "=")
,(193,7,7, "=")
,(369,7,7, "=")
,(228,7,7, "=")
,(328,7,7, "=")
,(346,7,7, "=")
,(271,7,7, "=")
,(437,7,7, "=")
,(78,7,7, "=")
,(125,7,7, "=")
,(365,7,7, "=")
,(283,7,7, "=")
,(205,7,7, "=")
,(422,7,7, "=")
,(163,7,7, "=")
,(484,7,7, "=")
,(132,7,7, "=")
,(470,7,7, "=")
,(44,7,7, "=")
,(314,7,7, "=")
,(23,7,7, "=")
,(173,7,7, "=")
,(166,7,7, "=")
,(142,6,6, "=")
,(302,6,6, "=")
,(30,6,6, "=")
,(276,6,6, "=")
,(486,6,6, "=")
,(224,6,6, "=")
,(101,6,6, "=")
,(206,6,6, "=")
,(39,6,6, "=")
,(474,6,6, "=")
,(452,6,6, "=")
,(126,6,6, "=")
,(244,6,6, "=")
,(331,6,6, "=")
,(164,6,6, "=")
,(428,6,6, "=")
,(506,6,6, "=")
,(234,6,6, "=")
,(21,6,6, "=")
,(232,6,6, "=")
,(483,6,6, "=")
,(120,6,6, "=")
,(36,6,6, "=")
,(463,6,6, "=")
,(114,6,6, "=")
,(137,6,6, "=")
,(91,5,5, "=")
,(507,5,5, "=")
,(89,5,5, "=")
,(497,5,5, "=")
,(461,5,5, "=")
,(489,5,5, "=")
,(155,5,5, "=")
,(298,5,5, "=")
,(109,5,5, "=")
,(102,5,5, "=")
,(51,5,5, "=")
,(468,5,5, "=")
,(217,5,5, "=")
,(318,5,5, "=")
,(455,5,5, "=")
,(354,5,5, "=")
,(107,5,5, "=")
,(395,5,5, "=")
,(500,5,5, "=")
,(38,5,5, "=")
,(216,5,5, "=")
,(149,5,5, "=")
,(22,5,5, "=")
,(75,5,5, "=")
,(57,5,5, "=")
,(14,5,5, "=")
,(68,5,5, "=")
,(359,5,5, "=")
,(212,5,5, "=")
,(464,4,4, "=")
,(373,4,4, "=")
,(491,4,4, "=")
,(53,4,4, "=")
,(188,4,4, "=")
,(448,4,4, "=")
,(37,4,4, "=")
,(55,4,4, "=")
,(185,4,4, "=")
,(504,4,4, "=")
,(162,4,4, "=")
,(407,4,4, "=")
,(441,4,4, "=")
,(1,4,4, "=")
,(451,4,4, "=")
,(248,4,4, "=")
,(47,4,4, "=")
,(237,4,4, "=")
,(11,4,4, "=")
,(381,4,4, "=")
,(24,4,4, "=")
,(83,4,4, "=")
,(123,4,4, "=")
,(33,4,4, "=")
,(233,4,4, "=")
,(92,4,4, "=")
,(202,4,4, "=")
,(42,4,4, "=")
,(59,4,5, "<") ##########
,(9,4,4, "=")
,(505,4,4, "=")
,(308,4,4, "=")
,(31,4,4, "=")
,(358,4,4, "=")
,(494,4,4, "=")
,(467,4,4, "=")
,(4,4,4, "=")
,(402,4,4, "=")
,(398,3,3, "=")
,(103,3,3, "=")
,(186,3,3, "=")
,(160,3,3, "=")
,(399,3,3, "=")
,(479,3,3, "=")
,(419,3,3, "=")
,(385,3,3, "=")
,(360,3,3, "=")
,(371,3,3, "=")
,(267,3,3, "=")
,(424,3,3, "=")
,(480,3,3, "=")
,(393,3,3, "=")
,(361,3,3, "=")
,(17,3,3, "=")
,(168,3,3, "=")
,(87,3,3, "=")
,(284,3,3, "=")
,(48,3,3, "=")
,(204,3,3, "=")
,(352,3,3, "=")
,(242,3,3, "=")
,(3,3,3, "=")
,(444,3,3, "=")
,(472,3,3, "=")
,(417,3,3, "=")
,(401,3,3, "=")
,(305,3,3, "=")
,(253,3,3, "=")
,(499,3,3, "=")
,(260,3,3, "=")
,(357,3,3, "=")
,(49,3,4, "<") ##########
,(285,3,3, "=")
,(201,3,3, "=")
,(56,3,3, "=")
,(195,3,3, "=")
,(496,3,3, "=")
,(165,3,3, "=")
,(150,3,3, "=")
,(70,2,2, "=")
,(79,2,2, "=")
,(175,2,2, "=")
,(16,2,2, "=")
,(18,2,2, "=")
,(112,2,2, "=")
,(416,2,2, "=")
,(370,2,2, "=")
,(481,2,3, "<") ##########
,(110,2,2, "=")
,(66,2,2, "=")
,(106,2,2, "=")
,(96,2,2, "=")
,(235,2,2, "=")
,(387,2,2, "=")
,(226,2,2, "=")
,(67,2,2, "=")
,(257,2,2, "=")
,(384,2,2, "=")
,(380,2,2, "=")
,(127,2,2, "=")
,(10,2,2, "=")
,(154,2,2, "=")
,(342,2,2, "=")
,(304,2,2, "=")
,(35,2,2, "=")
,(323,2,2, "=")
,(144,2,2, "=")
,(60,2,2, "=")
,(210,2,2, "=")
,(194,2,2, "=")
,(410,2,2, "=")
,(143,2,2, "=")
,(326,2,2, "=")
,(45,2,2, "=")
,(405,2,2, "=")
,(61,2,2, "=")
,(227,2,2, "=")
,(151,2,2, "=")
,(509,2,2, "=")
,(177,2,2, "=")
,(273,2,2, "=")
,(181,2,2, "=")
,(250,2,2, "=")
,(167,2,2, "=")
,(241,2,2, "=")
,(321,2,2, "=")
,(335,2,2, "=")
,(213,2,2, "=")
,(183,2,2, "=")
,(301,1,1, "=")
,(117,1,1, "=")
,(71,1,1, "=")
,(236,1,1, "=")
,(420,1,1, "=")
,(159,1,1, "=")
,(378,1,1, "=")
,(98,1,1, "=")
,(443,1,1, "=")
,(400,1,1, "=")
,(146,1,1, "=")
,(300,1,1, "=")
,(344,1,1, "=")
,(220,1,1, "=")
,(315,1,1, "=")
,(511,1,1, "=")
,(264,1,1, "=")
,(337,1,1, "=")
,(475,1,1, "=")
,(197,1,1, "=")
,(367,1,1, "=")
,(65,1,1, "=")
,(291,1,1, "=")
,(2,1,1, "=")
,(356,1,1, "=")
,(345,1,1, "=")
,(119,1,1, "=")
,(76,1,1, "=")
,(355,1,1, "=")
,(477,1,1, "=")
,(411,1,1, "=")
,(423,1,1, "=")
,(439,1,1, "=")
,(287,1,1, "=")
,(254,1,1, "=")
,(493,1,1, "=")
,(501,1,1, "=")
,(269,1,1, "=")
,(270,1,1, "=")
,(450,1,1, "=")
,(303,1,1, "=")
,(425,1,1, "=")
,(445,1,1, "=")
,(251,1,1, "=")
,(211,1,1, "=")
,(223,1,1, "=")
,(129,1,1, "=")
,(432,1,1, "=")
,(332,1,1, "=")
,(388,1,1, "=")
,(25,1,1, "=")
,(46,1,1, "=")
,(189,1,1, "=")
,(136,1,1, "=")
,(84,1,1, "=")
,(453,1,1, "=")
,(225,1,1, "=")
,(81,1,1, "=")
,(338,1,1, "=")
,(418,1,1, "=")
] #end of 现代常用字部件构字数表_部件序号_构字数_出现次数__按构字数逆序排列























##data##
常用成字部件表_部件序号_部件名__按拼音排序 = [
(2, '凹')
,(5, '八')
,(7, '巴')
,(8, '白')
,(9, '百')
,(11, '办')
,(12, '半')
,(14, '卑')
,(15, '贝')
,(17, '本')
,(19, '匕')
,(21, '必')
,(24, '丙')
,(25, '秉')
,(27, '卜')
,(29, '不')
,(30, '才')
,(33, '册')
,(37, '叉')
,(38, '产')
,(39, '长')
,(40, '厂')
,(41, '车')
,(42, '臣')
,(44, '辰') #!(45, '丞')
,(46, '承')
,(47, '尺')
,(48, '斥')
,(49, '赤')
,(50, '虫')
,(51, '丑')
,(52, '出')
,(53, '川')
,(56, '串')
,(57, '垂')
,(60, '匆')
,(61, '囱')
,(62, '寸')
,(63, '大')
,(64, '歹')
,(67, '丹')
,(68, '单')
,(69, '刀')
,(75, '弟')
,(78, '电')
,(79, '刁')
,(80, '丁')
,(81, '鼎')
,(83, '东')
,(84, '兜')
,(85, '斗')
,(86, '豆')
,(294, '儿') #!!!insert
,(88, '而')
,(90, '耳')
,(91, '二')
,(92, '发')
,(93, '凡')
,(97, '方')
,(98, '飞')
,(99, '非')
,(100, '丰')
,(102, '风') #! (104, '缶')
,(105, '夫')
,(107, '弗')
,(108, '甫')
,(109, '父')
,(110, '丐')
,(111, '干')
,(113, '甘')
,(114, '高')
,(115, '戈')
,(116, '革')
,(117, '个')
,(120, '更')
,(121, '工')
,(122, '弓')
,(124, '谷')
,(125, '瓜')
,(128, '广')
,(129, '龟')
,(130, '鬼')
,(131, '果')
,(132, '亥')
,(135, '禾')
,(137, '黑') ###! (138, '横【一】') ###! (139, '横折弯钩【乙】')
,(143, '后')
,(144, '乎')
,(146, '互')
,(147, '户') #! (149, '奂')
,(150, '黄')
,(152, '火')
,(154, '击')
,(155, '及')
,(157, '几')
,(158, '己') ###! (159, '已') ###! (161, '巳')
,(163, '夹')
,(164, '甲')
,(166, '兼')
,(167, '柬')
,(170, '见')
,(173, '角')
,(178, '巾')
,(179, '斤')
,(180, '今')
,(181, '金')
,(184, '京')
,(185, '井')
,(187, '九')
,(188, '久')
,(189, '韭')
,(190, '臼')
,(193, '巨')
,(195, '具')
,(197, '卡')
,(198, '开')
,(200, '口')
,(201, '来')
,(202, '老')
,(204, '乐') #! (205, '耒')
,(207, '里')
,(208, '力')
,(209, '立')
,(210, '吏')
,(211, '丽')
,(212, '隶')
,(216, '两')
,(218, '了')
,(221, '六')
,(222, '龙')
,(223, '卤')
,(225, '鹿')
,(227, '卵')
,(228, '仑')
,(230, '马')
,(231, '毛')
,(232, '矛')
,(233, '卯')
,(236, '么')
,(238, '门')
,(239, '米')
,(240, '免')
,(241, '面')
,(242, '民')
,(243, '皿')
,(244, '末')
,(245, '母')
,(246, '木')
,(247, '目')
,(249, '乃')
,(250, '南')
,(252, '内')
,(254, '年') #! (255, '廿')
,(256, '鸟')
,(258, '牛')
,(260, '农')
,(263, '女') #! (264, '爿')
,(270, '乓') #!!!insert
,(266, '皮')
,(267, '片')
,(269, '乒') ###! (270, '乓')
,(271, '平')
,(272, '七')
,(273, '妻')
,(274, '其')
,(275, '气')
,(276, '千')
,(279, '欠')
,(281, '且')
,(284, '丘')
,(285, '求')
,(287, '曲')
,(288, '去')
,(289, '犬')
,(291, '冉')
,(292, '人') ###! (294, '儿')
,(297, '壬')
,(298, '刃')
,(299, '日') ###! (300, '曰')
,(472, '肉') #!!!insert
,(301, '入')
,(302, '三')
,(303, '伞')
,(305, '色')
,(306, '山') #! (307, '彡')
,(309, '上')
,(310, '勺')
,(311, '少')
,(312, '舌')
,(313, '申')
,(314, '身')
,(315, '升')
,(316, '生')
,(317, '尸')
,(318, '失')
,(319, '十')
,(320, '石')
,(321, '食')
,(323, '史')
,(324, '矢') #! (325, '豕')
,(327, '士')
,(328, '氏')
,(329, '示')
,(331, '世')
,(332, '事')
,(333, '手')
,(335, '首')
,(337, '书')
,(338, '鼠')
,(342, '术')
,(343, '束')
,(345, '甩')
,(349, '水')
,(354, '司')
,(355, '丝')
,(161, '巳') #!!!insert
,(356, '四')
,(359, '肃')
,(360, '太')
,(362, '天')
,(363, '田')
,(365, '头')
,(367, '凸')
,(368, '土')
,(369, '屯')
,(371, '瓦')
,(372, '丸')
,(373, '万')
,(374, '亡')
,(375, '王') #! (377, '韦')
,(378, '卫')
,(380, '为')
,(381, '未')
,(382, '文')
,(383, '我')
,(384, '乌')
,(385, '无')
,(386, '五')
,(387, '午') #! (389, '兀')
,(390, '勿')
,(391, '戊')
,(392, '夕')
,(395, '西')
,(397, '习')
,(399, '下')
,(400, '乡')
,(401, '向')
,(402, '象')
,(403, '小')
,(406, '心')
,(409, '辛') #! (410, '囟')
,(411, '戌')
,(414, '穴')
,(417, '血')
,(418, '熏')
,(420, '丫')
,(421, '牙')
,(422, '亚')
,(425, '严')
,(426, '言')
,(428, '央')
,(430, '羊')
,(434, '夭')
,(436, '也')
,(437, '业')
,(438, '页')
,(138, '横【一】') #!!!insert
,(440, '衣')
,(444, '夷')
,(139, '横折弯钩【乙】') #!!!insert
,(159, '已') #!!!insert
,(448, '义')
,(449, '亦') #! (452, '尹')
,(453, '庸')
,(455, '永')
,(456, '用')
,(457, '尤')
,(458, '由')
,(459, '酉')
,(460, '又')
,(461, '于')
,(462, '鱼')
,(464, '与')
,(465, '予')
,(466, '雨')
,(467, '禹')
,(468, '玉')
,(300, '曰') #!!!insert
,(471, '月【肉月】') ###! (472, '肉')
,(476, '云')
,(477, '再')
,(478, '乍')
,(479, '丈')
,(480, '爪')
,(483, '兆')
,(484, '争')
,(485, '正')
,(486, '之')
,(487, '直')
,(488, '止')
,(492, '至')
,(495, '中')
,(496, '重')
,(498, '舟')
,(499, '州')
,(500, '朱')
,(501, '竹')
,(503, '主')
,(504, '专')
,(510, '子')
,(512, '自')
] #end of 常用成字部件表_部件序号_部件名__按拼音排序
assert 311 == len(常用成字部件表_部件序号_部件名__按拼音排序)


##data##
常用成字部件列表_我的判断_多余部分 = [(45, '丞'), (104, '缶'), (149, '奂'), (205, '耒'), (255, '廿'), (264, '爿'), (307, '彡'), (325, '豕'), (377, '韦'), (389, '兀'), (410, '囟'), (452, '尹')]
















##func##
import re
from seed.iters.duplicate_elements import iter_duplicate_representative_elements
from seed.tiny import print_err
from itertools import chain
from pprint import pprint
import json


def find_duplicated_elements(iterable):
    it = iter_duplicate_representative_elements(iterable)
    return [*it]







def _f(现代常用字部件表_部件名称顺序):
    s = 现代常用字部件表_部件名称顺序
    lines = s.split('\n')
    bkss = []
    for line in lines:
        line = line.strip()
        if not line: continue
        bks = [bk.strip() for bk in line.split('#')]
        if not bks: continue
        bkss.append(bks)

    #print(f'len(lines) = {len(bkss)}')
    assert len(bkss) == 514
    常用成字部件列表_我的判断 = []
    非成字部件列表 = []
    附形部件列表 = []
    成字单笔部件列表 = []
    非成字单笔部件列表 = []

    部件名到属性 = {}
    部件属性列表 = []

    前主形部件 = ""
    j = 0
    for i, bks in enumerate(bkss, 1):
        bk0 = bks[0]
        m = re.match(r'[-+*=]*', bk0)
        assert m
        mi = m.end()
        prefix = bk0[:mi]
        name = bk0[mi:]
        del mi, m
        assert name
        assert ord(name[0]) > 0x100
        #print(prefix)
        #print(name)
        assert name not in 部件名到属性
        k = name.find('【')
        std_name = name if k < 0 else name[:k]
        d = 部件名到属性[name] = {}
        部件属性列表.append(d)
        d.update(部件名= name)
        d.update(简洁部件名= std_name)
        d.update(部件序号= i)
        d.update(单笔= '=' in prefix)
        d.update(成字= '*' in prefix or (len(std_name) == 1 and '=' not in prefix))
        d.update(常用成字_我的判断= ('*' in prefix and '=' in prefix) or (len(std_name) == 1 and '=' not in prefix))
        assert not ('+' in prefix and '-' in prefix)
        if '+' in prefix:
            前主形部件 = name
            到主形 = ""
        elif '-' in prefix:
            assert 前主形部件
            到主形 = 前主形部件
        else:
            到主形 = ""
        d.update(到主形=到主形)
        if not 到主形:
            j += 1
        d.update(部件组号= j)

        if d['常用成字_我的判断']:
            常用成字部件列表_我的判断.append((i, name))
        if not d['成字']:
            非成字部件列表.append(name)
        if d['单笔']:
            ls = 成字单笔部件列表 if d['成字'] else 非成字单笔部件列表
            ls.append(name)
        if d['到主形']:
            附形部件列表.append(name)

    result = dict(
        常用成字部件列表_我的判断 = 常用成字部件列表_我的判断
        ,非成字部件列表 = 非成字部件列表
        ,附形部件列表 = 附形部件列表
        ,成字单笔部件列表 = 成字单笔部件列表
        ,非成字单笔部件列表 = 非成字单笔部件列表
        ,部件名到属性 = 部件名到属性
        ,部件属性列表 = 部件属性列表
        )
    if 0:
        for k, v in result.items():
            print(f'len({k!s}) == {len(v)}')
    assert len(常用成字部件列表_我的判断) == 323
    assert len(非成字部件列表) == 161
    assert len(附形部件列表) == 73
    assert len(成字单笔部件列表) == 2
    assert len(非成字单笔部件列表) == 8
    assert len(部件名到属性) == 514
    assert len(部件属性列表) == 514

    return result
def _gg(现代常用字部件笔画序检索表_笔画数到部件序号列表, 现代常用字部件表_部件属性列表):
    ddd = 现代常用字部件笔画序检索表_笔画数到部件序号列表
    笔画数到部件名列表 = {}
    for 笔画数, 部件序号列表 in ddd.items():
        部件名列表 = [现代常用字部件表_部件属性列表[部件序号-1]["部件名"] for 部件序号 in 部件序号列表]
        笔画数到部件名列表[笔画数] = 部件名列表
    return 笔画数到部件名列表
def _g(现代常用字部件笔画序检索表_笔画数到部件数, 现代常用字部件笔画序检索表_笔画数到部件序号列表):
    aaa = 现代常用字部件笔画序检索表_笔画数到部件数
    ddd = 现代常用字部件笔画序检索表_笔画数到部件序号列表
    nnn = 514
    assert nnn == sum(aaa)
    assert len(aaa) == len(ddd)
    s = set()
    部件序号到笔画数 = [None]*(nnn+1)
    for 笔画数, 部件序号列表 in ddd.items():
        assert aaa[笔画数] == len(部件序号列表)
        try:
            assert len(set(部件序号列表)) == len(部件序号列表)
        except:
            print_err(笔画数)
            print_err(find_duplicated_elements(部件序号列表))
            raise
        s.update(部件序号列表)
        for 部件序号 in 部件序号列表:
            部件序号到笔画数[部件序号] = 笔画数

    try:
        assert len(s) == nnn
    except:
        print_err(find_duplicated_elements(chain.from_iterable(ddd.values())))
        raise
    assert s == set(range(1, 1+nnn))
    return 部件序号到笔画数

def _h(现代常用字部件构字数表_部件序号_构字数_出现次数__按构字数逆序排列):
    aaa = 现代常用字部件构字数表_部件序号_构字数_出现次数__按构字数逆序排列
    nnn = 514
    assert len(aaa) == nnn
    assert set(部件序号 for 部件序号, 构字数, 出现次数, 比较 in aaa) == set(range(1, 1+nnn))

    构字数列表 = [构字数 for 部件序号, 构字数, 出现次数, 比较 in aaa]
    assert 构字数列表 == sorted(构字数列表, reverse=True)

    部件序号到构字数出现次数 = [None]*(nnn+1)
    for 部件序号, 构字数, 出现次数, 比较 in aaa:
        assert (比较 == "=" and 构字数 == 出现次数) or (比较 == "<" and 构字数 < 出现次数)
        部件序号到构字数出现次数[部件序号] = 构字数, 出现次数
    return 部件序号到构字数出现次数

def _main(
    现代常用字部件表_部件属性列表
    ,现代常用字部件构字数表_部件序号到构字数出现次数
    ,现代常用字部件笔画序检索表_部件序号到笔画数
    ,现代常用字部件笔画序检索表_笔画数到部件名列表
    ,常用成字部件表_部件序号_部件名__按拼音排序
    ):
    常用成字部件部件序号集合 = {部件序号 for 部件序号, 部件名 in 常用成字部件表_部件序号_部件名__按拼音排序}

    现代常用字部件及部件名称规范_GF0014_2009_部件完整属性列表 = []
    for 部件序号, 属性 in enumerate(现代常用字部件表_部件属性列表, 1):
        assert 属性["部件序号"] == 部件序号
        常用成字 = 部件序号 in 常用成字部件部件序号集合
        构字数, 出现次数 = 现代常用字部件构字数表_部件序号到构字数出现次数[部件序号]
        笔画数 = 现代常用字部件笔画序检索表_部件序号到笔画数[部件序号]
        d = dict(
                常用成字=常用成字
                , 构字数=构字数
                , 出现次数=出现次数
                , 笔画数=笔画数
                , **属性
                )
        现代常用字部件及部件名称规范_GF0014_2009_部件完整属性列表.append(d)


    现代常用字部件及部件名称规范_GF0014_2009_main_result = dict(
            现代常用字部件笔画序检索表_笔画数到部件名列表
            =现代常用字部件笔画序检索表_笔画数到部件名列表
            ,现代常用字部件及部件名称规范_GF0014_2009_部件完整属性列表
            =现代常用字部件及部件名称规范_GF0014_2009_部件完整属性列表
            )
    return 现代常用字部件及部件名称规范_GF0014_2009_main_result
















##data##
现代常用字部件构字数表_部件序号到构字数出现次数 = _h(现代常用字部件构字数表_部件序号_构字数_出现次数__按构字数逆序排列)

##data##
现代常用字部件笔画序检索表_部件序号到笔画数 = _g(现代常用字部件笔画序检索表_笔画数到部件数, 现代常用字部件笔画序检索表_笔画数到部件序号列表)



##data##
现代常用字部件表_result_dict = _f(现代常用字部件表_部件名称顺序)

##data##
现代常用字部件笔画序检索表_笔画数到部件名列表 = _gg(现代常用字部件笔画序检索表_笔画数到部件序号列表, 现代常用字部件表_result_dict["部件属性列表"])

##data##
现代常用字部件及部件名称规范_GF0014_2009_main_result = _main(
    #现代常用字部件表_部件属性列表
    现代常用字部件表_result_dict["部件属性列表"]
    ,现代常用字部件构字数表_部件序号到构字数出现次数
    ,现代常用字部件笔画序检索表_部件序号到笔画数
    ,现代常用字部件笔画序检索表_笔画数到部件名列表
    ,常用成字部件表_部件序号_部件名__按拼音排序
    )


if __name__ == "__main__":
    if 0:
        print('常用成字部件列表_我的判断:')
        #print('\n'.join(现代常用字部件表_result_dict["常用成字部件列表_我的判断"]))
        for pair in 现代常用字部件表_result_dict["常用成字部件列表_我的判断"]:
            print(pair)
    if 1:
        lhs = 常用成字部件表_部件序号_部件名__按拼音排序
        rhs = 现代常用字部件表_result_dict["常用成字部件列表_我的判断"]
        _lhs = set(lhs)
        _rhs = set(rhs)
        assert len(lhs) == len(_lhs)
        assert len(rhs) == len(_rhs)
        lhs = _lhs
        rhs = _rhs
        assert not (lhs - rhs)
        if 0:
            print('常用成字部件列表_我的判断_多余部分:')
            print(sorted(rhs - lhs))
        assert len(rhs) - len(lhs) == len(常用成字部件列表_我的判断_多余部分)
        assert sorted(rhs - lhs) == 常用成字部件列表_我的判断_多余部分
        del lhs, rhs, _lhs, _rhs


    if 1:
        M = max(现代常用字部件构字数表_部件序号到构字数出现次数[部件序号][0] for 部件序号, 部件名 in 常用成字部件列表_我的判断_多余部分)
        m = min(现代常用字部件构字数表_部件序号到构字数出现次数[部件序号][0] for 部件序号, 部件名 in 常用成字部件表_部件序号_部件名__按拼音排序)
        #print(M, m)
        assert M == 28 > 1 == m
        del M, m


if __name__ == "__main__":
    if 0:
        d = {}
        for nm in __all__:
            d[nm] = globals()[nm]
        pprint(d)
        del d, nm

if __name__ == "__main__":
    #pprint(现代常用字部件及部件名称规范_GF0014_2009_main_result)
    if 1:
        #help(json.dumps)
        s = json.dumps(现代常用字部件及部件名称规范_GF0014_2009_main_result, sort_keys=True, indent=True, ensure_ascii=False)
        print(s)
        del s













