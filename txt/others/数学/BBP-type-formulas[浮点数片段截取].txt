
e others/数学/BBP-type-formulas[浮点数片段截取].txt
/storage/emulated/0/0my_files/book/math/float/High-Precision Arithmetic-Progress and Challenges(after2015)(Bailey).pdf
view others/数学/float/high-precision-floating-point-arithmetic.txt
the_BBP_formula_for_pi = bbp4pi = [pi == sum [16**-k * (4/(1+8*k) -2/(4+8*k) -1/(5+8*k) -1/(6+8*k)) | [k :<- [0..]]]]
  The BBP (named after Bailey-Borwein-Plouffe) is a formula for calculating pi discovered by Simon Plouffe in 1995,
  Amazingly, this formula is a digit-extraction algorithm for pi in base 16.

  This remarkable formula, after a simple manipulation, can be used to calculate binary or base-16 digits ofpi beginning at the n-th digit, without needing to calculate any of the first n-1 digits.
  The underlying scheme requires very little memory and no multiple-precision arithmetic software.

[[[
/storage/emulated/0/0my_files/book/math/float/High-Precision Arithmetic and Mathematical Physics(ppt)(2012)(Bailey)[good].pdf
/storage/emulated/0/0my_files/book/math/float/PSLQ-algorithm/BBP-type-formula/The BBP Algorithm for Pi(2006)(Bailey).pdf
===
[frac_(x) == fractional_part_(x) =[def]= x - floor_(x)]
提取:
  [digit_extract_(radix; d, x) := floor_(radix*frac_(radix**d * x))]
[ln2 = sum [2**-k * 1/k | [k :<- [1..]]]]
[frac_(2**d * ln2)
== frac_(sum [2**(d-k) * 1/k | [k :<- [1..=d]]] + sum [2**(d-k) * 1/k | [k :<- [d+1..]]])
== frac_(frac_(sum [2**(d-k) * 1/k | [k :<- [1..=d]]]) + sum [2**(d-k) * 1/k | [k :<- [d+1..]]])
== frac_(frac_(sum [frac_(2**(d-k) * 1/k) | [k :<- [1..=d]]]) + sum [2**(d-k) * 1/k | [k :<- [d+1..]]])
== frac_(frac_(sum [frac_(2**(d-k)%k * 1/k) | [k :<- [1..=d]]]) + sum [2**(d-k) * 1/k | [k :<- [d+1..]]])
]

[pi == sum [16**-k * (4/(1+8*k) -2/(4+8*k) -1/(5+8*k) -1/(6+8*k)) | [k :<- [0..]]]]
[s_(j) := sum [16**-k * (1/(j+8*k)) | [k :<- [0..]]]]
[pi == (4*s_(1) -2*s_(4) -s_(5) -s_(6))]
[frac_(16**d * pi)
== frac_(16**d * (4*s_(1) -2*s_(4) -s_(5) -s_(6)))
== frac_(4*frac_(16**d * s_(1)) -2*frac_(16**d * s_(4)) -frac_(16**d * s_(5)) -frac_(16**d * s_(6)))
]
[frac_(16**d * s_(j))
== frac_(16**d * sum [16**-k * (1/(j+8*k)) | [k :<- [0..]]])
== frac_(sum [16**(d-k) * (1/(j+8*k)) | [k :<- [0..]]])
== frac_(sum [16**(d-k) * (1/(j+8*k)) | [k :<- [0..=d]]] + sum [16**(d-k) * (1/(j+8*k)) | [k :<- [d+1..]]])
== frac_(frac_(sum [frac_(16**(d-k) * (1/(j+8*k))) | [k :<- [0..=d]]]) + sum [16**(d-k) * (1/(j+8*k)) | [k :<- [d+1..]]])
== frac_(frac_(sum [frac_(16**(d-k)%(j+8*k) * (1/(j+8*k))) | [k :<- [0..=d]]]) + sum [16**(d-k) * (1/(j+8*k)) | [k :<- [d+1..]]])
]

Table 1: Computed hexadecimal digits of π.
  Position => Hex Digits Beginning at This Position 
    10**6 => 26C65E52CB4593 
    10**7 => 17AF5863EFED8D 
    10**8 => ECB840E21926EC 
    10**9 => 85895585A0428B 
    10**10 => 921C73C6838FB2 
    10**11 => 9C381872D27596 
    1.25 * 10**12 => 07E45733CC790B 
    2.5 * 10**14 => E6216B069CB6C1

[pi == sum [16**-k * (4/(1+8*k) -2/(4+8*k) -1/(5+8*k) -1/(6+8*k)) | [k :<- [0..]]]]
[pi == 4*sum [(-4)**-k * 1/(1+2*k) | [k :<- [0..]]] -1/64 * sum [(-1024)**-k * (32/(1+4*k) +8/(2+4*k) +1/(3+4*k)) | [k :<- [0..]]]]
]]]






view others/数学/float/high-precision-floating-point-arithmetic.txt
[[[
https://mathworld.wolfram.com/BBPFormula.html
BBP Formula
===
Number Theory  Constants  Pi 
Calculus and Analysis  Series  BBP Formulas 
Discrete Mathematics  Experimental Mathematics 
BBP Formula

The BBP (named after Bailey-Borwein-Plouffe) is a formula for calculating pi discovered by Simon Plouffe in 1995,

 pi=sum_(n=0)^infty(4/(8n+1)-2/(8n+4)-1/(8n+5)-1/(8n+6))(1/(16))^n. 
Amazingly, this formula is a digit-extraction algorithm for pi in base 16.

Following the discovery of this and related formulas, similar formulas in other bases were investigated. This class of formulas are now known as BBP-type formulas.

SEE ALSO
BBP-Type Formula, Pi
]]]
[[[
https://mathworld.wolfram.com/BBP-TypeFormula.html
BBP-Type Formula
===
Number Theory  Constants  Pi 
Calculus and Analysis  Series  BBP Formulas 
Discrete Mathematics  Experimental Mathematics 
More...
BBP-Type Formula

A base-b BBP-type formula is a convergent series formula of the type

 alpha=sum_(k=0)^infty(p(k))/(b^kq(k)) 	
(1)
where p(k) and q(k) are integer polynomials in k (Bailey 2000; Borwein and Bailey 2003, pp. 54 and 128-129).

Bailey (2000) and Borwein and Bailey (2003, pp. 128-129) give a collection of such formulas. The following extends those compilations to include several additional BBP-type formulas.

pi	=	sum_(k=0)^(infty)1/(16^k)(4/(8k+1)-2/(8k+4)-1/(8k+5)-1/(8k+6))	
(2)
	=	1/2sum_(k=0)^(infty)1/(16^k)(8/(8k+2)+4/(8k+3)+4/(8k+4)-1/(8k+7))	
(3)
pi^2	=	9/8sum_(k=0)^(infty)1/(64^k)[(16)/((6k+1)^2)-(24)/((6k+2)^2)-8/((6k+3)^2)-6/((6k+4)^2)+1/((6k+5)^2)]	
(4)
	=	2/(27)sum_(k=0)^(infty)1/(729^k)[(243)/((12k+1)^2)-(405)/((12k+2)^2)-(81)/((12k+4)^4)-(27)/((12k+5)^2)-(72)/((12k+6)^2)-9/((12k+7)^2)-9/((12k+8)^2)-5/((12k+10)^2)+1/((12k+11)^2)]	
(5)
ln(9/(10))	=	-sum_(k=1)^(infty)1/(10^k·k)	
(6)
ln2	=	2/3sum_(k=0)^(infty)1/(9^k(2k+1))	
(7)
(ln2)^2	=	1/(32)sum_(k=0)^(infty)[(64)/((6k+1)^2)-(160)/((6k+2)^2)-(56)/((6k+3)^2)-(40)/((6k+4)^2)+4/((6k+5)^2)-1/((6k+6)^2)]	
(8)
ln3	=	1/(729)sum_(k=0)^(infty)1/(729^k)((729)/(6k+1)+(81)/(6k+2)+(81)/(6k+3)+9/(6k+4)+9/(6k+5)+1/(6k+6))	
(9)
	=	sum_(k=0)^(infty)1/(4^k(2k+1))	
(10)
ln10	=	1/(32)sum_(k=0)^(infty)1/((-64)^k)((64)/(12k+1)+(16)/(12k+2)+8/(12k+4)-(16)/(12k+5)+8/(12k+6)+(12)/(12k+7)-2/(12k+8)+4/(12k+9)+1/(12k+10)-3/(12k+11)-1/(12k+12))	
(11)
	=	1/2sum_(k=0)^(infty)1/((-4)^k)(6/(4k+1)-3/(4k+3)-1/(4k+4))	
(12)
	=	1/(16)sum_(k=0)^(infty)1/(16^k)((24)/(4k+1)+(20)/(4k+2)+6/(4k+3)+1/(4k+4))	
(13)
	=	1/8sum_(k=0)^(infty)1/(16^k)((16)/(8k+1)+8/(8k+2)-8/(8k+3)+4/(8k+4)-4/(8k+5)+2/(8k+6)+2/(8k+7)+1/(8k+8))	
(14)
	=	2/9sum_(k=0)^(infty)1/(81^k)(9/(4k+1)+2/(4k+2)+1/(4k+3))	
(15)
	=	2/(729)sum_(k=0)^(infty)1/(6561^k)((729)/(8k+1)+(162)/(8k+2)+(81)/(8k+3)+9/(8k+3)+2/(8k+3)+1/(8k+7))	
(16)
pisqrt(2)	=	sum_(k=0)^(infty)1/((-8)^k)(4/(6k+1)+1/(6k+3)+1/(6k+5))	
(17)
	=	1/(64)sum_(k=0)^(infty)1/((-512)^k)((256)/(18k+1)+(64)/(6k+3)+(64)/(18k+5)-(32)/(18k+7)-8/(18k+9)-8/(18k+11)+4/(18k+13)+1/(18k+15)+1/(18k+17))	
(18)
	=	4sum_(k=0)^(infty)(-1)^k(1/(4k+1)+1/(4k+3))	
(19)
	=	4sum_(k=0)^(infty)(-1)^k(1/(12k+1)+1/(12k+3)-1/(12k+5)-1/(12k+7)+1/(12k+9)+1/(12k+11))	
(20)
	=	sum_(k=0)^(infty)(-1)^k(3/(20k+1)+3/(20k+3)+2/(20k+5)-3/(20k+7)+3/(20k+9)+3/(20k+11)-3/(20k+13)+2/(20k+17)+3/(20k+19))	
(21)
	=	1/8sum_(k=0)^(infty)1/(64^k)((32)/(12k+1)+8/(2k+3)+8/(12k+5)-4/(12k+7)-1/(12k+9)-1/(12k+11))	
(22)
pisqrt(3)	=	1/4sum_(k=0)^(infty)1/(64^k)((20)/(6k+1)+6/(6k+2)-1/(6k+3)-3/(6k+4)-1/(6k+5))	
(23)
	=	1/9sum_(k=0)^(infty)1/(729^k)((81)/(12k+1)-(54)/(12k+2)-9/(12k+4)-(12)/(12k+6)-3/(12k+7)-2/(12k+8)-1/(12k+10))	
(24)
	=	1/(36)sum_(k=0)^(infty)1/(729^k)((81)/(12k+1)+(27)/(12k+2)-(162)/(12k+3)-9/(12k+4)+(27)/(12k+5)+(24)/(12k+6)-3/(12k+7)+7/(12k+8)+6/(12k+9)+3/(12k+10)-1/(12k+11))	
(25)
	=	1/9sum_(k=0)^(infty)1/(729^k)((81)/(12k+1)+(189)/(12k+2)+(45)/(12k+4)+(27)/(12k+5)+(24)/(12k+6)-3/(12k+7)+1/(12k+8)+1/(12k+10)-1/(12k+11))	
(26)
piln2	=	1/(256)sum_(k=0)^(infty)1/(4096^k)[(4096)/((24k+1)^2)-(8192)/((24k+2)^2)-(26112)/((24k+3)^3)+(15360)/((24k+4)^2)-(1024)/((24k+5)^2)+(9984)/((24k+6)^2)+(11520)/((24k+8)^2)+(2368)/((24k+9)^2)-(512)/((24k+10)^2)+(768)/((24k+12)^2)-(64)/((24k+13)^2)+(408)/((24k+15)^2)+(720)/((24k+16)^2)+(16)/((24k+17)^2)+(196)/((24k+18)^2)+(60)/((24k+20)^2)-(37)/((24k+21)^2)]	
(27)
K	=	sum_(k=0)^(infty)((-1)^k)/((2k+1)^2)	
(28)
	=	1/(1024)sum_(k=0)^(infty)1/(4096^k)[(3072)/((24k+1)^2)-(3072)/((24k+2)^2)-(23040)/((24k+3)^2)+(12288)/((24k+4)^2)-(768)/((24k+5)^2)+(9216)/((24k+6)^2)+(10368)/((24k+8)^2)+(2496)/((24k+9)^2)-(192)/((24k+10)^2)+(768)/((24k+12)^2)-(48)/((24k+13)^2)+(360)/((24k+15)^2)+(648)/((24k+16)^2)+(12)/((24k+17)^2)+(168)/((24k+18)^2)+(48)/((24k+20)^2)-(39)/((24k+21)^2)]	
(29)
Cl_2(1/3pi)	=	sqrt(3)sum_(k=0)^(infty)[1/((6k+1)^2)+1/((6k+2)^2)-1/((6k+4)^2)-1/((6k+5)^2)]	
(30)
	=	(sqrt(3))/9sum_(k=0)^(infty)((-1)^k)/(27^k)[(18)/((6k+1)^2)-(18)/((6k+2)^2)-(24)/((6k+3)^2)-6/((6k+4)^2)+2/((6k+5)^2)].	
(31)
where K is Catalan's constant, Cl_2(pi/3) is the hyperbolic volume of the figure eight knot complement, Cl_2(x) is Clausen's integral, and Cl_2(pi/3) is also the hyperbolic volume of the knot complement of the figure eight knot.

Another example is the Dirichlet L-series

 L_(-7)(2)=sum_(n=0)^infty[1/((7n+1)^2)+1/((7n+2)^2)-1/((7n+3)^2)+1/((7n+4)^2)-1/((7n+5)^2)-1/((7n+6)^2)]  	
(32)
(Bailey and Borwein 2005; Bailey et al. 2007, pp. 5 and 62).

Note that this sort of sum is closely related to the polygamma function since, for example, the above sum can also be written

 L_(-7)(2)=1/(49)[psi_1(1/7)+psi_1(2/7)-psi_1(3/7)+psi_1(4/7)-psi_1(5/7)-psi_1(6/7)].   	
(33)
Borwein et al. (2004) have recently shown that pi has no Machin-type BBP arctangent formula that is not binary, although this does not rule out a completely different scheme for digit-extraction algorithms in other bases.

A beautiful example of a BBP-type formula in a non-integer base is

 pi^2=50sum_(k=0)^infty1/(phi^(5k))[(phi^(-2))/((5k+1)^2)-(phi^(-1))/((5k+2)^2)-(phi^(-2))/((5k+3)^2)+(phi^(-5))/((5k+4)^2)+(2phi^(-5))/((5k+5)^2)],  	
(34)
where phi is the golden ratio, found by B. Cloitre (Cloitre; Borwein and Chamberland 2005; Bailey et al. 2007, p. 277).

SEE ALSO
Apéry's Constant, BBP Formula, Catalan's Constant, Digit-Extraction Algorithm, Dirichlet L-Series, Inverse Sine, Natural Logarithm of 2, Pi, Pi Formulas, Spigot Algorithm, Zero
EXPLORE WITH WOLFRAM|ALPHA
WolframAlpha
pi squared

More things to try:

 pi squared
 pi
(110110 base 2) / (11 base 2)
REFERENCES
Adamchik, V. and Wagon, S. "A Simple Formula for pi." Amer. Math. Monthly 104, 852-855, 1997.
Adamchik, V. and Wagon, S. "Pi: A 2000-Year Search Changes Direction." http://www-2.cs.cmu.edu/~adamchik/articles/pi.htm.
Bailey, D. H. "A Compendium of BBP-Type Formulas for Mathematical Constants." 28 Nov 2000. http://crd.lbl.gov/~dhbailey/dhbpapers/bbp-formulas.pdf.
Bailey, D. H. and Borwein, J. M. "Experimental Mathematics: Examples, Methods, and Implications." Not. Amer. Math. Soc. 52, 502-514, 2005.
Bailey, D. H.; Borwein, J. M.; Calkin, N. J.; Girgensohn, R.; Luke, D. R.; and Moll, V. H. Experimental Mathematics in Action. Wellesley, MA: A K Peters, pp. 31-33 and 222, 2007.
Bailey, D. H.; Borwein, P. B.; and Plouffe, S. "On the Rapid Computation of Various Polylogarithmic Constants." Math. Comput. 66, 903-913, 1997.
Borwein, J. and Bailey, D. "Other BBP-Type Formulas" and "Does Pi Have a Nonbinary BBP Formula?" §3.6 and 3.7 in Mathematics by Experiment: Plausible Reasoning in the 21st Century. Wellesley, MA: A K Peters, pp. 127-133, 2003.
Borwein, J. M.; Borwein, D.; and Galway, W. F. "Finding and Excluding b-ary Machin-Type Individual Digit Formulae." Canad. J. Math. 56, 897-925, 2004.
Borwein, J. M. and Chamberland, M. "A Golden Example." Unpublished manuscript. Feb. 7, 2005.
Cloitre, B. "A BBP Formula for pi^2 in Golden Base." Unpublished manuscript. Undated.
Finch, S. R. "Archimedes' Constant." §1.4 in Mathematical Constants. Cambridge, England: Cambridge University Press, pp. 17-28, 2003.
Gourévitch, B. "L'univers de pi. §6: Formules BBP en base 2: s in N, v=p/q, x=1/(2^n) dans Psi." http://www.pi314.net/hypergse6.php.
Plouffe, S. "The Story Behind a Formula for Pi." sci.math and sci.math.symbolic newsgroup posting. 23 Jun 2003.
REFERENCED ON WOLFRAM|ALPHA
BBP-Type Formula
CITE THIS AS:
Weisstein, Eric W. "BBP-Type Formula." From MathWorld--A Wolfram Web Resource. https://mathworld.wolfram.com/BBP-TypeFormula.html

SUBJECT CLASSIFICATIONS
Number Theory  Constants  Pi 
Calculus and Analysis  Series  BBP Formulas 
Discrete Mathematics  Experimental Mathematics 
More...
About MathWorld MathWorld Classroom Send a Message MathWorld Book wolfram.com
13,973 Entries Last Updated: Fri Sep 15 2023 ©1999–2023 Wolfram Research, Inc. Terms of Use
Created, developed and nurtured by Eric Weisstein at Wolfram Research
]]]
[[[
https://mathworld.wolfram.com/Digit-ExtractionAlgorithm.html
Digit-Extraction Algorithm
===
Discrete Mathematics  Computer Science  Algorithms  General Algorithms 
Digit-Extraction Algorithm
An algorithm which allows digits of a given number to be calculated without requiring the computation of earlier digits. The BBP formula for pi is the best-known such algorithm, but an algorithm also exists for e.

Plouffe (2022) gives a particularly simple digit-extraction algorithm for the decimal digits of pi by defining

 pi_n=((2(-1)^(n+1)(2n)!)/(2^(2n)B_(2n)(1-2^(-n))(1-3^(-n))(1-5^(-n))(1-7^(-n))))^(1/(2n)). 	
(1)
Then the nth digit to the right of the decimal point of pi for n>=3 is given by

 d_n=int(10frac(10^(n-1)pi_(n-1))) 	
(2)
where int(x) is the integer part and frac(x) is the fractional part. Similar formulas can be obtained using

 lim_(n->infty)((2^(2n+2)(-1)^n(2n)!)/(E_(2n)))^(1/(2n+1))=pi 	
(3)
and

 lim_(n->infty)((2^(2n+2)(-1)^n(2n)!)/(E_(2n))(1-1/(3^(2n+1))))^(1/(2n+1))=pi, 	
(4)
where E_n is an Euler number, which gives a base-9 (or binary) digit extraction formula (Plouffe 2022). Similar results can be also obtained for pi^2, pi^n, pi^(2n+1), e^pi, lnpi, and sqrt(pi) (Plouffe 2022).

SEE ALSO
BBP Formula, Pi Digits, Pi Formulas
EXPLORE WITH WOLFRAM|ALPHA
WolframAlpha
algorithm

More things to try:

 algorithm
(A union B) intersect C
circle, diameter=10
REFERENCES
Plouffe, S. "A Formula for the n'th Decimal Digit or Binary of pi and pi^n." https://arxiv.org/abs/2201.12601. 29 Jan 2022.
REFERENCED ON WOLFRAM|ALPHA
Digit-Extraction Algorithm
CITE THIS AS:
Weisstein, Eric W. "Digit-Extraction Algorithm." From MathWorld--A Wolfram Web Resource. https://mathworld.wolfram.com/Digit-ExtractionAlgorithm.html

SUBJECT CLASSIFICATIONS
Discrete Mathematics  Computer Science  Algorithms  General Algorithms 
About MathWorld MathWorld Classroom Send a Message MathWorld Book wolfram.com
13,973 Entries Last Updated: Fri Sep 15 2023 ©1999–2023 Wolfram Research, Inc. Terms of Use
Created, developed and nurtured by Eric Weisstein at Wolfram Research
]]]


