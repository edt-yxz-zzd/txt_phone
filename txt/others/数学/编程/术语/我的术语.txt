
我的术语.txt

txt edit state
  ?TODO
  .DONE
  !WORKING

lambda:
  @All
  ?Some
  &Recur
  \Abstract
  $Let
  [proposition]
  input -> output
  term :: type
  subtype <: type

doc mask:
  『醒目文本』
      普通文本的醒目强调形式
  〖特义词条〗
      被赋予特殊语义的词条
      一般都是已定义/将定义的技术性词条
  【醒目特义词条】
      特义词条的醒目强调形式

file section:
==================================[ZZZ
==================================]ZZZ




包
  互斥并串数据类型
  打包O/拆包O - 串联
  涂装I/卸装O - 并联
  装成O/卸装O - 并联
    装成=涂装+

号/码
  #用于 压缩/解压 运行期 数据
  编号/解号
    #封号/解号？
    #索引？
    编号区 :: {x : 号}
    解号区 :: [x]
    ====
    后置保证：
      号 = 紧致自然数
    前置要求：
      数据 可散列
    空间开销：
      两个容器
  编码/解码
    编码 :: x -> 字节串
    解码 :: 字节串 -> x
    ====
    前置要求：
      数据 特定类型 设计一套编码方案











并行
  拟并行
    并发（concurrency）
  齐并行
    并行（parallellism）

互斥并串数据类型
  inductive data type
    收敛数据类型
  coinductive data type
    发散数据类型


finite state automata FSM
  regex
    并联union
    串联concatation
    闭包closure




编译相关 见：
  e others/数学/编程/编译/tokenize翻译-ast对比cst-降噪.txt

元语言vs句语言
语法 是 元语言 的 句
句法=句语法=语法
句析器=句法分析器=语法分析器
词析器=词法分析器
降噪


句析器 相关：
  重符 -> 阳符
  轻符 = 阳符 | 阴符

  阴义 = 阴符+轻符串
  句法 = 阴义集
  启动阴符

  重符流
  具象语法树
  抽象语法树

  孤语法=CFG
  端语法=FS













=====
  view others/数学/编程/tree/2_3_4_tree.txt
树节点 往上:
  根节点:无父节点
  非根节点:有父节点
树节点 往下:
  叉节点:
    子节点为叉节点或拳节点
    子节点为丫节点或末节点
    ===
    芽节点=根叉节点
    丫节点=非根叉节点
    ===
  拳节点:
    子节点为叶节点
    子节点为鳞节点
    ===
    独节点=根拳节点
    末节点=非根拳节点
    ===
  叶节点:
    无子节点
    ===
    卵节点=根叶节点
    鳞节点=非根叶节点
      ==父节点为拳节点
    ===
根节点=整树根节点=卵节点|独节点|芽节点

