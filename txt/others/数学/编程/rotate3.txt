rotate3

abcd :: real
	mx_r2 from mx1
		[ a, b, c, d
		;-b, a,-d, c
		;-c, d, a,-b
		;-d,-c, b, a
		]done!!!
		= (aa+...)^2
		





	mx_r3 from mx_r2
		s <- +-1i
		[ a,  b,  c,  d
		;-b,  a,-sd, sc
		;-c, sd,  a,-sb
		;-d,-sc, sb,  a
		]
		
		bcd=-bcd<==>flip
		[ a, -b, -c, -d
		; b,  a, sd,-sc
		; c,-sd,  a, sb
		; d, sc,-sb,  a
		]
		m0=m(a=0)
		tp(m0)=-m0
		
		bug xxxxxxxxx
		let s be conj
		|m| = (aa+bb'+cc'+dd')^2
		|m0| = (bb'+cc'+dd')^2
			aa not aa'
		|m(a=ia)| = (-aa+bb'+cc'+dd')^2
		xxxxxxxxxxx
		
		s=+-1
			|m|=(aa+bb...)^2
			t=+-i
			|m(a*=1/t)|=(-aa+bb+cc+dd)^2
			|m(a*=1/t)(col11&row234*=t)|
				=|m(a*=1/t)|*tttt
				=|m(a*=1/t)|
				=(-aa+bb+cc+dd)^2
		s=+-i
			|m|=aaaa-(bb+cc+dd)^2
			r=rt(2,i);rrrr=-1
			|m(a*=1/r)|=-aaaa-(bb+cc+dd)^2
			|m(a*=1/r)(col11&row234*=r)|
				=|m(a*=1/r)|*rrrr
				=aaaa+(bb+cc+dd)^2


"""
mx_r3
Counter({1: 10, 2: 3})
{
, 'aaaa': 1
, 'bbsbsb': 1
, 'ccscsc': 1
, 'ddsdsd': 1

, 'aabb': 1
, 'aacc': 1
, 'aadd': 1
, 'aasbsb': 1
, 'aascsc': 1
, 'aasdsd': 1

, 'bdsbsd': 2
, 'bcsbsc': 2
, 'cdscsd': 2
}
"""




=======
	mx_r4 from mx_r3
		stpq <- +-1i
		[ a,  b,  c,  d
		;-b, ta,-sd, sc
		;-c, sd, pa,-sb
		;-d,-sc, sb, qa
		]

"""
mx_r4
Counter({1: 10, 2: 3})
{'apaqata': 1
, 'asbsbta': 1
, 'aqasdsd': 1
, 'apascsc': 1
, 'bbpaqa': 1
, 'bbsbsb': 1
, 'bdsbsd': 2
, 'bcsbsc': 2
, 'ccqata': 1
, 'ccscsc': 1
, 'cdscsd': 2
, 'ddpata': 1
, 'ddsdsd': 1
}
"""




	mx_r5 from mx_r3
		s=+-1
		t=+-i
		ts=+-i
		[ a,   b,   c,   d
		; b,   a,-tsd, tsc
		; c, tsd,   a,-tsb
		; d,-tsc, tsb,   a
		]
		|mx_r5|=|mx_r3(a*=1/t)(col11&row234*=t)|
				=(-aa+bb+cc+dd)^2

		t=+-i
		[ a,  b,  c,  d
		; b,  a,-td, tc
		; c, td,  a,-tb
		; d,-tc, tb,  a
		]
		=(-aa+bb+cc+dd)^2

"""
mx_r5
Counter({-1: 6, 1: 4, -2: 3})
{#+1
, 'aaaa': 1
, 'bbtbtb': -1
, 'cctctc': -1
, 'ddtdtd': -1

#-2
, 'aatbtb': 1
, 'aatctc': 1
, 'aatdtd': 1
, 'aabb': -1
, 'aacc': -1
, 'aadd': -1

#+2
, 'cdtctd': -2
, 'bdtbtd': -2
, 'bctbtc': -2
=(-aa+bb+cc+dd)^2
}
"""


how to use mx_r3&mx_r5????
	mx_r3@2
	[ a, b
	;-b, a
	] = aa+bb
	
	t@2=+-1=s
	
	mx_r5@2
	[ a, b
	; b, a
	] = aa-bb
	
	#a+ix
	a=ix
	[ix, b
	; b,ix
	] = -xx-bb
	
	let m[2:,1] be same as mx_r3@2
	let (b,..)part in |m| be same
	[-ix, b
	; -b,ix
	] = xx+bb
	==>>
	[a-ix,   b
	;  -b,a+ix
	] = axax'+bb
	


	mx_r3
		s=+-1
		[ a,  b,  c,  d
		;-b,  a,-sd, sc
		;-c, sd,  a,-sb
		;-d,-sc, sb,  a
		] = (aa+bb+cc+dd)^2
	mx_r5
		t=+-i*s
		[ a,  b,  c,  d
		; b,  a,-td, tc
		; c, td,  a,-tb
		; d,-tc, tb,  a
		] = (-aa+bb+cc+dd)^2
		
		a=ix
		[ix,  b,  c,  d
		; b, ix,-td, tc
		; c, td, ix,-tb
		; d,-tc, tb, ix
		] = (xx+bb+cc+dd)^2
		
		let m[2:,1] be same as mx_r3
		[-ix,  b,  c,  d
		; -b, ix,-td, tc
		; -c, td, ix,-tb
		; -d,-tc, tb, ix
		] = -(xx+bb+cc+dd)^2
			#-(bb+cc+dd)^2 vs (bb+cc+dd)^2
		let (b,..)part in |m| be same
			#xbcd*=r #r^4=-1
		[-irx,  rb,  rc,  rd
		; -rb, irx,-trd, trc
		; -rc, trd, irx,-trb
		; -rd,-trc, trb, irx
		] = (xx+bb+cc+dd)^2
		fail!!!!!
		
		======find solution
		s??=+-1
		t??=??
		[s11ix,    b,    c,    d
		;   -b,s22ix, t23d, t24c
		;   -c, t32d,s33ix, t34b
		;   -d, t42c, t43b,s44ix
		] = (xx+bb+cc+dd)^2
		+2xxbb:
			s11s22t34t43=1
			s33s44=-1
		+xxxx:
			s11s22s33s44=1
				s11s22=-1
				t34t43=-1
		+2xxdd:
			s11t23t32s44=1
			s22s33=-1
				s11s44=-1
				t23t32=-1
		+2xxcc:
			s11s33t24t42=1
			s22s44=-1
				s11s33=-1
				t24t42=-1
		fail since:
			s33s44=-1
			s11s33=-1
			s11s44=-1
			






"""
find_mx4det2()

(-1j, 1j, 1j, -1j) [[1, 1, 1, 1], [1, -1, -1, -1], [1, 1j, -1, 1j], [1, (-0-1j), 1, (-0-1j)]]
(1j, -1j, 1j, -1j) [[1, 1, 1, 1], [1, -1, -1, -1], [1, 1j, 1j, 1], [1, (-0-1j), (-0-1j), -1]]
(1j, -1j, -1j, 1j) [[1, 1, 1, 1], [1, -1, -1, -1], [1, (-0-1j), -1, (-0-1j)], [1, 1j, 1, 1j]]
(-1j, 1j, -1j, 1j) [[1, 1, 1, 1], [1, -1, -1, -1], [1, (-0-1j), 1j, -1], [1, 1j, (-0-1j), 1]]
(1j, 1j, -1j, -1j) [[1, 1, 1, 1], [1, 1j, -1, 1j], [1, 1j, -1, 1j], [1, -1, 1, -1]]
(-1j, -1j, -1j, -1j) [[1, 1, 1, 1], [1, 1j, -1, 1j], [1, 1j, 1j, 1], [1, -1, (-0-1j), 1j]]
(-1j, -1j, 1j, 1j) [[1, 1, 1, 1], [1, 1j, -1, 1j], [1, (-0-1j), -1, (-0-1j)], [1, 1, 1, 1]]
(1j, 1j, 1j, 1j) [[1, 1, 1, 1], [1, 1j, -1, 1j], [1, (-0-1j), 1j, -1], [1, 1, (-0-1j), (-0-1j)]]
{4, 5, 6, 7, 8, 9, 10, 11}
"""
	(-1j, 1j, 1j, -1j)
	[[1, 1, 1, 1], [1, -1, -1, -1], [1, 1j, -1, 1j], [1, (-0-1j), 1, (-0-1j)]]
	====
	[[1, 1, 1, 1]
	, [1, -1, -1, -1]
	, [1, 1j, -1, 1j]
	, [1, (-0-1j), 1, (-0-1j)]
	]
	====
	mx_r6
		[ a,  b,  c,  d
		; b, -a, -d, -c
		; c, id, -a, ib
		; d,-ic,  b,-ia
		] = i(-aaaa+bbbb+cccc-dddd)


	==========
	(1j, -1j, 1j, -1j)
	[[1, 1, 1, 1], [1, -1, -1, -1], [1, 1j, 1j, 1], [1, (-0-1j), (-0-1j), -1]]
	====
	[[1, 1, 1, 1]
	, [1, -1, -1, -1]
	, [1, 1j, 1j, 1]
	, [1, (-0-1j), (-0-1j), -1]
	]
	====
	mx_r7
		[ a,  b,  c,  d
		; b, -a, -d, -c
		; c, id, ia,  b
		; d,-ic,-ib, -a
		] = i(aaaa-bbbb+cccc-dddd)
	mx_r6 vs mx_r7
		+-i(-aaaa+bbbb)
		sub_mx[34;34]
			[-a, ib
			; b,-ia
			]
			-=-=
			[ ia,  b
			;-ib, -a
			] # up=i*down
		
	
	======
	(1j, 1j, 1j, 1j) [[1, 1, 1, 1], [1, 1j, -1, 1j], [1, (-0-1j), 1j, -1], [1, 1, (-0-1j), (-0-1j)]]
	==
	[[1, 1, 1, 1]
	, [1, 1j, -1, 1j]
	, [1, (-0-1j), 1j, -1]
	, [1, 1, (-0-1j), (-0-1j)]
	]
	==
	mx_r8
		[ a,  b,  c,  d
		; b, ia, -d, ic
		; c,-id, ia, -b
		; d,  c,-ib,-ia
		] = i(aaaa+bbbb+cccc+dddd)

	mx_r8_2
		[ a,  b,  c,  d
		;ib, -a,-id, -c
		;ic,  d, -a,-ib
		;id, ic,  b,  a
		] = (aaaa+bbbb+cccc+dddd)


"""
find_mx4det2(iter_mx3, show_all_per_case=tt)

(1, (1+0j), (1+0j), (1+0j)) [[1, 1, 1, 1], [1j, 1, (-0-1j), -1], [1j, 1, -1, (-0-1j)], [1j, 1j, 1, -1]]
(1, (1+0j), (1+0j), (1+0j)) [[1, 1, 1, 1], [1j, 1, (-0-1j), -1], [1j, 1, 1, (-0-1j)], [1j, 1j, 1, 1]]
(1, (1+0j), (1+0j), (1+0j)) [[1, 1, 1, 1], [(-0-1j), -1, (-0-1j), -1], [1j, 1, -1, 1j], [1j, 1j, 1, 1]]
(1, (1+0j), (1+0j), (1+0j)) [[1, 1, 1, 1], [(-0-1j), -1, (-0-1j), -1], [1j, 1, -1, (-0-1j)], [1j, 1j, -1, 1]]
(1, (1+0j), (1+0j), (1+0j)) [[1, 1, 1, 1], [1j, -1, (-0-1j), 1], [(-0-1j), 1, -1, (-0-1j)], [1j, 1j, 1, 1]]
(1, (1+0j), (1+0j), (1+0j)) [[1, 1, 1, 1], [1j, -1, (-0-1j), 1], [1j, 1, -1, (-0-1j)], [1j, (-0-1j), 1, 1]]
(1, (1+0j), (1+0j), (1+0j)) [[1, 1, 1, 1], [1j, -1, 1j, -1], [1j, -1, -1, (-0-1j)], [1j, 1j, 1, 1]]
(1, (1+0j), (1+0j), (1+0j)) [[1, 1, 1, 1], [1j, -1, 1j, -1], [1j, 1, -1, (-0-1j)], [(-0-1j), 1j, 1, 1]]
{4, 5}
Counter({4: 8, 5: 4})

====
mx_r8_2=
[[1, 1, 1, 1], [1j, -1, (-0-1j), -1], [1j, 1, -1, (-0-1j)], [1j, 1j, 1, 1]]

22,44;22,33;;21,34;21,43;;24,31;24,42;;23,32;23,41
8variant of mx_r8_2
22,44
[[1, 1, 1, 1], [1j, 1, (-0-1j), -1], [1j, 1, -1, (-0-1j)], [1j, 1j, 1, -1]]

22,33
[[1, 1, 1, 1], [1j, 1, (-0-1j), -1], [1j, 1, 1, (-0-1j)], [1j, 1j, 1, 1]]

21,34
[[1, 1, 1, 1], [(-0-1j), -1, (-0-1j), -1], [1j, 1, -1, 1j], [1j, 1j, 1, 1]]

21,43
[[1, 1, 1, 1], [(-0-1j), -1, (-0-1j), -1], [1j, 1, -1, (-0-1j)], [1j, 1j, -1, 1]]

24,31
[[1, 1, 1, 1], [1j, -1, (-0-1j), 1], [(-0-1j), 1, -1, (-0-1j)], [1j, 1j, 1, 1]]

24,42
[[1, 1, 1, 1], [1j, -1, (-0-1j), 1], [1j, 1, -1, (-0-1j)], [1j, (-0-1j), 1, 1]]

23,32
[[1, 1, 1, 1], [1j, -1, 1j, -1], [1j, -1, -1, (-0-1j)], [1j, 1j, 1, 1]]

23,41
[[1, 1, 1, 1], [1j, -1, 1j, -1], [1j, 1, -1, (-0-1j)], [(-0-1j), 1j, 1, 1]]

==

22,44;22,33;;
21,34;21,43;;
24,31;24,42;;
23,32;23,41;;
==
22/21/24/23

"""
	mx_r8_3 from mx_r8_2
		by +- two places per sym
		(-a22,-a44)good
		(-a22,-a33)good
		(-a33,-a44)bad
		--
		[ a,  b,  c,  d
		;ibb3b4, -aa3a4,-idd3d4, -cc3c4
		;icc3,  dd3, -aa3,-ibb3
		;idd4, icc4,  bb4,  aa4
		] =?= (aaaa+bbbb+cccc+dddd)
		_3,_4 <- +-1
		(_3,_4) /= (-1,-1)
		if all good:
			#num syms that +- -> num mx
			k:ch(4,k)*2^k
			0:1
			1:ch(4,1)*2^1=8
			2:ch(4,2)*2^2=24
			3:ch(4,3)*2^3=32
			4:2^4=16
		but data from find_mx4det4()
			dt_sign2c Counter({4: 80, 0: 61, 8: 42, 12: 8, 16: 1})
			dt_sign = 16-4k
			{#dt_sign: count : k
			, 0: 61 : 4
			, 4: 80 : 3
			, 8: 42 : 2
			, 12: 8 : 1
			, 16: 1 : 0
			})

		
"""
find_mx4det4()

...
det_lens {8, 9, 4, 5}
det_len2c Counter({8: 2816, 9: 768, 4: 384, 5: 128})
dt_sign2c Counter({4: 80, 0: 61, 8: 42, 12: 8, 16: 1})
===
4: 80=3^4-1
"""


	==>>
	mx_r8_4 from mx_r8_2 mx_r8_3
		[ a,  b,  c,  d
		;ib,-a',-id, -c
		;ic,  d, -a,-ib
		;id, ic,  b, a'
		] =/= (aaa'a'+bbbb+cccc+dddd)
		=-iaacc +ia'a'cc +aaa'a'+bbbb+cccc+dddd
		=(aa+icc)(a'a'-icc) + bbbb+dddd
		=|aa+icc|^2 + b^4+d^4
		

"""
mx_r8_4
Counter({1: 4, -1j: 1, 1j: 1})
{"aaa'a'": 1
, 'aacc': -1j
, 'bbbb': (1+0j)
, "a'a'cc": 1j
, 'cccc': (1+0j)
, 'dddd': 1
}

"""

	mx_r8_5 from mx_r8_4
		[ a,  b,  c,  d
		;ib,-a',-id,-c'
		;ic,  d, -a,-ib
		;id,ic',  b, a'
		]=|aa+icc|^2 + b^4+d^4
		

	mx_r8_6 from mx_r8_5
		[  a,  b,   c,   d
		;ib',-a',-id', -c'
		; ic, d',  -a,-ib'
		; id,ic',   b,  a'
		]
	mx_r8_7 from mx_r8_5
		[  a,  b,   c,   d
		;ib',-a',-id', -c'
		; ic,  d,  -a, -ib
		;id',ic',  b',  a'
		]


