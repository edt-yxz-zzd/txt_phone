
e others/数学/编程/设计/识别器.txt


流流识别器::流->流
流树识别器::流->树
树树识别器::树->树

输入流::[token]
  token:
    kind/symbol #含eof???
    payload/value
    location_span/(begin_location, end_location)
        location:不透明数据/无前后大小关系
输入树::node
  node:
    kind
    payload
    location_span/(begin_location, end_location)
    children :: [node]

kind-出现于语法书中
payload-用于后处理

#xxx:识别器{参数:影响识别成功返回时的覆盖范围的核心参数/纯初识用参数;后处理用参数(不导致识别失败返回，可能导致识别中止异常);后断言用参数(导致识别失败返回或识别中止异常)}
识别器{参数:(纯初识用参数;纯变换用参数;纯断言用参数;脏处理用参数)}
  语境无关
  语境敏感:(A>>B):向后传递纯初识用参数？
  ---
  分阶段:
    #纯函数:
    纯初识: 识别成功返回|(有分枝=>)识别失败返回#(纯函数=>)并不:识别中止异常
    纯变换: 识别成功返回|(无分枝/无变更成败=>)识别失败返回#(纯函数=>)并不:识别中止异常
    纯断言(仅限于选择性变更成败,无:变换消息): 识别成功返回|(有分枝/可变更成败=>)识别失败返回#(纯函数=>)并不:识别中止异常
    #以上构成:扩增版纯初识系统
    #以下构成:分离式后处理系统
    #脏方法:
    脏处理: 识别成功返回|(无分枝/无变更成败=>)识别失败返回|(脏方法=>)识别中止异常
      #分离式=>只能中止，不能变更成败
      #分离式=>取消:脏断言
    ==>>:
      typing:(纯初识,([([纯变换],纯断言)],[纯变换]),[脏处理])
      regex"{纯初识}(({纯变换}*{纯断言})*{纯变换}*)({脏处理}*)"
      ==>>:
      regex"({纯初识}(({内建纯变换}*{内建纯断言})*{内建纯变换}*))(({纯变换}*{纯断言})*{纯变换}*)({脏处理}*)"

等等，输出必须扩展:
  只有 特殊位置 的 识别器 才需要特化 多个输出+多个输入，甚至就不是识别器
  *不同流动方向:
    *向上输出(子>>父)
    *向后输出(兄>>弟)
      ...四个输入:(纯初识用参数;纯变换用参数;纯断言用参数;脏处理用参数)
  *不同求值阶段:
    *纯函数求值于读取数据阶段
    *脏处理运行于提取数据阶段
  ==>>:四个输出
    ++各自的『欤忽略』ignore
    共:(四个输入,四个欤忽略)=>四个输出
[扩增版纯初识系统.输出 === 分离式后处理系统.输入]
扩增版纯初识系统.输出:
  | (失败,失败位置,失败消息)
  | (成功,成功位置,成功消息)
  where:
    失败位置:
      | 起讫范围纟输入码元 :: (起点,讫点)
      | 讫点纟输入码元串/伪起讫范围纟伪输入码元纟终结 :: (讫点,)
    失败消息:
      | 纯初识.输出
      | 纯变换.输出
      | (仅限于选择性变更成败,无:变换消息)xxx:纯断言.输出
    成功位置:起讫范围纟输入码元 :: (起点,讫点)
    成功消息:
      | (杈型内生性数据,引用纟脏处理)
      | (叶型内生性数据,)
      # 纯变换::内生性数据->内生性数据
      # 脏处理::(内生性数据|派生性数据)->派生性数据
      # 引用纟脏处理::[名纟脏处理] # 即使是空的，依旧必需保留 用于区分 杈型/叶型
      # 杈型内生性数据::(串联,[成功消息])|(并联,(址引,成功消息))|...待定部分纟子类重载
      # 叶型内生性数据::不透明数据#用户自定义
      ===:
      | 纯初识.输出
        | 内建纯初识.输出
          并联|串联
          内建纯初识.输入:允许:杈型,叶型
            杈型=>递归深入父节点后序遍历脏处理
        | 用户纯初识.输出
          可能根本不存在???用户纯初识.输入:仅允许:叶型#禁止:杈型
      | 纯变换.输出
        | 内建纯变换.输出
          内建纯变换.输入:允许:杈型,叶型
          用于构成 内建纯初识
        | 用户纯变换.输出
          用户纯变换.输入:仅允许:叶型#(杈型.待定部分纟子类重载=>)禁止:杈型
      | (仅限于选择性变更成败,无:变换消息)xxx:纯断言.输出

