block_encrypt by choose

block_encrypt by:
	bk := input
	for b in iter_bits(key):
		if b:
			bk := f0(bk)
		else:
			bk := f1(bk)


block_encrypt<key>'s order should be a large prime

assume G=group<f0,f1>
assume order G = p^n
assume f0.f1 != f1.f0
	==>>[n>=3]


to make m=bit_len(key) meaningful
	[p > 2^m]


a,b=f0,f1
assume order a,b=p^x,p^y

[n==3]:
	[x==1==y]:
		p^2*(p-1) == len{a^i*b^j*a^k | j%p!=0}
		p=len{a^i}
		p*(p-1)=???
	[x==1][y==2]:







