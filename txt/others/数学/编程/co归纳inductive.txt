co归纳inductive.txt

归纳法 induction
归纳的 inductive
co-inductive

作用于coinductive data type的递归函数必须由inductive data type的参数控制递归深度
  如：pattern-match时
    ，目标模式本身可当作inductive的立即数
    ，所以可作用于coinductive以实现有限深度拆包
    ，将匹配模式当作递归拆包函数


我试试翻译成: 收敛类型，发散类型
  ====
  最小不动点inductive
  最大不动点coinductive
  ====
  基筑/塔升inductive
  空降coinductive
  ====
  先下inductive
  先上coinductive
  ====
  先叶inductive
  先根coinductive
  ====
  先枝inductive
  先干coinductive
  ====
  后核inductive
  先核coinductive
  ====
  先础inductive
  后础coinductive
  ====
  先毛inductive
  先骨coinductive
  ====
  #筑室道旁，三年不成
  先楼inductive
  先路coinductive
  ====
  先棋inductive
  先盘coinductive
  ====
  拼装inductive
  分蘖coinductive
  ====
  汇聚inductive
  蔓延coinductive
  ====
  油炸inductive
  烛照coinductive
  ====
  渐聚/渐通inductive
  渐丰coinductive
  ====
  合形inductive
  分形coinductive
  ====
  归纳/收敛inductive
  溢出/延展/发散coinductive
  ====





============================
https://www.zhihu.com/question/60184579
Belleve
编程话题下的优秀回答者

Haskell 没法解释，它是延迟求值的不能区分 Inductive 和 Coinductive。（而且 Haskell 程序员还特别喜欢滥用 Coinduction。）

Idris 里面的话，下面的定义

codata Colist : Type -> Type where
    Nil  : Colist a
    (::) : a -> Colist a -> Colist a

等于

data Colist : Type -> Type where
    Nil  : Colist a
    (::) : a -> Inf (Colist a) -> Colist a

其中的 Inf a 定义为 Delay Infinite a，即表明是延迟求值。

从语义上看，Inductive type 描述了如何从更小的 term 构造更大的 term，Coinductive 则相反，描述了从更大的 term 怎么分解成更小的 term。









============================
https://zhuanlan.zhihu.com/p/56285253
试论 co- 的译法：余弦 cosine 词源漫谈
Oling Cat
笨猫一只。

#2019-3-14 更新

在思考了各种现行翻译和词义演变的现象后，笔者最终还是决定在一些情况下将 co- 译作「余」，即将「余」字的含义泛化，等同于 co-。这样处理后可以避免各种歧义和不必要的联想，也方便翻译工作。如果有人好奇 co- 翻译成「余」的原因，那么可以将本文作为参考来源告知。

根据评论里 Sora 的说法：

    私以为 coinductive 用“余”还更好点，因为它有“恰到好处的疏离感”。跟其他的， where “逆”有特定含义的数学分支凑在一起时，这样反而可能引起不好的联想，逆似乎暗示着某种结合性。上同调那个就是很好的例子，并不是什么都反过来了。要是动用一点“空间想象”，我们也可以把 inductive 跟 coinductive 当成图论里那种对偶--在概念的空间里互相插空--的关系。
    另外，似乎 co- 因能指广泛被（懒惰的）数学家拿来当 gateway 用才让事情变得这么麻烦的

以下为原文：
...
...
...
我们还来看这张图。现在想象你站在圆心 O 点，向 E 处看去。∠AOB 是你可以清楚看到的范围，正前方的正弦是你看到的画面。然而当你注视前方时，你会还会发现视角的两边也能感受到模糊的画面，这叫做眼角的「余光」。余光所看到的画面（图中蓝线），就是余弦。

「余」即剩余，我们在数学中最早接触的「余」就是「余数」，表示除不尽剩下的数。如果我们把正视的角叫「正角」∠AOB，那么余光所视的角就是它的「余角」∠AOF。于是我们得到了余角的定义：

若两角之和为直角（即 90°），则称这两个角「互为余角（complementary angles）」，简称「互余」。余角所对的弦，就是余弦。

顺带一提，若两角之和为平角（即 180°），则称这两个角「互为补角（supplementary angle）」，简称「互补」。

互余（complementary）的前缀 com-，和余弦（cosine）的 co- 其实来自同一个词源，作为拉丁语的前缀表示「一起，相伴（with, together）」的意思。com- 放到元音和轻音之前，变成了 co-；在 -g- 前，为 cog- 或 con-；在 -l- 前，为 col-；在 -r- 前为 cor-；在 -c-、-d-、-j-、-n-、-q-、-s-、-t- 和 -v- 前则化成了 con-。

一根射线将直角分为两半，二角相伴相生，此消彼长。所对应的正弦余弦亦是如此。然而在中文里，「余」只有剩余的意思，因此并不能把所有的 co- 都翻译成余。实际上，一切相生相克的东西，都是互 co- 的。男是 co-女，阴是 co-阳，天是 co-地，柔是 co-刚。

所以 co- 有了太多太多的译法：

coerce 是围在一起，成了约制；covariant 是一起变型，成了协变；collect 是选出来放在一起，成了收集；conjugate 比作马车曲木的两端，成了共轭。coauthor 是合作者；codomain 是陪域。

余、共、互、逆、陪、伴、协、同、交、合、配、对、逆、反、偶、上……我们在看到这个词头时，不必像意呆利那个把胸部当成 jiba 的曲直不分的家伙那样直译，而是像徐光启那样，直接看清它的本质是什么。知其变，守其恒，为天下式。

当我看到陈意云老师把 coinduction 翻译成「余归纳」的时候，我很困惑：「余」在哪了？而当我发现 coinduction 就是把归纳的过程反过来后，自然就有了它的译法：逆归纳。「反」是一个静态的描述，而「逆」是一个动态的表述。当归纳的箭头有了流动的方向，逆流而上便是把箭头反过来最自然的想法了。于是在英语世界，有了很多关于 co- 的妙语：

    Q : What does a category theorist call a reader?
    A : A "co-author".
    问：范畴论学家把读者称为什么？
    答：「协作者」。

    "I had a dream last night. I cheated on my wife and she knew it."
    "But dream is coreality."
    "So the reality is?"
    "Your wife cheated on you and you didn't know it."
    「我做了一个梦，梦见我对我妻子出轨了，被我妻子知道了。」
    「可是梦是与现实伴生的（co-现实）。」
    「所以现实应该是？」
    「你的妻子对你出轨了，而你还不知道。」

    A mathematician is a machine that turns coffee into theorems.
    A comathematician is a comachine that coturns cotheorems onto ffee.

    在一个叫“上古卷轴”的游戏里，有一个卫兵的膝盖中了一箭。
    在一个叫“古卷轴”的游戏里，有一枚上箭从上士兵的上膝盖里上射了出来。

    A coconut is just a nut.
    （椰子就是坚果。）

负负得正，看来 co- 是对合（involution）的。



