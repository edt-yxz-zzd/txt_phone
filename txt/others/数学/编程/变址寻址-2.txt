e others/数学/编程/变址寻址-2.txt

[[
see:
    <<Compilers and Compiler Generators(1996-2000)(Terry).pdf>>
    /sdcard/0my_files/book/lang/编译/Compilers and Compiler Generators/pdfvers.pdf
vs:
    view others/数学/编程/变址寻址.txt
      隐含寻址/串操作寻址方式
      I/0端口寻址方式?
      立即寻址:立即数
      寄存器寻址:寄存器
      直接寻址：[偏移地址]
      寄存器间接寻址：[基址寄存器/变址寄存器]
      寄存器相对寻址：[基址寄存器/变址寄存器+偏移量值]
      基址变址寻址：[基址寄存器+变址寄存器]
      相对基址变址寻址：[基址寄存器+变址寄存器+偏移量值]
      ==>>:
      以下5个共同:
        立即寻址:立即数
        寄存器寻址:寄存器
        直接寻址：[偏移地址]
        寄存器间接寻址：[基址寄存器/变址寄存器]
        寄存器相对寻址：[基址寄存器/变址寄存器+偏移量值]
      以下4个独有:
        隐含寻址/串操作寻址方式
        I/0端口寻址方式?
        基址变址寻址：[基址寄存器+变址寄存器]
        相对基址变址寻址：[基址寄存器+变址寄存器+偏移量值]
      以下3个没有:
        内存基址寻址:[x+[y]]
        内存间接寻址:[[y]]
        跳转相对寻址:jmp



===
寻址模式:
immediate addressing立即寻址/立即数
  value = x
  #999
direct/absolute addressing直接寻址/绝对寻址
  value = *(x)
  [777]
register-indexed addressing寄存器基址寻址/寄存器相对寻址
  value = *(R+x)
  R[777] ; or: 777[R]
register-indirect addressing寄存器间接寻址
  value = *(R)
  @R ; or: [R]
应当有:register-direct addressing寄存器直接寻址/寄存器寻址
  value = R
  R
memory-indexed addressing内存基址寻址
  value = *(x+*(y))
  777[[333]]
memory-indirect addressing内存间接寻址
  value = *(*(x))
  @777 ; or: [[777]]
    指针变量(指针变量 本身就是 指针/指针<指针<值>>，一次解引用 得到 值变量/指针<值>，两次解引用 得到 值)
"branching" instruction:relative addressing (based-PC) 跳转相对寻址
  goto/jmp...
  value = PC+x
  PC += x

processor status (PS)
  typedef enum { running, finished, nodata, baddata, badop } status; 
  status ps;

]]
