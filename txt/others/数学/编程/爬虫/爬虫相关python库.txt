
爬虫相关python库





我的爬虫框架设计: 网址+类型:总目标==>>动作模版==>>结果:本页面信息提取+[子网址+类型:子目标]




bs4 doc
  https://www.crummy.com/software/BeautifulSoup/bs4/doc/
    like py.chm
  https://beautiful-soup-4.readthedocs.io/en/latest/
  https://readthedocs.org/projects/beautiful-soup-4/downloads/pdf/latest/
    pdf





爬虫python库
==================================[ZZZ
https://zhuanlan.zhihu.com/p/81944559
Python 网络爬虫的常用库汇总
实验楼在线教育

爬虫的编程语言有不少,但 Python 绝对是其中的主流之一。下面就为大家介绍下 Python 在编写网络爬虫常常用到的一些库。

请求库：实现 HTTP 请求操作
    urllib：一系列用于操作URL的功能。
    requests：基于 urllib 编写的，阻塞式 HTTP 请求库，发出一个请求，一直等待服务器响应后，程序才能进行下一步处理。
    selenium：自动化测试工具。一个调用浏览器的 driver，通过这个库你可以直接调用浏览器完成某些操作，比如输入验证码。
    aiohttp：基于 asyncio 实现的 HTTP 框架。异步操作借助于 async/await 关键字，使用异步库进行数据抓取，可以大大提高效率。

解析库：从网页中提取信息
    beautifulsoup：html 和 XML 的解析,从网页中提取信息，同时拥有强大的API和多样解析方式。
    pyquery：jQuery 的 Python 实现，能够以 jQuery 的语法来操作解析 HTML 文档，易用性和解析速度都很好。
    lxml：支持HTML和XML的解析，支持XPath解析方式，而且解析效率非常高。
    tesserocr：一个 OCR 库，在遇到验证码（图形验证码为主）的时候，可直接用 OCR 进行识别。

存储库：Python 与数据库交互

    pymysql：一个纯 Python 实现的 MySQL 客户端操作库。
    pymongo：一个用于直接连接 mongodb 数据库进行查询操作的库。
    redisdump：一个用于 redis 数据导入/导出的工具。基于 ruby 实现的，因此使用它，需要先安装 Ruby。

爬虫框架
    Scrapy：很强大的爬虫框架，可以满足简单的页面爬取（比如可以明确获知url pattern的情况）。用这个框架可以轻松爬下来如亚马逊商品信息之类的数据。但是对于稍微复杂一点的页面，如 weibo 的页面信息，这个框架就满足不了需求了。
    Crawley：高速爬取对应网站的内容，支持关系和非关系数据库，数据可以导出为 JSON、XML 等。
    Portia：可视化爬取网页内容。
    newspaper：提取新闻、文章以及内容分析。
    python-goose：java 写的文章提取工具。
    cola：一个分布式爬虫框架。项目整体设计有点糟，模块间耦合度较高。

Web 框架库
    flask：轻量级的 web 服务程序，简单，易用，灵活，主要来做一些 API 服务。做代理时可能会用到。
    django：一个 web 服务器框架，提供了一个完整的后台管理，引擎、接口等，使用它可做一个完整网站。
==================================]ZZZ






==================================[ZZZ
https://www.zhihu.com/question/60280580

=======
麻瓜编程
  ===总结
    Requests:aiohttp/asks/vibora
    Selenium+webdriver:pyppeteer/requestium/arsenic
    框架:grab/botflow/ruia

在这里推荐几个值得关注的异步爬虫库，给你的爬虫提速。看看有没有你没听过的？
类似 Requests 的库

    为什么要推荐类似 Requests 的库呢？Requests 不够好吗？

    虽然 Requests 对于新手很容易上手，但它是同步的、并不是异步设计的。在 HTTP 请求的时候是需要 IO 等待的。比如说，当你使用 Requests 库进行请求，网站进行返回的时候，这时 IO 就会阻塞，程序就需要等待网站的返回，这就让爬取速度变慢了。

    那么异步的好处在哪呢？（侯爵老师兴奋的停不下来，继续说着）

    Python 的代码是一行行去执行。也就是说，如果哪一行是非常耗时间的，之后的所有事情都会等到它完成才执行。因此 Python 异步编程也就应运而生用来解决这个问题。异步的方式在于你写的这些代码中哪些是执行时间非常短的，那么就先执行，耗时的操作会被搁在后面，并且执行这个过程完全都由 Python 的异步库自己来进行调控。

    这样的好处就是只写少量的代码也能达到不错的效率，同时在代码可读性上也变得更加直观了。

下面这几个库，都是类似 Requests 的用法但是基于异步的设计。
▍ 最推荐：aiohttp
aio-libs/aiohttp

aiohttp 是纯粹的异步框架，同时支持 HTTP 客户端和 HTTP 服务端，可以快速实现异步爬虫。坑比其他框架少。并且 aiohttp 解决了requests 的一个痛点，aiohttp 可以轻松实现自动转码，对于中文编码就很方便了。
▍ 第二推荐：asks
theelous3/asks

Python 自带一个异步的标准库 asyncio，但是这个库很多人觉得不好用，甚至是 Flask 库的作者公开抱怨自己花了好长时间才理解这玩意，于是就有好事者撇开它造了两个库叫做 curio 和 trio，而这里的 ask 则是封装了 curio 和 trio 的一个 http 请求库。
ask的家族谱系图

用起来和 Requests 90%相似，新手也可以很快上手。
▍ 第三推荐：vibora
vibora-io/vibora

号称是现在最快的异步请求框架，跑分是最快的。写爬虫、写服务器响应都可以用。

但这个项目一直在重构，这谁受得了。现在页面上还挂着项目正在重构的警告，使用需谨慎啊。
类似 Selenium 的库

Selenium +webdriver 可以用来模拟用来模拟浏览器请求，Selenium也是同步的、而不是异步设计的。而下面这些库不光是从效率上，还有易用性上也比 Selenium 进化了不少。
▍ 最推荐：Pyppeteer
miyakogi/pyppeteer

Pyppeteer 是异步无头浏览器（Headless Chrome），从跑分来看比 Selenium + webdriver 快，使用方式是最接近于浏览器的自身的设计接口的。它本身是来自 Google 维护的 puppeteer，但是按照 Python 社区的梗，作者进行了封装并且把名字中的 u 改成了 y

特点是异步的设计，接口非常浏览器化，注入 JS 也很方便。
▍ 第二推荐：Requestium
tryolabs/requestium


Requests 的作者 Kenneth Reitz 曾经转发称赞过这个库。

Requestium 是 Requests 和 Selenium 封装的产物，并且提供了友好的接口切换，这样就可以根据需求切换了。

值得一提的是，Requestium 有一个 Wait Until 的方便设计，它的作用是确保页面中的某一个元素出现了才会进行下面的代码，这样一来就很轻松的避免了一些诡异的错误。GitHub 页面上有一组示例，是使用 Requestium 以及使用 Requests + Selenium + lxml 的对比，可以很明显看出区别。
使用 Requestium 以及使用 Requests + Selenium + lxml 的对比
▍ 第三推荐：arsenic
HDE/arsenic

HDE 公司用在了实际生产中的项目抽离出来的框架。和 selenium 接口几乎一致，学习成本相对较低。不同在于是异步的设计。不过文档有点糟糕。
框架
▍ 最推荐：Grab
lorien/grab

前端圈很流行说渐进式框架，那么 Grab 可以说是爬虫界的渐进式框架。想简单用时有简单的用法，想复杂使用时也有复杂的用法。封装的很好，基于生成器异步的设计。
▍ 第二推荐：botflow
https://github.com/kkyon/botflow

国人作者。概念很新颖，定位成了处理数据工作流的框架，可以用来爬虫、机器学习、量化交易等等。
▍ 第三推荐：ruia
https://github.com/howie6879/ruia

国人作者。比较接近 Scrapy 的使用方式，异步设计。作者也在知乎但是很低调
@howie
非 Python 框架
▍ Golang 爬虫框架
gocolly/colly

应该是 Golang 里使用量最多的爬虫框架了。Golang 语言本身就对并发支持很好。让你在使用时只考虑业务本身就可以。框架结构化、清晰、代码好读。
▍ nodejs 爬虫框架
yujiosaka/headless-chrome-crawler

JS 圈里的一个奇葩，整个爬虫都基于 Chrome ，并且自带一个调度队列。实际测试速度和稳定性均不俗。
==================================]ZZZ
==================================[ZZZ
==================================]ZZZ
==================================[ZZZ
==================================]ZZZ
==================================[ZZZ
==================================]ZZZ
==================================[ZZZ
==================================]ZZZ
==================================[ZZZ
==================================]ZZZ
==================================[ZZZ
==================================]ZZZ
