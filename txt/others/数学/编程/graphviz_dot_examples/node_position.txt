graphviz donot support drawing of planar graph
    ==>> turn to networkx.drawing.layout.planar_layout

import networkx as nx
pos = nx.planar_layout(G)
nx.draw_planar(G)


https://graphviz.org/doc/info/lang.html
https://stackoverflow.com/questions/49040633/converting-network-graph-to-graphviz
https://stackoverflow.com/questions/5343899/how-to-force-node-position-x-and-y-in-graphviz

py.networkx:
    import networkx as nx
    G.add_node(v,x=100,y=100)
    for v in G:
        G.node[v]['pos'] = "{},{}!".format(G.node[v]['x'], G.node[n]['y'])
    nx.drawing.write_dot(G, "test.dot")
    ===
    import pydot
    p = nx.nx_pydot.to_pydot(G)
graphviz.dot:
    #should call neato with pos
    #neato xxx.dot -n2 -Tpng -o xxx.png
    overlap = false ;
    v [pos=100,50!];
        #设置 点v 的 位置
        #point 的 格式：f"{},{}!"
    u [pos="100,50"];
        #???
    w [pos="100,50!"];
        #???
    v -> u  [pos="e,27,324.1 27,359.7 27,351.98 27,342.71 27,334.11"];

man dot
    -n[1|2] (no-op)
        If set, neato assumes nodes have already been positioned and all nodes have a pos attribute giving the positions.
        It then performs an optional adjustment to remove node-node overlap
          , depending on the value of the overlap attribute
          , computes the edge layouts
          , depending on the value of the splines attribute
          , and emits the graph in the appropriate format.
        If num is supplied, the following actions occur:
           num = 1
               Equivalent to -n.
               # -n1 === -n
           num > 1
               # -n2 不调整 点的位置 哪怕重叠
               Use node positions as specified, with no adjustment to remove node-node overlaps
                 , and use any edge layouts already specified by the pos attribute.
               neato computes an edge layout for any edge that does not have a pos attribute.
               As usual, edge layout is guided by the splines attribute.






