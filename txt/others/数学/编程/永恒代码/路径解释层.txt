
e others/数学/编程/永恒代码/路径解释层.txt

类似 DNS解析，路径解释 由 应用程序 外包给 系统。

当下，程序一般 只知道 几个固定的文件夹:被安装的目标文件夹，当前用户的配置文件夹，整机的默认配置文件夹，当前工作目录
其实，可分为两类，一类是 支持程序运行的文件夹，一类是 业务相关的文件夹
支持程序运行的文件夹:
  不同分类法:
    * 版本:
      新旧
      稳定/试验/调试
    * 平台
      平台相关代码
        但 也有 平台无关代码，帮助文件，数据文件...
    * 必要性
      有些必要，有些可选(插件，配置-如：vim特定于不同语言的语法高亮配置文件)
      单文件，文件组合...
    * 次序
      依赖方向 以及 如何依赖
      如：
        一半是 假设 以 整机的默认配置文件夹 为 基量，以 当前用户的配置文件夹 为 差量，组合构成 最终配置
        配置 := 整机的默认配置文件夹
        配置 :+= 当前用户的配置文件夹
      ##依赖方向
      但！也可以有 整机的强制配置文件夹
        配置 := 整机的默认配置文件夹
        配置 :+= 当前用户的配置文件夹
        配置 :+= 整机的强制配置文件夹
      ##如何依赖
      但！也可以有 当前用户的配置文件夹 直接用作 全量 而非 差量
        配置 := 当前用户的配置文件夹
        配置 :+= 整机的强制配置文件夹
      但！也可以有 整机的强制配置文件夹 直接用作 全量 而非 差量
        配置 := 整机的强制配置文件夹


如果 由 应用程序 自定义 配置 这些路径，不仅程序设计麻烦，浪费代码，更重要的是 各程序接口标准不同，注定用户

