
e others/数学/编程/永恒代码/接口纟子部件.txt

[[
循环引用:

方案一:各种接口压缩到同一对象
class A(B,C):
    # 接口庞杂，可能有命名冲突

方案二:子部件循环引用全对象
  #某些情形之下弱引用无用，比如: 非私用子部件，由于外部也在使用子部件，弱引用不能确保子部件包含全对象。
class A:
    def __init__(sf, ...):
        sf._b = B(sf)
        sf._c = C(sf)
            # 循环引用,加大垃圾回收难度

方案三:使用扩增接口牜显式输入全对象
  #接口初始设计便考虑到作为子对象使用
  #但逻辑上，也有点乱:是否可以所有类统一使用扩增接口？若是统一使用，那谁是全对象？谁是透明中间层？
class B:
    def f(b:B, a:A, ...):
class C:
    def g(c:C, a:A, ...):
class A:
    def __init__(sf, ...):
        sf._b = B()
        sf._c = C()
    def h(a:A, ...):
        # A是全对象
        sf._b.f(a, ...)
        sf._c.g(a, ...)
    def hh(a:A, w:W, ...):
        # A是透明中间层
        sf._b.f(w, ...)
        sf._c.g(w, ...)

]]

