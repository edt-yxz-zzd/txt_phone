丑语
考虑抽象语法
不考虑具体语法(是否简洁)、底层细节(字节编码)


本文符号解释：
：前缀『：』：缩进
：后缀『：』：解释
：【语言定义的名字】
：〖作者定义或引用的名字〗
：〔下载程序随意选的名字〕
：〈任意的数据〉
：《自动计算的结果》
：『引号』
：「注释」


hash：
：bug: 本文特指[Char]->[Char]，而非[Char]->[Byte]
：基本散列方法：本文特指[Integer]->[Integer] or 编码映射名->[Char]->(编码映射名, [Char])，而非[Byte]->[Byte]
：散列名＝高级散列方法名＝基本散列方法名＋配置参数「含输入输出编码映射名」
：高级散列方法：本文特指[Char]->[Char]
：散列值＝散列名（文本）
：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：

签名
包的设计不变量
	#eg. sympy
	SymPy Tutorial
		/Advanced Expression Manipulation
			/Recursing through an Expression Tree
		#file:///storage/emulated/0/0my_files/py_doc/sympy-docs-html-1.5/tutorial/manipulation.html#recursing-through-an-expression-tree
	Key Invariant
		Every well-formed SymPy expression must either have empty args or satisfy expr == expr.func(*expr.args).
	


空间：
：闭空间
：开空间：
：：必须有什么
：：允许有什么
：：不允许有什么（互斥的情形、名、对象类型、关系、、、）
：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：


文件：
：＝字符数组
：不知啥是字节
：具体文件名＝抽象文件名＋编码
：抽象文件名＝（包名｜模块名）＋版本号
：为何要含版本号：
：：声明最小需求，严格递增，过气对象不移除。「若移除则非后续版本」
：：避免引入对象的碰撞：
：：：：开空间一般不会声明禁用某些名、对象。两空间在未来总存在相交的可能。
：：：：虽然推荐显式列举引入名或使用限定前缀名，但一来无限定全引入很常见，二来无名的关系对象会自动注入（类似Haskell.infix/instance），使用闭空间还是有必要的。
：：：：带版本号的开空间等效于闭空间
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：字符编码问题：
：：编码方法＝编码全名＋字符集名＋字符集大小（可以是无限大，新版本递增）
：：编码全名＝编码映射名（抽象字符到编码点的映射）＋编码存传名（编码点到存储单元的映射）
：：编码方法间的关系：
：：：：字符集甲相对于字符集乙可分为三子集：
：：：：：：已知交集、已知非交集、未知子集
：：：：：：已知交集中的任一字符对应于字符集乙中的一非空子集，必在其中
：：：：：：未知子集中的任一字符对应于字符集乙中的一真子集，必不在其中
：：：：很难想象存在一字符集可以囊括将来可能出现的所有字符（出土的字符、新设计的字符、新的字根部件）
：：：：除非永远有人维护，不断地扩展更新，即使如此也必存在时间差（可能很久，先是作为私有字符小规模长期使用，到引起重视，考察讨论，最后新标准发布，应用程序更新）
：：：：统一码有两个问题：
：：：：：：字符集大小固定，不能面向未来（虽然不是不能增大，毕竟曾经突破过）
：：：：：：大量中文字符不予考虑，更别说所有可能的汉字部件
：：：：两两关系平方增长，好在新字符集一般是某些字符集的扩展，故两两关系可分解为：
：：：：：：非极大字符集到极大字符集的映射
：：：：：：极大字符集间的关系
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：字符在文件中的表达：
：：：：字符在编码的字符集中且非特殊控制字符：直接表达
：：：：转义表达：编码映射名＋数字
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：名称问题：
：：：：标准名（字符集名、编码映射名、编码存传名等）、数字等的在不同字符集中的表达
：：：：python.encoding, html.charset 用的是 ascii 字符集
：：：：可考虑让用户在各字符集自定义标准名的别称与整数表达方法，以实现字符在特定字符集中的转义表达
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：引用外部文件：
：：【本模块形式参数声明】？？？？
：：【引入】〖模块全名〗
：：：：【校验】
：：：：：：「中间部分类似下面【引入别名】」
：：：：：：【无盐】《引入文件的大小》〖散列名〗《散列值》
：：：：：：「分布式保存」【快照】〈（索引值，「复制任意长」字符串）数组〉
：：：：：：「快照引起的总增量比例＝丙／（⑴－丙）＝九分之一【其中】丙＝平均引入数＊平均快照比例＝一百＊千分之一＝十分之一」
：：：：：：【加盐】〖散列名〗〈（索引值，字符串）数组〉《「本模块全名＋引入文件的加盐版」散列值》
：：：：【配置】？？参数？？
：：：：：：「可选」【仅引入】输出名*
：：：：：：「可选」【限定前缀】限定前缀名
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：缩进：
：：为方便缩进，不得类似 python.raw_string，跨行字符串也是已缩进的
：：缩进＝各行极大空格字符串前缀，由非空格字符结束
：：同父的缩进须是完全相同的空格字符串
：：子缩进以父缩进为真子前缀，子缩进宽度须比父缩进大。「缩进可能含零宽度空格」
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：发布：
：：模块文件分为发布版与测试版
：：测试版无需被引入文件的【校验】信息
：：测试版模块可以引入测试版模块
：：发布版模块只能引入发布版模块
：：【校验】信息可由程序自动写入
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：：

组织：
：树状文件系统
：「防碰撞」公共空间＝长名空间
：包全名＝根别名 子混合名*
：模块全名＝ 包全名 ．模块名
：模块名＝模块类型 短名 版本号
：模块类型＝实体声明｜实体定义｜实体声明间的关系｜实体间的关系｜版本间的关系｜实现的引入声明｜实现的引入配置｜｜
：：：「使用外部配置文件来组装各实现，类似链接器，可推迟网页引入本地或互联网上的资源的选择难题」 
：根别名＝子别名
：子混合名＝子别名｜子短名
：子别名＝／别名＋〖自荐别名〗〖散列名〗《散列值》
：子短名＝．短名
：短名＝包名
：别名：
：：＝最近父公共空间 所引进的 长名的别名
：：别名是公开的，不得修改，可被外部或内部引用
：公共空间 构成：
：：【公共】／
：：：：〖自荐别名〗〖散列名〗《「本包长名」散列值》／
：：：：：：〔私区分号〕／
：：：：：：：：【本包长名】.〔编码〕：
：：：：：：：：：：任意文本，但要保证唯一，无论过去将来
：：：：：：：：：：最好包括以下内容：
：：：：：：：：：：：：创建时间地点
：：：：：：：：：：：：作者名字、ID（出生时间地点）、url（MAC）、公钥＋加密系统名、
：：：：：：：：：：：：包自荐别名、散列名
：：：：：：：：：：：：包内容描述
：：：：：：：：：：：：足够长的随机文本
：：：：：：：：：：：：
：：：：：：：：【引入别名】／
：：：：：：：：：：〖某包别名〗／
：：：：：：：：：：：：【引入包长名】.〔编码〕
：：：：：：：：：：：：〖某子混合名〗／……／〖某子别名〗／
：：：：：：：：：：：：：：【引入包长名】.〔编码〕
：：：：：：：：：：：：〖某子混合名〗／……／〖某子混合名〗／
：：：：：：：：：：：：：：〖某模块〖类型〗〖短名〗〖版本号〗〗〖本受限重输出声明文件的版本号〗.〔编码〕
：：：：：：：：：：：：：：〖某模块名〗〖版本号〗.〔编码〕：
：：：：：：：：：：：：：：：：【仅引入】输出名*
：：：：：：：：：：：：：：：：【校验】
：：：：：：：：：：：：：：：：：：【无盐】《引入文件的大小》〖散列名〗《散列值》
：：：：：：：：：：：：：：：：：：【快照】〈（索引值，「复制任意长」字符串）数组〉
：：：：：：：：：：：：：：：：：：【加盐】〖散列名〗〈（索引值，字符串）数组〉《「本模块全名＋引入文件的加盐版」散列值》
：：：：：：：：：：：：：：：：：：：：：：
：签名：
：：公钥模块：：：：：：：：：：：：：：：：：：
：：签名模块：：：：：：：：：：：：：：：：：：：：
：：第三方时间戳？：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：

偏序＜：
：空间后续：
：：模块版本号
：：子类
：推导：
：：权限：
：：：：静态：
：：：：：：语言可见性
：：：：：：方法使用权限
：：：：动态：
：：：：：：系统调用权限
：：子型（约束性质：数据结构、方法创毁役、方法权限、方法可证明性质、数据约束）
：：多层多方面声明至实现
：串并行：
：：数据结构
：：表达式、语句 串行 单线程伪并行 真并行 伪随机 真随机 任意序
：优先级：
：：二元运算符
：：模式匹配、实现适配
：集合：
：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：
：：：：：：：：：：：：：：：：：：：：

[[
命名路径:
  私占公用命名空间:私人掌控命名，但是:命名空间允许公开访问==>>只增+分封
  私占私用命名空间:私人掌控命名，并且:命名空间不允许外部公开访问==>>拥有者随意窜改
  ???公占公用命名空间:不可能！
      -->私别名化公占公用命名空间
        ???[别名化-引入包-是否相同？在本地文件系统中存在两份同名包/可能不同版本]但是 对齐(匹配/整合/合并:同名空间) 无法自动 实现???
            ???超长命名???没有本质性改变
]]
