#__all__:goto
r'''[[[
e script/双序过滤冫候选字次序可行解.py

script.双序过滤冫候选字次序可行解
py -m nn_ns.app.debug_cmd   script.双序过滤冫候选字次序可行解 -x # -off_defs
py -m nn_ns.app.doctest_cmd script.双序过滤冫候选字次序可行解:__doc__ -ht # -ff -df

[[
源起:
    view others/数学/编程/设计/自定义编码纟自然数冃中文序数.txt
        考虑:部首辻拼音
===
[次序讠备选字串 :: [字串]]
[初步双序切分 :: [(次序,字串)]{字串之串联是已排序的字串}{相邻次序不同}]
[双向过滤双序切分 :: [(次序,字串)]{字串之串联是已排序的字串}{相邻次序不同}{最精简:任一备选字均出现在某个可行解中}]
===
]]

[[
数字同音字:
py_adhoc_call   script.双序过滤冫候选字次序可行解   ,双序过滤冫候选字次序可行解扌 +to_str  ='"伶凌呤囹堎夌柃棂櫺欞泠淩灵玲瓴笭綾绫羚翎聆舲苓菱蔆蕶蛉詅軨酃醽鈴铃陵零霊霛霝靈鯪鲮鴒鸰齡齢龄  〡一伊依医吚咿噫壱壹弌揖欹毉洢漪猗瑿祎禕繄蛜譩醫銥铱鷖鹥黟  〢二佴刵咡弍弐樲衈貳贰  〣三叁叄弎毵毿鬖  〤䦉亖佀儩兕嗣四姒寺巳柶汜泗涘祀禩竢笥耜肆飤飼饲駟驷  㐅五仵伍侮倵午啎妩嫵忤怃憮捂摀橆武潕牾珷甒碔舞迕鵡鹉  〦六磟翏蹓遛霤鷚鹨  〧䫏七凄嘁悽慼慽戚攲朞期柒栖桤棲榿欺沏淒漆萋諆郪鏚顣魌  〨䰾丷仈八叭巴捌朳疤笆粑芭蚆豝鲃  〩㺵久乆九乣灸玖酒韭韮  䂖乭十埘塒实実寔實时旹時湜炻祏蚀蝕飠饣鰣鲥鼫鼭".split()'
'[1〡][2〢][3〣][4〤][6〦][7〧][8〨][9〩][5㐅][9㺵][10䂖][4䦉][7䫏][8䰾][1一][7七][3三][8丷][9久乆九乣][10乭][2二][5五][4亖][8仈][5仵][1伊][5伍][0伶][4佀][2佴][1依][5侮倵][4儩兕][8八][6六][7凄][0凌][2刵][1医][10十][5午][3叁叄][8叭][1吚][0呤][2咡][1咿][5啎][4嗣][7嘁][1噫][4四][0囹][10埘][0堎][10塒][1壱壹][0夌][5妩][4姒][5嫵][10实実寔實][4寺巳][8巴][1弌][2弍][3弎][2弐][5忤怃][7悽慼慽][5憮][7戚][5捂][8捌][1揖][5摀][7攲][10时旹時][7朞期][8朳][0柃][7柒][4柶][7栖桤][0棂][7棲榿][2樲][5橆][0櫺欞][1欹][7欺][5武][1毉][3毵毿][4汜][7沏][4泗][0泠][1洢][4涘][7淒][0淩][10湜][7漆][1漪][5潕][0灵][9灸][10炻][5牾][1猗][9玖][0玲][5珷][1瑿][0瓴][5甒][8疤][5碔][6磟][4祀][1祎][10祏][1禕][4禩竢][8笆][4笥][0笭][8粑][0綾][1繄][0绫羚翎][6翏][4耜][0聆][4肆][5舞][0舲][8芭][0苓菱][7萋][0蔆蕶][10蚀][8蚆][0蛉][1蛜][10蝕][2衈][0詅][7諆][1譩][8豝][2貳贰][6蹓][0軨][5迕][6遛][7郪][0酃][9酒][1醫][0醽鈴][1銥][7鏚][0铃][1铱][0陵零霊霛霝][6霤][0靈][9韭韮][7顣][10飠][4飤飼][10饣][4饲駟驷][3鬖][7魌][0鯪][10鰣][8鲃][10鲥][0鲮鴒][5鵡][1鷖][6鷚][0鸰][5鹉][1鹥][6鹨][1黟][10鼫鼭][0齡齢龄]'
'[0伶][1依][2刵][3叁叄][4嗣][5妩][6磟][7萋][8蚆][9酒][10飠]'
'[0夌][1揖][2樲][3毵毿][4涘][5碔][6翏][7諆][8豝][9韭韮][10鼫鼭]'
'[0伶][1依][0凌][2刵][1医][3叁叄][1吚][0呤][2咡][1咿][4嗣][1噫][4四][0囹堎][1壱壹][0夌][5妩][4姒][5嫵][4寺巳][1弌][2弍][3弎][2弐][5忤怃憮捂][1揖][5摀][4柶][2樲][5橆武][3毵毿][4汜泗涘][5潕牾珷甒碔][6磟翏][7萋][8蚆][7諆][8豝][9酒韭韮][10飠饣鰣鲥鼫鼭]'

]]
[[
天干同音字:不行
py_adhoc_call   script.双序过滤冫候选字次序可行解   ,双序过滤冫候选字次序可行解扌 +to_str  ='"仮叚婽岬斚斝椵榎槚檟甲瘕胛鉀钾  乙㠯以倚偯已扆攺旖椅檥矣舣艤苡蚁螘蟻轙釔钇顗鳦齮  丙怲抦昞昺柄炳禀秉稟絣苪邴鉼鞞餅餠饼  丁仃叮帄玎疔盯耵虰靪  兀务務勿卼坞塢婺寤屼悞悟悮戊扤晤杌沕焐物痦蘁誤误遻鋈隖雾霧靰騖骛鶩鹜  丮己戟挤掎擠泲脊虮蟣踦麂  庚浭焿畊絚緪羮羹耕賡赓鶊鹒  䜣廞心忻新昕欣歆炘薪訢辛鋅鑫锌馨  人亻仁壬  佹匦匭垝姽宄庋晷氿癸簋詭诡軌轨鬼".split()'
'[1㠯][7䜣][3丁][2丙][5丮][1乙][8人亻仁][3仃][1以][0仮][9佹][1倚偯][4兀务務勿][9匦匭][4卼][0叚][3叮][4坞][9垝][4塢][8壬][9姽][4婺][0婽][9宄][4寤屼][0岬][5己][1已][3帄][9庋][6庚][7廞心忻][2怲][4悞悟悮戊][5戟][1扆][4扤][2抦][5挤掎擠][1攺][0斚斝][7新][1旖][7昕][2昞昺][4晤][9晷][4杌][2柄][1椅][0椵榎槚檟][1檥][7欣歆][9氿][4沕][5泲][6浭][7炘][2炳][4焐][6焿][4物][3玎][0甲][6畊][3疔][4痦][0瘕][9癸][3盯][1矣][2禀秉稟][9簋][6絚][2絣][6緪羮羹耕][3耵][0胛][5脊][1舣艤苡][2苪][7薪][4蘁][5虮][3虰][1蚁螘][5蟣][1蟻][7訢][9詭][4誤][9诡][4误][6賡赓][5踦][9軌][1轙][9轨][7辛][4遻][2邴][1釔][0鉀][2鉼][7鋅][4鋈][7鑫][1钇][0钾][7锌][4隖雾霧][3靪][4靰][2鞞][1顗][2餅餠饼][7馨][4騖骛][9鬼][1鳦][6鶊][4鶩][6鹒][4鹜][5麂][1齮]'
'[0仮][1倚偯][2怲][3玎][4痦][5脊][6賡赓][7辛]'
'[7䜣][8壬][9鬼]'
''
==>>:无解
]]
[[
天干近音字:
    壬:同音字-->近音字:
py_adhoc_call   script.双序过滤冫候选字次序可行解   ,双序过滤冫候选字次序可行解扌 +to_str  ='"仮叚婽岬斚斝椵榎槚檟甲瘕胛鉀钾  乙㠯以倚偯已扆攺旖椅檥矣舣艤苡蚁螘蟻轙釔钇顗鳦齮  丙怲抦昞昺柄炳禀秉稟絣苪邴鉼鞞餅餠饼  丁仃叮帄玎疔盯耵虰靪  兀务務勿卼坞塢婺寤屼悞悟悮戊扤晤杌沕焐物痦蘁誤误遻鋈隖雾霧靰騖骛鶩鹜  丮己戟挤掎擠泲脊虮蟣踦麂  庚浭焿畊絚緪羮羹耕賡赓鶊鹒  䜣廞心忻新昕欣歆炘薪訢辛鋅鑫锌馨  人亻仁壬忍棯稔腍荏荵仞任刃妊姙牣祍紉紝絍纫纴肕衽袵訒認认讱軔轫靭靱韌韧飪餁饪鵀  佹匦匭垝姽宄庋晷氿癸簋詭诡軌轨鬼".split()'
'[1㠯][7䜣][3丁][2丙][5丮][1乙][8人亻仁][3仃][8仞][1以][0仮][8任][9佹][1倚偯][4兀][8刃][4务務勿][9匦匭][4卼][0叚][3叮][4坞][9垝][4塢][8壬妊姙][9姽][4婺][0婽][9宄][4寤屼][0岬][5己][1已][3帄][9庋][6庚][7廞心][8忍][7忻][2怲][4悞悟悮戊][5戟][1扆][4扤][2抦][5挤掎擠][1攺][0斚斝][7新][1旖][7昕][2昞昺][4晤][9晷][4杌][2柄][8棯][1椅][0椵榎槚檟][1檥][7欣歆][9氿][4沕][5泲][6浭][7炘][2炳][4焐][6焿][8牣][4物][3玎][0甲][6畊][3疔][4痦][0瘕][9癸][3盯][1矣][8祍][2禀秉][8稔][2稟][9簋][8紉紝絍][6絚][2絣][6緪][8纫纴][6羮羹耕][3耵][8肕][0胛][5脊][8腍][1舣艤苡][2苪][8荏荵][7薪][4蘁][5虮][3虰][1蚁螘][5蟣][1蟻][8衽袵訒][7訢][9詭][8認][4誤][8认讱][9诡][4误][6賡赓][5踦][9軌][8軔][1轙][9轨][8轫][7辛][4遻][2邴][1釔][0鉀][2鉼][7鋅][4鋈][7鑫][1钇][0钾][7锌][4隖雾霧][3靪][8靭][4靰][8靱][2鞞][8韌韧][1顗][8飪餁][2餅餠][8饪][2饼][7馨][4騖骛][9鬼][1鳦][8鵀][6鶊][4鶩][6鹒][4鹜][5麂][1齮]'
'[0仮][1倚偯][2怲][3玎][4痦][5脊][6賡赓][7辛][8靭][9鬼]'
'[0瘕][1矣][2絣][3耵][4蘁][5蟣][6賡赓][7锌][8饪][9鬼]'
'[0仮][1倚偯][0叚婽岬][1已][2怲][1扆][2抦][1攺][0斚斝][1旖][2昞昺柄][1椅][0椵榎槚檟][1檥][2炳][3玎][0甲][3疔][4痦][0瘕][3盯][1矣][2禀秉稟絣][3耵][5脊][4蘁][5虮蟣][6賡赓][7辛鋅鑫锌][8靭靱韌韧飪餁饪][9鬼]'

]]


逆序:
[[
数字同音字牜逆序:不行
py_adhoc_call   script.双序过滤冫候选字次序可行解   ,双序过滤冫候选字次序可行解扌 +to_str  ='"伶凌呤囹堎夌柃棂櫺欞泠淩灵玲瓴笭綾绫羚翎聆舲苓菱蔆蕶蛉詅軨酃醽鈴铃陵零霊霛霝靈鯪鲮鴒鸰齡齢龄  〡一伊依医吚咿噫壱壹弌揖欹毉洢漪猗瑿祎禕繄蛜譩醫銥铱鷖鹥黟  〢二佴刵咡弍弐樲衈貳贰  〣三叁叄弎毵毿鬖  〤䦉亖佀儩兕嗣四姒寺巳柶汜泗涘祀禩竢笥耜肆飤飼饲駟驷  㐅五仵伍侮倵午啎妩嫵忤怃憮捂摀橆武潕牾珷甒碔舞迕鵡鹉  〦六磟翏蹓遛霤鷚鹨  〧䫏七凄嘁悽慼慽戚攲朞期柒栖桤棲榿欺沏淒漆萋諆郪鏚顣魌  〨䰾丷仈八叭巴捌朳疤笆粑芭蚆豝鲃  〩㺵久乆九乣灸玖酒韭韮  䂖乭十埘塒实実寔實时旹時湜炻祏蚀蝕飠饣鰣鲥鼫鼭".split()[::-1]'
'[9〡][8〢][7〣][6〤][4〦][3〧][2〨][1〩][5㐅][1㺵][0䂖][6䦉][3䫏][2䰾][9一][3七][7三][2丷][1久乆九乣][0乭][8二][5五][6亖][2仈][5仵][9伊][5伍][10伶][6佀][8佴][9依][5侮倵][6儩兕][2八][4六][3凄][10凌][8刵][9医][0十][5午][7叁叄][2叭][9吚][10呤][8咡][9咿][5啎][6嗣][3嘁][9噫][6四][10囹][0埘][10堎][0塒][9壱壹][10夌][5妩][6姒][5嫵][0实実寔實][6寺巳][2巴][9弌][8弍][7弎][8弐][5忤怃][3悽慼慽][5憮][3戚][5捂][2捌][9揖][5摀][3攲][0时旹時][3朞期][2朳][10柃][3柒][6柶][3栖桤][10棂][3棲榿][8樲][5橆][10櫺欞][9欹][3欺][5武][9毉][7毵毿][6汜][3沏][6泗][10泠][9洢][6涘][3淒][10淩][0湜][3漆][9漪][5潕][10灵][1灸][0炻][5牾][9猗][1玖][10玲][5珷][9瑿][10瓴][5甒][2疤][5碔][4磟][6祀][9祎][0祏][9禕][6禩竢][2笆][6笥][10笭][2粑][10綾][9繄][10绫羚翎][4翏][6耜][10聆][6肆][5舞][10舲][2芭][10苓菱][3萋][10蔆蕶][0蚀][2蚆][10蛉][9蛜][0蝕][8衈][10詅][3諆][9譩][2豝][8貳贰][4蹓][10軨][5迕][4遛][3郪][10酃][1酒][9醫][10醽鈴][9銥][3鏚][10铃][9铱][10陵零霊霛霝][4霤][10靈][1韭韮][3顣][0飠][6飤飼][0饣][6饲駟驷][7鬖][3魌][10鯪][0鰣][2鲃][0鲥][10鲮鴒][5鵡][9鷖][4鷚][10鸰][5鹉][9鹥][4鹨][9黟][0鼫鼭][10齡齢龄]'
'[0䂖][1久乆九乣][2仈][3凄][4磟][5舞][6飤飼][7鬖]'
'[1㺵][2䰾][3七][4六][5摀][6柶][7毵毿][8貳贰][9黟][10齡齢龄]'
''
==>>:无解

]]
[[
数字同音字牜逆序牜除十:
py_adhoc_call   script.双序过滤冫候选字次序可行解   ,双序过滤冫候选字次序可行解扌 +to_str  ='"伶凌呤囹堎夌柃棂櫺欞泠淩灵玲瓴笭綾绫羚翎聆舲苓菱蔆蕶蛉詅軨酃醽鈴铃陵零霊霛霝靈鯪鲮鴒鸰齡齢龄  〡一伊依医吚咿噫壱壹弌揖欹毉洢漪猗瑿祎禕繄蛜譩醫銥铱鷖鹥黟  〢二佴刵咡弍弐樲衈貳贰  〣三叁叄弎毵毿鬖  〤䦉亖佀儩兕嗣四姒寺巳柶汜泗涘祀禩竢笥耜肆飤飼饲駟驷  㐅五仵伍侮倵午啎妩嫵忤怃憮捂摀橆武潕牾珷甒碔舞迕鵡鹉  〦六磟翏蹓遛霤鷚鹨  〧䫏七凄嘁悽慼慽戚攲朞期柒栖桤棲榿欺沏淒漆萋諆郪鏚顣魌  〨䰾丷仈八叭巴捌朳疤笆粑芭蚆豝鲃  〩㺵久乆九乣灸玖酒韭韮  䂖乭十埘塒实実寔實时旹時湜炻祏蚀蝕飠饣鰣鲥鼫鼭".split()[-2::-1]'
'[8〡][7〢][6〣][5〤][3〦][2〧][1〨][0〩][4㐅][0㺵][5䦉][2䫏][1䰾][8一][2七][6三][1丷][0久乆九乣][7二][4五][5亖][1仈][4仵][8伊][4伍][9伶][5佀][7佴][8依][4侮倵][5儩兕][1八][3六][2凄][9凌][7刵][8医][4午][6叁叄][1叭][8吚][9呤][7咡][8咿][4啎][5嗣][2嘁][8噫][5四][9囹堎][8壱壹][9夌][4妩][5姒][4嫵][5寺巳][1巴][8弌][7弍][6弎][7弐][4忤怃][2悽慼慽][4憮][2戚][4捂][1捌][8揖][4摀][2攲朞期][1朳][9柃][2柒][5柶][2栖桤][9棂][2棲榿][7樲][4橆][9櫺欞][8欹][2欺][4武][8毉][6毵毿][5汜][2沏][5泗][9泠][8洢][5涘][2淒][9淩][2漆][8漪][4潕][9灵][0灸][4牾][8猗][0玖][9玲][4珷][8瑿][9瓴][4甒][1疤][4碔][3磟][5祀][8祎禕][5禩竢][1笆][5笥][9笭][1粑][9綾][8繄][9绫羚翎][3翏][5耜][9聆][5肆][4舞][9舲][1芭][9苓菱][2萋][9蔆蕶][1蚆][9蛉][8蛜][7衈][9詅][2諆][8譩][1豝][7貳贰][3蹓][9軨][4迕][3遛][2郪][9酃][0酒][8醫][9醽鈴][8銥][2鏚][9铃][8铱][9陵零霊霛霝][3霤][9靈][0韭韮][2顣][5飤飼饲駟驷][6鬖][2魌][9鯪][1鲃][9鲮鴒][4鵡][8鷖][3鷚][9鸰][4鹉][8鹥][3鹨][8黟][9齡齢龄]'
'[0〩][1䰾][2七][3六][4午][5嗣][6弎][7弐][8揖][9柃]'
'[0㺵][1䰾][2七][3六][4摀][5柶][6毵毿][7貳贰][8黟][9齡齢龄]'
'[0〩㺵][1䰾][2七][3六][4午啎][5嗣四][4妩][5姒][4嫵][5寺巳][6弎][7弐][4忤怃憮捂][8揖][4摀][9柃][5柶][9棂][7樲][9櫺欞][8欹毉][6毵毿][9泠][8洢][9淩][8漪][9灵][8猗][9玲][8瑿][9瓴][8祎禕][9笭綾][8繄][9绫羚翎聆舲苓菱蔆蕶蛉][8蛜][7衈][9詅][8譩][7貳贰][9軨酃][8醫][9醽鈴][8銥][9铃][8铱][9陵零霊霛霝靈鯪鲮鴒][8鷖][9鸰][8鹥黟][9齡齢龄]'
]]
[[
天干同音字牜逆序:
py_adhoc_call   script.双序过滤冫候选字次序可行解   ,双序过滤冫候选字次序可行解扌 +to_str  ='"仮叚婽岬斚斝椵榎槚檟甲瘕胛鉀钾  乙㠯以倚偯已扆攺旖椅檥矣舣艤苡蚁螘蟻轙釔钇顗鳦齮  丙怲抦昞昺柄炳禀秉稟絣苪邴鉼鞞餅餠饼  丁仃叮帄玎疔盯耵虰靪  兀务務勿卼坞塢婺寤屼悞悟悮戊扤晤杌沕焐物痦蘁誤误遻鋈隖雾霧靰騖骛鶩鹜  丮己戟挤掎擠泲脊虮蟣踦麂  庚浭焿畊絚緪羮羹耕賡赓鶊鹒  䜣廞心忻新昕欣歆炘薪訢辛鋅鑫锌馨  人亻仁壬  佹匦匭垝姽宄庋晷氿癸簋詭诡軌轨鬼".split()[::-1]'
'[8㠯][2䜣][6丁][7丙][4丮][8乙][1人亻仁][6仃][8以][9仮][0佹][8倚偯][5兀务務勿][0匦匭][5卼][9叚][6叮][5坞][0垝][5塢][1壬][0姽][5婺][9婽][0宄][5寤屼][9岬][4己][8已][6帄][0庋][3庚][2廞心忻][7怲][5悞悟悮戊][4戟][8扆][5扤][7抦][4挤掎擠][8攺][9斚斝][2新][8旖][2昕][7昞昺][5晤][0晷][5杌][7柄][8椅][9椵榎槚檟][8檥][2欣歆][0氿][5沕][4泲][3浭][2炘][7炳][5焐][3焿][5物][6玎][9甲][3畊][6疔][5痦][9瘕][0癸][6盯][8矣][7禀秉稟][0簋][3絚][7絣][3緪羮羹耕][6耵][9胛][4脊][8舣艤苡][7苪][2薪][5蘁][4虮][6虰][8蚁螘][4蟣][8蟻][2訢][0詭][5誤][0诡][5误][3賡赓][4踦][0軌][8轙][0轨][2辛][5遻][7邴][8釔][9鉀][7鉼][2鋅][5鋈][2鑫][8钇][9钾][2锌][5隖雾霧][6靪][5靰][7鞞][8顗][7餅餠饼][2馨][5騖骛][0鬼][8鳦][3鶊][5鶩][3鹒][5鹜][4麂][8齮]'
'[0佹][1壬][2廞心忻][3浭][4脊][5蘁][6虰][7邴][8釔][9鉀]'
'[0垝][1壬][2炘][3緪羮羹耕][4脊][5蘁][6虰][7鉼][8钇][9钾]'
'[0佹匦匭垝][1壬][2廞心忻新昕欣歆][3浭][2炘][3焿畊絚緪羮羹耕][4脊][5蘁][6虰][7邴][8釔][9鉀][7鉼][8钇][9钾]'

]]

]]]'''#'''
__all__ = r'''
双序过滤冫候选字次序可行解扌
'''.split()#'''
__all__
___begin_mark_of_excluded_global_names__0___ = ...
from itertools import groupby
from seed.tiny_.funcs import fst, snd
#.from seed.tiny_.check import check_type_is, check_int_ge
#.
#.from seed.abc.abc__ver1 import abstractmethod, override, ABC
#.from seed.helper.lazy_import__func import lazy_import4func_, lazy_import4funcs_
#.repr_helper = lazy_import4func_('seed.helper.repr_input', 'repr_helper', __name__)
#.lazy_import4funcs_('seed.tiny', 'mk_tuple,print_err,ifNone:ifNone_', __name__)
#.if 0:from seed.tiny import mk_tuple,print_err,ifNone as ifNone_ #xxx:null_tuple #xxx:echo,fst,snd
#.from seed.helper.repr_input import repr_helper
#.from seed.tiny_._Base4repr import _Base4repr
        #sf._reset4repr(may_args4repr, may_kwds4repr)
        #sf._init4repr(*args4repr, **kwds4repr)
___end_mark_of_excluded_global_names__0___ = ...

#.class __(ABC):
#.    __slots__ = ()
#.    ___no_slots_ok___ = True
#.    def __repr__(sf, /):
#.        return repr_helper(sf, *args, **kwargs)
#.if __name__ == "__main__":
#.    raise NotImplementedError

def 双序过滤冫候选字次序可行解扌(次序讠备选字串, /, *, to_str=False):
    r'''[[[
    :: 次序讠备选字串 -> (初步双序切分, 从前往后的最小双序切分牜可能不完整, 从后往前过滤的最大双序切分牜可能不完整, 双向过滤双序切分{空=>不完整})

    [次序讠备选字串 :: [字串]]
    [初步双序切分 :: [(次序,字串)]{字串之串联是已排序的字串}{相邻次序不同}]
    [从前往后的最小双序切分牜可能不完整, 从后往前过滤的最大双序切分牜可能不完整 :: [(次序,字串)]{字串之串联是已排序的字串}{相邻次序严格递增}]
    [双向过滤双序切分 :: [(次序,字串)]{字串之串联是已排序的字串}{相邻次序不同}{最精简:任一备选字均出现在某个可行解中}]
    #]]]'''#'''
    c2j = 字讠次序 = {}
    for j, s in enumerate(次序讠备选字串):
        for c in s:
            if c in c2j:raise KeyError(c)
            c2j[c] = j
    sss = ''.join(sorted(c2j))
    ls = []
    for j, g in groupby(sss, key=c2j.__getitem__):
        s = ''.join(g)
        ls.append((j, s))
    ls
    初步双序切分 = ls
    从前往后的最小双序切分牜可能不完整 = _mk_从前往后的最小双序切分牜可能不完整(初步双序切分)
    从后往前过滤的最大双序切分牜可能不完整 = _mk_从后往前过滤的最大双序切分牜可能不完整(初步双序切分)
    双向过滤双序切分 = _mk_双向过滤双序切分(初步双序切分)
    if to_str:
        初步双序切分 = _to_str_(初步双序切分)
        从前往后的最小双序切分牜可能不完整 = _to_str_(从前往后的最小双序切分牜可能不完整)
        从后往前过滤的最大双序切分牜可能不完整 = _to_str_(从后往前过滤的最大双序切分牜可能不完整)
        双向过滤双序切分 = _to_str_(双向过滤双序切分)
    return (初步双序切分, 从前往后的最小双序切分牜可能不完整, 从后往前过滤的最大双序切分牜可能不完整, 双向过滤双序切分)
def _to_str_(双序切分, /):
    return ''.join(f'[{j}{s!s}]' for j, s in 双序切分)
def _mk_从前往后的最小双序切分牜可能不完整(初步双序切分, /):
    js = [j for j,_ in 初步双序切分]
    j = 0
    k = 0
    ks = []
    while 1:
        try:
            k = js.index(j, k)
        except ValueError:#IndexError:
            break
        ks.append(k)
        j += 1
        k += 1
    return [初步双序切分[k] for k in ks]

def _mk_从后往前过滤的最大双序切分牜可能不完整(初步双序切分, /):
    ls = 初步双序切分[::-1]
    js = [j for j,_ in ls]
    j = max(js)
    k = 0
    ks = []
    while 1:
        try:
            k = js.index(j, k)
        except ValueError:#IndexError:
            break
        ks.append(k)
        j -= 1
        k += 1
    return [ls[k] for k in ks[::-1]]


def _mk_双向过滤双序切分(初步双序切分, /):
    max_j = max(map(fst, 初步双序切分))
    #######
    #正向过滤:
    xs = []
    j4ok = 0
    for j, s in 初步双序切分:
        if j > j4ok:
            #bad
            continue
        xs.append((j,s))
        if j == j4ok:
            j4ok += 1
    xs
    #######
    #反向过滤:
    ys = []
    #j4ok -= 1
    j4ok = max_j # 不完整=>结果为空
    for j, s in reversed(xs):
        if j < j4ok:
            #bad
            continue
        ys.append((j,s))
        if j == j4ok:
            j4ok -= 1
    ys.reverse()
    #######
    #邻居融合:
    ls = []
    for j, g in groupby(ys, key=fst):
        s = ''.join(s for j, s in g)
        ls.append((j, s))
    return ls




__all__
#[f,g] = lazy_import4funcs_('script.双序过滤冫候选字次序可行解', 'f,g', __name__)
from script.双序过滤冫候选字次序可行解 import 双序过滤冫候选字次序可行解扌
from script.双序过滤冫候选字次序可行解 import *
