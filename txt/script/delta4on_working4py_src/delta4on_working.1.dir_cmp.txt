=====
('my_src', 4)
=====
[('___ignorefile4dir_cmp___', 'utf8')]
=====
[(1, 'nn_ns/CJK/CJK_data/raw/简繁伪对称字')
,(-1, 'nn_ns/app/dectect_all_unbound_names.py')
,(1, 'nn_ns/app/detect_all_unbound_names.py')
,(1, 'nn_ns/app/mk_py_template.py')
,(0, 'nn_ns/filedir/backup_tools/_debug.py')
,(0, 'nn_ns/filedir/dir_cmp.py')
,(0, 'nn_ns/functional/CombinatoryLogic.py')
,(1, 'nn_ns/functional/_try_CombinatoryLogic.py')
,(1, 'nn_ns/mimic_Haskell')
,(0, 'nn_ns/my_fileformat/configuration/MyConfiguration2_lex.py')
,(0, 'nn_ns/regex/Simple/string_regex_pattern.py')
,(1, 'notes')
,(1, 'script/try_python/try_attrs')
,(1, 'script/try_python/try_dict_init.py')
,(1, 'script/try_python/try_num_max_recur.py')
,(1, 'script/try_python/try_std_libs/try_weakref.py')
,(1, 'seed/abc/IContextManager.py')
,(1, 'seed/abc/IDescriptor.py')
,(0, 'seed/abc/IGetArgsKwargs.py')
,(0, 'seed/abc/IReprHelper.py')
,(0, 'seed/abc/ISingleton.py')
,(0, 'seed/abc/__init__.py')
,(0, 'seed/abc/abc.py')
,(1, 'seed/abc/abc__ver0.py')
,(1, 'seed/abc/abc__ver1.py')
,(1, 'seed/abc/abc__ver2.py')
,(1, 'seed/abc/eq_by_id')
,(1, 'seed/abc/storage')
,(1, 'seed/abc/wrapper')
,(0, 'seed/debug/_debug.py')
,(0, 'seed/debug/assert_eq.py')
,(0, 'seed/for_libs/for_glob/IGlob.py')
,(1, 'seed/helper/AttrCollector.py')
,(0, 'seed/helper/check/check.py')
,(1, 'seed/helper/get4may.py')
,(0, 'seed/helper/ongo.py')
,(1, 'seed/helper/reduce_number_of_objects_with_same_value.py')
,(0, 'seed/helper/safe_eval.py')
,(1, 'seed/helper/unique_immutable_value.py')
,(1, 'seed/hierarchy')
,(1, 'seed/int_tools/digits')
,(-1, 'seed/int_tools/radix_repr2uint.py')
,(1, 'seed/lang/apply_descriptor_protocol.py')
,(1, 'seed/lang/basic_descriptors.py')
,(1, 'seed/lang/hasattr__as_cls.py')
,(1, 'seed/lang/super4bypass_instance.py')
,(0, 'seed/mapping_tools/fdefault.py')
,(1, 'seed/mapping_tools/mapping_reversable_update__tmay.py')
,(1, 'seed/ops/flatten_ops_hierarchy.py')
,(1, 'seed/ops/meta.py')
,(0, 'seed/pkg_tools/_forgot_import.py')
,(-1, 'seed/pkg_tools/dectect_all_unbound_names.py')
,(1, 'seed/pkg_tools/detect_all_unbound_names.py')
,(-1, 'seed/recognize/CmdlinePrefixParser.py')
,(1, 'seed/recognize/cmdline')
,(0, 'seed/tiny.py')
,(1, 'seed/tiny_')
,(0, 'seed/types/DictKeyAsObjAttr.py')
,(-1, 'seed/types/EmptyMapping.py')
,(1, 'seed/types/HistoryGrowOnlyStack.py')
,(0, 'seed/types/NamespaceABC.py')
,(1, 'seed/types/OpaqueInstanceStorage.py')
,(1, 'seed/types/RopeOps.py')
,(0, 'seed/types/StructBase.py')
,(0, 'seed/types/TriBoolOps.py')
,(1, 'seed/types/attr')
,(1, 'seed/types/empty_containers.py')
,(1, 'seed/types/flag')
,(1, 'seed/types/logic')
,(1, 'seed/types/mapping')
,(0, 'useful.txt')
,(0, 'windows_bat/unbounds.bat')
,(1, '自己的相关数据/delta4on_working4py_src')
,(0, '自己的相关数据/on_working.txt')
,]
=====
