#__all__:goto
r'''[[[
e script/有趣的等式牜连乘等于平方差一.py

script.有趣的等式牜连乘等于平方差一
py -m nn_ns.app.debug_cmd   script.有趣的等式牜连乘等于平方差一 -x # -off_defs
py -m nn_ns.app.doctest_cmd script.有趣的等式牜连乘等于平方差一:__doc__ -ht # -ff -df

[[
@20250628
有趣等式:
    [2**3==3**2-1]
    [4*5*6*7==29**2-1]
    [2*3*4==5**2-1]
]]
[[
探索发现:
[e=!=2]
[a*(a+1)*(a+2)*(a+3) == (a**2+3*a+1)**2-1 == ((a+1)*(a+2)-1)**2-1] #@[e==4]
#######
[u < 10**8][e=!=4]:
    (5, 3, (2, 4), 24)
    (11, 3, (4, 6), 120)
    (419, 3, (55, 57), 175560)
    (11, 5, (1, 5), 120)
    (71, 6, (2, 7), 5040)
    (71, 7, (1, 7), 5040)
    (4159, 7, (8, 14), 17297280)
    #######
    5,11,71,419,4159
        发现:都有四连乘/[e==4]型拆分
    (5, 4, (1, 4), 24)
    (11, 4, (2, 5), 120)
    (71, 4, (7, 10), 5040)
    (419, 4, (19, 22), 175560)
    (4159, 4, (63, 66), 17297280)
    #######
<<==:
    自下面:
#######
]]
[[
#######
#fmt:(u, e, (a,b), n) # [[u,e>=2][a>=1][b-a+1==e][n==u**2-1==II([a..=b])]]
#######
[[u,e,a,b,n::uint][u,e>=2][a>=1][b-a+1==e][n==u**2-1==II([a..=b])]]:
    [e==2]:
        [b==a+1]
        [n==II([a..=b])==a*b==a*(a+1)]
        !! [n==u**2-1]
        [u**2==n+1==a*(a+1)+1==a**2+a+1]
        [u == sqrt(a**2 +a +1)]
        !! [a > 0] # avoid:{0,-1}
        [a**2 < (a**2 +a +1) < (a+1)**2]
        [a < sqrt(a**2 +a +1) < (a+1)]
        [a < u < (a+1)]
        !! [a,u::uint]
        _L
    [e=!=2]
#######
[[u,e,a,b,n::uint][u,e>=2][a>=1][b-a+1==e][n==u**2-1==II([a..=b])]]:
    #证明:[[e==4][a>=1] -> [u存在]]
    [e==4]:
        [b==a+e-1==a+3]
        [n==a*(a+1)*(a+2)*(a+3)]
        [u**2
        ==n+1
        ==a*(a+1)*(a+2)*(a+3)+1
        ==a*(a+3) * (a+1)*(a+2) +1
        ==(a**2+3*a) * (a**2+3*a+2) +1
        ==(a**2+3*a+1-1) * (a**2+3*a+1+1) +1
        ==(a**2+3*a+1)**2
        ]
        [u == (a**2+3*a+1)]
            # [u == a*(a+3)+1 == (a+1)*(a+2)-1]
            # [:等式乊四数连乘]:here
            # # 见:kw:exclude_exp_eq_4
    [a*(a+1)*(a+2)*(a+3) == (a**2+3*a+1)**2-1]
]]

py_adhoc_call   script.有趣的等式牜连乘等于平方差一   ,尝试找到连乘附近于 =5 =4 =840 +verbose
[[
py_adhoc_call   script.有趣的等式牜连乘等于平方差一   ,枚举冫平方差一暨连乘扌  ='range(2,100)'
    #13行
    #fmt:(u, e, (a,b), n) # [[u,e>=2][a>=1][b-a+1==e][n==u**2-1==II([a..=b])]]
(5, 3, (2, 4), 24)
(5, 4, (1, 4), 24)
(11, 3, (4, 6), 120)
(11, 4, (2, 5), 120)
(11, 5, (1, 5), 120)
(19, 4, (3, 6), 360)
(29, 4, (4, 7), 840)
(41, 4, (5, 8), 1680)
(55, 4, (6, 9), 3024)
(71, 4, (7, 10), 5040)
(71, 6, (2, 7), 5040)
(71, 7, (1, 7), 5040)
(89, 4, (8, 11), 7920)
]]

[[
不同拆分:
    (\(\d\+\),.*)\n(\1,.*)\n
    5,11,71,419,4159
        发现:都有四连乘/[e==4]型拆分
(5, 4, (1, 4), 24)
(11, 4, (2, 5), 120)
(71, 4, (7, 10), 5040)
(419, 4, (19, 22), 175560)
(4159, 4, (63, 66), 17297280)
<<==:
(5, 3, (2, 4), 24)
(5, 4, (1, 4), 24)
(11, 3, (4, 6), 120)
(11, 4, (2, 5), 120)
(11, 5, (1, 5), 120)
(71, 4, (7, 10), 5040)
(71, 6, (2, 7), 5040)
(71, 7, (1, 7), 5040)
(419, 3, (55, 57), 175560)
(419, 4, (19, 22), 175560)
(4159, 4, (63, 66), 17297280)
(4159, 7, (8, 14), 17297280)

<<==:
py_adhoc_call   script.有趣的等式牜连乘等于平方差一   ,枚举冫平方差一暨连乘扌  ='range(2,10000)'
    #105行
    #fmt:(u, e, (a,b), n) # [[u,e>=2][a>=1][b-a+1==e][n==u**2-1==II([a..=b])]]
(5, 3, (2, 4), 24)
(5, 4, (1, 4), 24)
(11, 3, (4, 6), 120)
(11, 4, (2, 5), 120)
(11, 5, (1, 5), 120)
(19, 4, (3, 6), 360)
(29, 4, (4, 7), 840)
(41, 4, (5, 8), 1680)
(55, 4, (6, 9), 3024)
(71, 4, (7, 10), 5040)
(71, 6, (2, 7), 5040)
(71, 7, (1, 7), 5040)
(89, 4, (8, 11), 7920)
(109, 4, (9, 12), 11880)
(131, 4, (10, 13), 17160)
(155, 4, (11, 14), 24024)
(181, 4, (12, 15), 32760)
(209, 4, (13, 16), 43680)
(239, 4, (14, 17), 57120)
(271, 4, (15, 18), 73440)
(305, 4, (16, 19), 93024)
(341, 4, (17, 20), 116280)
(379, 4, (18, 21), 143640)
(419, 3, (55, 57), 175560)
(419, 4, (19, 22), 175560)
(461, 4, (20, 23), 212520)
(505, 4, (21, 24), 255024)
(551, 4, (22, 25), 303600)
(599, 4, (23, 26), 358800)
(649, 4, (24, 27), 421200)
(701, 4, (25, 28), 491400)
(755, 4, (26, 29), 570024)
(811, 4, (27, 30), 657720)
(869, 4, (28, 31), 755160)
(929, 4, (29, 32), 863040)
(991, 4, (30, 33), 982080)
(1055, 4, (31, 34), 1113024)
(1121, 4, (32, 35), 1256640)
(1189, 4, (33, 36), 1413720)
(1259, 4, (34, 37), 1585080)
(1331, 4, (35, 38), 1771560)
(1405, 4, (36, 39), 1974024)
(1481, 4, (37, 40), 2193360)
(1559, 4, (38, 41), 2430480)
(1639, 4, (39, 42), 2686320)
(1721, 4, (40, 43), 2961840)
(1805, 4, (41, 44), 3258024)
(1891, 4, (42, 45), 3575880)
(1979, 4, (43, 46), 3916440)
(2069, 4, (44, 47), 4280760)
(2161, 4, (45, 48), 4669920)
(2255, 4, (46, 49), 5085024)
(2351, 4, (47, 50), 5527200)
(2449, 4, (48, 51), 5997600)
(2549, 4, (49, 52), 6497400)
(2651, 4, (50, 53), 7027800)
(2755, 4, (51, 54), 7590024)
(2861, 4, (52, 55), 8185320)
(2969, 4, (53, 56), 8814960)
(3079, 4, (54, 57), 9480240)
(3191, 4, (55, 58), 10182480)
(3305, 4, (56, 59), 10923024)
(3421, 4, (57, 60), 11703240)
(3539, 4, (58, 61), 12524520)
(3659, 4, (59, 62), 13388280)
(3781, 4, (60, 63), 14295960)
(3905, 4, (61, 64), 15249024)
(4031, 4, (62, 65), 16248960)
(4159, 4, (63, 66), 17297280)
(4159, 7, (8, 14), 17297280)
(4289, 4, (64, 67), 18395520)
(4421, 4, (65, 68), 19545240)
(4555, 4, (66, 69), 20748024)
(4691, 4, (67, 70), 22005480)
(4829, 4, (68, 71), 23319240)
(4969, 4, (69, 72), 24690960)
(5111, 4, (70, 73), 26122320)
(5255, 4, (71, 74), 27615024)
(5401, 4, (72, 75), 29170800)
(5549, 4, (73, 76), 30791400)
(5699, 4, (74, 77), 32478600)
(5851, 4, (75, 78), 34234200)
(6005, 4, (76, 79), 36060024)
(6161, 4, (77, 80), 37957920)
(6319, 4, (78, 81), 39929760)
(6479, 4, (79, 82), 41977440)
(6641, 4, (80, 83), 44102880)
(6805, 4, (81, 84), 46308024)
(6971, 4, (82, 85), 48594840)
(7139, 4, (83, 86), 50965320)
(7309, 4, (84, 87), 53421480)
(7481, 4, (85, 88), 55965360)
(7655, 4, (86, 89), 58599024)
(7831, 4, (87, 90), 61324560)
(8009, 4, (88, 91), 64144080)
(8189, 4, (89, 92), 67059720)
(8371, 4, (90, 93), 70073640)
(8555, 4, (91, 94), 73188024)
(8741, 4, (92, 95), 76405080)
(8929, 4, (93, 96), 79727040)
(9119, 4, (94, 97), 83156160)
(9311, 4, (95, 98), 86694720)
(9505, 4, (96, 99), 90345024)
(9701, 4, (97, 100), 94109400)
(9899, 4, (98, 101), 97990200)
]]
[[
{10**2:13,10**4:105,10**6:1005}
    u数量约为u上限的平方根
<<==:
py_adhoc_call   script.有趣的等式牜连乘等于平方差一   ,枚举冫平方差一暨连乘扌  ='range(2,10**6)' > /sdcard/0my_files/tmp/0tmp
    #1005行
    #fmt:(u, e, (a,b), n) # [[u,e>=2][a>=1][b-a+1==e][n==u**2-1==II([a..=b])]]
du -h /sdcard/0my_files/tmp/0tmp
    36K
view /sdcard/0my_files/tmp/0tmp
(5, 3, (2, 4), 24)
(5, 4, (1, 4), 24)
(11, 3, (4, 6), 120)
(11, 4, (2, 5), 120)
(11, 5, (1, 5), 120)
(19, 4, (3, 6), 360)
(29, 4, (4, 7), 840)
(41, 4, (5, 8), 1680)
(55, 4, (6, 9), 3024)
(71, 4, (7, 10), 5040)
(71, 6, (2, 7), 5040)
(71, 7, (1, 7), 5040)
(89, 4, (8, 11), 7920)
(109, 4, (9, 12), 11880)
(131, 4, (10, 13), 17160)
(155, 4, (11, 14), 24024)
(181, 4, (12, 15), 32760)
(209, 4, (13, 16), 43680)
(239, 4, (14, 17), 57120)
(271, 4, (15, 18), 73440)
(305, 4, (16, 19), 93024)
(341, 4, (17, 20), 116280)
(379, 4, (18, 21), 143640)
(419, 3, (55, 57), 175560)
(419, 4, (19, 22), 175560)
(461, 4, (20, 23), 212520)
(505, 4, (21, 24), 255024)
(551, 4, (22, 25), 303600)
(599, 4, (23, 26), 358800)
(649, 4, (24, 27), 421200)
(701, 4, (25, 28), 491400)
(755, 4, (26, 29), 570024)
(811, 4, (27, 30), 657720)
(869, 4, (28, 31), 755160)
(929, 4, (29, 32), 863040)
(991, 4, (30, 33), 982080)
(1055, 4, (31, 34), 1113024)
(1121, 4, (32, 35), 1256640)
(1189, 4, (33, 36), 1413720)
(1259, 4, (34, 37), 1585080)
(1331, 4, (35, 38), 1771560)
(1405, 4, (36, 39), 1974024)
(1481, 4, (37, 40), 2193360)
(1559, 4, (38, 41), 2430480)
(1639, 4, (39, 42), 2686320)
(1721, 4, (40, 43), 2961840)
(1805, 4, (41, 44), 3258024)
(1891, 4, (42, 45), 3575880)
(1979, 4, (43, 46), 3916440)
(2069, 4, (44, 47), 4280760)
(2161, 4, (45, 48), 4669920)
(2255, 4, (46, 49), 5085024)
(2351, 4, (47, 50), 5527200)
(2449, 4, (48, 51), 5997600)
(2549, 4, (49, 52), 6497400)
(2651, 4, (50, 53), 7027800)
(2755, 4, (51, 54), 7590024)
(2861, 4, (52, 55), 8185320)
(2969, 4, (53, 56), 8814960)
(3079, 4, (54, 57), 9480240)
(3191, 4, (55, 58), 10182480)
(3305, 4, (56, 59), 10923024)
(3421, 4, (57, 60), 11703240)
(3539, 4, (58, 61), 12524520)
(3659, 4, (59, 62), 13388280)
(3781, 4, (60, 63), 14295960)
(3905, 4, (61, 64), 15249024)
(4031, 4, (62, 65), 16248960)
(4159, 4, (63, 66), 17297280)
(4159, 7, (8, 14), 17297280)
(4289, 4, (64, 67), 18395520)
(4421, 4, (65, 68), 19545240)
(4555, 4, (66, 69), 20748024)
(4691, 4, (67, 70), 22005480)
(4829, 4, (68, 71), 23319240)
(4969, 4, (69, 72), 24690960)
(5111, 4, (70, 73), 26122320)
(5255, 4, (71, 74), 27615024)
(5401, 4, (72, 75), 29170800)
(5549, 4, (73, 76), 30791400)
(5699, 4, (74, 77), 32478600)
(5851, 4, (75, 78), 34234200)
(6005, 4, (76, 79), 36060024)
(6161, 4, (77, 80), 37957920)
(6319, 4, (78, 81), 39929760)
(6479, 4, (79, 82), 41977440)
(6641, 4, (80, 83), 44102880)
(6805, 4, (81, 84), 46308024)
(6971, 4, (82, 85), 48594840)
(7139, 4, (83, 86), 50965320)
(7309, 4, (84, 87), 53421480)
(7481, 4, (85, 88), 55965360)
(7655, 4, (86, 89), 58599024)
(7831, 4, (87, 90), 61324560)
(8009, 4, (88, 91), 64144080)
(8189, 4, (89, 92), 67059720)
(8371, 4, (90, 93), 70073640)
(8555, 4, (91, 94), 73188024)
(8741, 4, (92, 95), 76405080)
(8929, 4, (93, 96), 79727040)
(9119, 4, (94, 97), 83156160)
(9311, 4, (95, 98), 86694720)
(9505, 4, (96, 99), 90345024)
(9701, 4, (97, 100), 94109400)
(9899, 4, (98, 101), 97990200)
(10099, 4, (99, 102), 101989800)
(10301, 4, (100, 103), 106110600)
(10505, 4, (101, 104), 110355024)
(10711, 4, (102, 105), 114725520)
(10919, 4, (103, 106), 119224560)
(11129, 4, (104, 107), 123854640)
(11341, 4, (105, 108), 128618280)
(11555, 4, (106, 109), 133518024)
(11771, 4, (107, 110), 138556440)
(11989, 4, (108, 111), 143736120)
(12209, 4, (109, 112), 149059680)
(12431, 4, (110, 113), 154529760)
(12655, 4, (111, 114), 160149024)
(12881, 4, (112, 115), 165920160)
(13109, 4, (113, 116), 171845880)
(13339, 4, (114, 117), 177928920)
(13571, 4, (115, 118), 184172040)
(13805, 4, (116, 119), 190578024)
(14041, 4, (117, 120), 197149680)
(14279, 4, (118, 121), 203889840)
(14519, 4, (119, 122), 210801360)
(14761, 4, (120, 123), 217887120)
(15005, 4, (121, 124), 225150024)
(15251, 4, (122, 125), 232593000)
(15499, 4, (123, 126), 240219000)
(15749, 4, (124, 127), 248031000)
(16001, 4, (125, 128), 256032000)
(16255, 4, (126, 129), 264225024)
(16511, 4, (127, 130), 272613120)
(16769, 4, (128, 131), 281199360)
(17029, 4, (129, 132), 289986840)
(17291, 4, (130, 133), 298978680)
(17555, 4, (131, 134), 308178024)
(17821, 4, (132, 135), 317588040)
(18089, 4, (133, 136), 327211920)
(18359, 4, (134, 137), 337052880)
(18631, 4, (135, 138), 347114160)
(18905, 4, (136, 139), 357399024)
(19181, 4, (137, 140), 367910760)
(19459, 4, (138, 141), 378652680)
(19739, 4, (139, 142), 389628120)
(20021, 4, (140, 143), 400840440)
(20305, 4, (141, 144), 412293024)
(20591, 4, (142, 145), 423989280)
(20879, 4, (143, 146), 435932640)
(21169, 4, (144, 147), 448126560)
(21461, 4, (145, 148), 460574520)
(21755, 4, (146, 149), 473280024)
(22051, 4, (147, 150), 486246600)
(22349, 4, (148, 151), 499477800)
(22649, 4, (149, 152), 512977200)
(22951, 4, (150, 153), 526748400)
(23255, 4, (151, 154), 540795024)
(23561, 4, (152, 155), 555120720)
(23869, 4, (153, 156), 569729160)
(24179, 4, (154, 157), 584624040)
(24491, 4, (155, 158), 599809080)
(24805, 4, (156, 159), 615288024)
(25121, 4, (157, 160), 631064640)
(25439, 4, (158, 161), 647142720)
(25759, 4, (159, 162), 663526080)
(26081, 4, (160, 163), 680218560)
(26405, 4, (161, 164), 697224024)
(26731, 4, (162, 165), 714546360)
(27059, 4, (163, 166), 732189480)
(27389, 4, (164, 167), 750157320)
(27721, 4, (165, 168), 768453840)
(28055, 4, (166, 169), 787083024)
(28391, 4, (167, 170), 806048880)
(28729, 4, (168, 171), 825355440)
(29069, 4, (169, 172), 845006760)
(29411, 4, (170, 173), 865006920)
(29755, 4, (171, 174), 885360024)
(30101, 4, (172, 175), 906070200)
(30449, 4, (173, 176), 927141600)
(30799, 4, (174, 177), 948578400)
(31151, 4, (175, 178), 970384800)
(31505, 4, (176, 179), 992565024)
(31861, 4, (177, 180), 1015123320)
(32219, 4, (178, 181), 1038063960)
(32579, 4, (179, 182), 1061391240)
(32941, 4, (180, 183), 1085109480)
(33305, 4, (181, 184), 1109223024)
(33671, 4, (182, 185), 1133736240)
(34039, 4, (183, 186), 1158653520)
(34409, 4, (184, 187), 1183979280)
(34781, 4, (185, 188), 1209717960)
(35155, 4, (186, 189), 1235874024)
(35531, 4, (187, 190), 1262451960)
(35909, 4, (188, 191), 1289456280)
(36289, 4, (189, 192), 1316891520)
(36671, 4, (190, 193), 1344762240)
(37055, 4, (191, 194), 1373073024)
(37441, 4, (192, 195), 1401828480)
(37829, 4, (193, 196), 1431033240)
(38219, 4, (194, 197), 1460691960)
(38611, 4, (195, 198), 1490809320)
(39005, 4, (196, 199), 1521390024)
(39401, 4, (197, 200), 1552438800)
(39799, 4, (198, 201), 1583960400)
(40199, 4, (199, 202), 1615959600)
(40601, 4, (200, 203), 1648441200)
(41005, 4, (201, 204), 1681410024)
(41411, 4, (202, 205), 1714870920)
(41819, 4, (203, 206), 1748828760)
(42229, 4, (204, 207), 1783288440)
(42641, 4, (205, 208), 1818254880)
(43055, 4, (206, 209), 1853733024)
(43471, 4, (207, 210), 1889727840)
(43889, 4, (208, 211), 1926244320)
(44309, 4, (209, 212), 1963287480)
(44731, 4, (210, 213), 2000862360)
(45155, 4, (211, 214), 2038974024)
(45581, 4, (212, 215), 2077627560)
(46009, 4, (213, 216), 2116828080)
(46439, 4, (214, 217), 2156580720)
(46871, 4, (215, 218), 2196890640)
(47305, 4, (216, 219), 2237763024)
(47741, 4, (217, 220), 2279203080)
(48179, 4, (218, 221), 2321216040)
(48619, 4, (219, 222), 2363807160)
(49061, 4, (220, 223), 2406981720)
(49505, 4, (221, 224), 2450745024)
(49951, 4, (222, 225), 2495102400)
(50399, 4, (223, 226), 2540059200)
(50849, 4, (224, 227), 2585620800)
(51301, 4, (225, 228), 2631792600)
(51755, 4, (226, 229), 2678580024)
(52211, 4, (227, 230), 2725988520)
(52669, 4, (228, 231), 2774023560)
(53129, 4, (229, 232), 2822690640)
(53591, 4, (230, 233), 2871995280)
(54055, 4, (231, 234), 2921943024)
(54521, 4, (232, 235), 2972539440)
(54989, 4, (233, 236), 3023790120)
(55459, 4, (234, 237), 3075700680)
(55931, 4, (235, 238), 3128276760)
(56405, 4, (236, 239), 3181524024)
(56881, 4, (237, 240), 3235448160)
(57359, 4, (238, 241), 3290054880)
(57839, 4, (239, 242), 3345349920)
(58321, 4, (240, 243), 3401339040)
(58805, 4, (241, 244), 3458028024)
(59291, 4, (242, 245), 3515422680)
(59779, 4, (243, 246), 3573528840)
(60269, 4, (244, 247), 3632352360)
(60761, 4, (245, 248), 3691899120)
(61255, 4, (246, 249), 3752175024)
(61751, 4, (247, 250), 3813186000)
(62249, 4, (248, 251), 3874938000)
(62749, 4, (249, 252), 3937437000)
(63251, 4, (250, 253), 4000689000)
(63755, 4, (251, 254), 4064700024)
(64261, 4, (252, 255), 4129476120)
(64769, 4, (253, 256), 4195023360)
(65279, 4, (254, 257), 4261347840)
(65791, 4, (255, 258), 4328455680)
(66305, 4, (256, 259), 4396353024)
(66821, 4, (257, 260), 4465046040)
(67339, 4, (258, 261), 4534540920)
(67859, 4, (259, 262), 4604843880)
(68381, 4, (260, 263), 4675961160)
(68905, 4, (261, 264), 4747899024)
(69431, 4, (262, 265), 4820663760)
(69959, 4, (263, 266), 4894261680)
(70489, 4, (264, 267), 4968699120)
(71021, 4, (265, 268), 5043982440)
(71555, 4, (266, 269), 5120118024)
(72091, 4, (267, 270), 5197112280)
(72629, 4, (268, 271), 5274971640)
(73169, 4, (269, 272), 5353702560)
(73711, 4, (270, 273), 5433311520)
(74255, 4, (271, 274), 5513805024)
(74801, 4, (272, 275), 5595189600)
(75349, 4, (273, 276), 5677471800)
(75899, 4, (274, 277), 5760658200)
(76451, 4, (275, 278), 5844755400)
(77005, 4, (276, 279), 5929770024)
(77561, 4, (277, 280), 6015708720)
(78119, 4, (278, 281), 6102578160)
(78679, 4, (279, 282), 6190385040)
(79241, 4, (280, 283), 6279136080)
(79805, 4, (281, 284), 6368838024)
(80371, 4, (282, 285), 6459497640)
(80939, 4, (283, 286), 6551121720)
(81509, 4, (284, 287), 6643717080)
(82081, 4, (285, 288), 6737290560)
(82655, 4, (286, 289), 6831849024)
(83231, 4, (287, 290), 6927399360)
(83809, 4, (288, 291), 7023948480)
(84389, 4, (289, 292), 7121503320)
(84971, 4, (290, 293), 7220070840)
(85555, 4, (291, 294), 7319658024)
(86141, 4, (292, 295), 7420271880)
(86729, 4, (293, 296), 7521919440)
(87319, 4, (294, 297), 7624607760)
(87911, 4, (295, 298), 7728343920)
(88505, 4, (296, 299), 7833135024)
(89101, 4, (297, 300), 7938988200)
(89699, 4, (298, 301), 8045910600)
(90299, 4, (299, 302), 8153909400)
(90901, 4, (300, 303), 8262991800)
(91505, 4, (301, 304), 8373165024)
(92111, 4, (302, 305), 8484436320)
(92719, 4, (303, 306), 8596812960)
(93329, 4, (304, 307), 8710302240)
(93941, 4, (305, 308), 8824911480)
(94555, 4, (306, 309), 8940648024)
(95171, 4, (307, 310), 9057519240)
(95789, 4, (308, 311), 9175532520)
(96409, 4, (309, 312), 9294695280)
(97031, 4, (310, 313), 9415014960)
(97655, 4, (311, 314), 9536499024)
(98281, 4, (312, 315), 9659154960)
(98909, 4, (313, 316), 9782990280)
(99539, 4, (314, 317), 9908012520)
(100171, 4, (315, 318), 10034229240)
(100805, 4, (316, 319), 10161648024)
(101441, 4, (317, 320), 10290276480)
(102079, 4, (318, 321), 10420122240)
(102719, 4, (319, 322), 10551192960)
(103361, 4, (320, 323), 10683496320)
(104005, 4, (321, 324), 10817040024)
(104651, 4, (322, 325), 10951831800)
(105299, 4, (323, 326), 11087879400)
(105949, 4, (324, 327), 11225190600)
(106601, 4, (325, 328), 11363773200)
(107255, 4, (326, 329), 11503635024)
(107911, 4, (327, 330), 11644783920)
(108569, 4, (328, 331), 11787227760)
(109229, 4, (329, 332), 11930974440)
(109891, 4, (330, 333), 12076031880)
(110555, 4, (331, 334), 12222408024)
(111221, 4, (332, 335), 12370110840)
(111889, 4, (333, 336), 12519148320)
(112559, 4, (334, 337), 12669528480)
(113231, 4, (335, 338), 12821259360)
(113905, 4, (336, 339), 12974349024)
(114581, 4, (337, 340), 13128805560)
(115259, 4, (338, 341), 13284637080)
(115939, 4, (339, 342), 13441851720)
(116621, 4, (340, 343), 13600457640)
(117305, 4, (341, 344), 13760463024)
(117991, 4, (342, 345), 13921876080)
(118679, 4, (343, 346), 14084705040)
(119369, 4, (344, 347), 14248958160)
(120061, 4, (345, 348), 14414643720)
(120755, 4, (346, 349), 14581770024)
(121451, 4, (347, 350), 14750345400)
(122149, 4, (348, 351), 14920378200)
(122849, 4, (349, 352), 15091876800)
(123551, 4, (350, 353), 15264849600)
(124255, 4, (351, 354), 15439305024)
(124961, 4, (352, 355), 15615251520)
(125669, 4, (353, 356), 15792697560)
(126379, 4, (354, 357), 15971651640)
(127091, 4, (355, 358), 16152122280)
(127805, 4, (356, 359), 16334118024)
(128521, 4, (357, 360), 16517647440)
(129239, 4, (358, 361), 16702719120)
(129959, 4, (359, 362), 16889341680)
(130681, 4, (360, 363), 17077523760)
(131405, 4, (361, 364), 17267274024)
(132131, 4, (362, 365), 17458601160)
(132859, 4, (363, 366), 17651513880)
(133589, 4, (364, 367), 17846020920)
(134321, 4, (365, 368), 18042131040)
(135055, 4, (366, 369), 18239853024)
(135791, 4, (367, 370), 18439195680)
(136529, 4, (368, 371), 18640167840)
(137269, 4, (369, 372), 18842778360)
(138011, 4, (370, 373), 19047036120)
(138755, 4, (371, 374), 19252950024)
(139501, 4, (372, 375), 19460529000)
(140249, 4, (373, 376), 19669782000)
(140999, 4, (374, 377), 19880718000)
(141751, 4, (375, 378), 20093346000)
(142505, 4, (376, 379), 20307675024)
(143261, 4, (377, 380), 20523714120)
(144019, 4, (378, 381), 20741472360)
(144779, 4, (379, 382), 20960958840)
(145541, 4, (380, 383), 21182182680)
(146305, 4, (381, 384), 21405153024)
(147071, 4, (382, 385), 21629879040)
(147839, 4, (383, 386), 21856369920)
(148609, 4, (384, 387), 22084634880)
(149381, 4, (385, 388), 22314683160)
(150155, 4, (386, 389), 22546524024)
(150931, 4, (387, 390), 22780166760)
(151709, 4, (388, 391), 23015620680)
(152489, 4, (389, 392), 23252895120)
(153271, 4, (390, 393), 23491999440)
(154055, 4, (391, 394), 23732943024)
(154841, 4, (392, 395), 23975735280)
(155629, 4, (393, 396), 24220385640)
(156419, 4, (394, 397), 24466903560)
(157211, 4, (395, 398), 24715298520)
(158005, 4, (396, 399), 24965580024)
(158801, 4, (397, 400), 25217757600)
(159599, 4, (398, 401), 25471840800)
(160399, 4, (399, 402), 25727839200)
(161201, 4, (400, 403), 25985762400)
(162005, 4, (401, 404), 26245620024)
(162811, 4, (402, 405), 26507421720)
(163619, 4, (403, 406), 26771177160)
(164429, 4, (404, 407), 27036896040)
(165241, 4, (405, 408), 27304588080)
(166055, 4, (406, 409), 27574263024)
(166871, 4, (407, 410), 27845930640)
(167689, 4, (408, 411), 28119600720)
(168509, 4, (409, 412), 28395283080)
(169331, 4, (410, 413), 28672987560)
(170155, 4, (411, 414), 28952724024)
(170981, 4, (412, 415), 29234502360)
(171809, 4, (413, 416), 29518332480)
(172639, 4, (414, 417), 29804224320)
(173471, 4, (415, 418), 30092187840)
(174305, 4, (416, 419), 30382233024)
(175141, 4, (417, 420), 30674369880)
(175979, 4, (418, 421), 30968608440)
(176819, 4, (419, 422), 31264958760)
(177661, 4, (420, 423), 31563430920)
(178505, 4, (421, 424), 31864035024)
(179351, 4, (422, 425), 32166781200)
(180199, 4, (423, 426), 32471679600)
(181049, 4, (424, 427), 32778740400)
(181901, 4, (425, 428), 33087973800)
(182755, 4, (426, 429), 33399390024)
(183611, 4, (427, 430), 33712999320)
(184469, 4, (428, 431), 34028811960)
(185329, 4, (429, 432), 34346838240)
(186191, 4, (430, 433), 34667088480)
(187055, 4, (431, 434), 34989573024)
(187921, 4, (432, 435), 35314302240)
(188789, 4, (433, 436), 35641286520)
(189659, 4, (434, 437), 35970536280)
(190531, 4, (435, 438), 36302061960)
(191405, 4, (436, 439), 36635874024)
(192281, 4, (437, 440), 36971982960)
(193159, 4, (438, 441), 37310399280)
(194039, 4, (439, 442), 37651133520)
(194921, 4, (440, 443), 37994196240)
(195805, 4, (441, 444), 38339598024)
(196691, 4, (442, 445), 38687349480)
(197579, 4, (443, 446), 39037461240)
(198469, 4, (444, 447), 39389943960)
(199361, 4, (445, 448), 39744808320)
(200255, 4, (446, 449), 40102065024)
(201151, 4, (447, 450), 40461724800)
(202049, 4, (448, 451), 40823798400)
(202949, 4, (449, 452), 41188296600)
(203851, 4, (450, 453), 41555230200)
(204755, 4, (451, 454), 41924610024)
(205661, 4, (452, 455), 42296446920)
(206569, 4, (453, 456), 42670751760)
(207479, 4, (454, 457), 43047535440)
(208391, 4, (455, 458), 43426808880)
(209305, 4, (456, 459), 43808583024)
(210221, 4, (457, 460), 44192868840)
(211139, 4, (458, 461), 44579677320)
(212059, 4, (459, 462), 44969019480)
(212981, 4, (460, 463), 45360906360)
(213905, 4, (461, 464), 45755349024)
(214831, 4, (462, 465), 46152358560)
(215759, 4, (463, 466), 46551946080)
(216689, 4, (464, 467), 46954122720)
(217621, 4, (465, 468), 47358899640)
(218555, 4, (466, 469), 47766288024)
(219491, 4, (467, 470), 48176299080)
(220429, 4, (468, 471), 48588944040)
(221369, 4, (469, 472), 49004234160)
(222311, 4, (470, 473), 49422180720)
(223255, 4, (471, 474), 49842795024)
(224201, 4, (472, 475), 50266088400)
(225149, 4, (473, 476), 50692072200)
(226099, 4, (474, 477), 51120757800)
(227051, 4, (475, 478), 51552156600)
(228005, 4, (476, 479), 51986280024)
(228961, 4, (477, 480), 52423139520)
(229919, 4, (478, 481), 52862746560)
(230879, 4, (479, 482), 53305112640)
(231841, 4, (480, 483), 53750249280)
(232805, 4, (481, 484), 54198168024)
(233771, 4, (482, 485), 54648880440)
(234739, 4, (483, 486), 55102398120)
(235709, 4, (484, 487), 55558732680)
(236681, 4, (485, 488), 56017895760)
(237655, 4, (486, 489), 56479899024)
(238631, 4, (487, 490), 56944754160)
(239609, 4, (488, 491), 57412472880)
(240589, 4, (489, 492), 57883066920)
(241571, 4, (490, 493), 58356548040)
(242555, 4, (491, 494), 58832928024)
(243541, 4, (492, 495), 59312218680)
(244529, 4, (493, 496), 59794431840)
(245519, 4, (494, 497), 60279579360)
(246511, 4, (495, 498), 60767673120)
(247505, 4, (496, 499), 61258725024)
(248501, 4, (497, 500), 61752747000)
(249499, 4, (498, 501), 62249751000)
(250499, 4, (499, 502), 62749749000)
(251501, 4, (500, 503), 63252753000)
(252505, 4, (501, 504), 63758775024)
(253511, 4, (502, 505), 64267827120)
(254519, 4, (503, 506), 64779921360)
(255529, 4, (504, 507), 65295069840)
(256541, 4, (505, 508), 65813284680)
(257555, 4, (506, 509), 66334578024)
(258571, 4, (507, 510), 66858962040)
(259589, 4, (508, 511), 67386448920)
(260609, 4, (509, 512), 67917050880)
(261631, 4, (510, 513), 68450780160)
(262655, 4, (511, 514), 68987649024)
(263681, 4, (512, 515), 69527669760)
(264709, 4, (513, 516), 70070854680)
(265739, 4, (514, 517), 70617216120)
(266771, 4, (515, 518), 71166766440)
(267805, 4, (516, 519), 71719518024)
(268841, 4, (517, 520), 72275483280)
(269879, 4, (518, 521), 72834674640)
(270919, 4, (519, 522), 73397104560)
(271961, 4, (520, 523), 73962785520)
(273005, 4, (521, 524), 74531730024)
(274051, 4, (522, 525), 75103950600)
(275099, 4, (523, 526), 75679459800)
(276149, 4, (524, 527), 76258270200)
(277201, 4, (525, 528), 76840394400)
(278255, 4, (526, 529), 77425845024)
(279311, 4, (527, 530), 78014634720)
(280369, 4, (528, 531), 78606776160)
(281429, 4, (529, 532), 79202282040)
(282491, 4, (530, 533), 79801165080)
(283555, 4, (531, 534), 80403438024)
(284621, 4, (532, 535), 81009113640)
(285689, 4, (533, 536), 81618204720)
(286759, 4, (534, 537), 82230724080)
(287831, 4, (535, 538), 82846684560)
(288905, 4, (536, 539), 83466099024)
(289981, 4, (537, 540), 84088980360)
(291059, 4, (538, 541), 84715341480)
(292139, 4, (539, 542), 85345195320)
(293221, 4, (540, 543), 85978554840)
(294305, 4, (541, 544), 86615433024)
(295391, 4, (542, 545), 87255842880)
(296479, 4, (543, 546), 87899797440)
(297569, 4, (544, 547), 88547309760)
(298661, 4, (545, 548), 89198392920)
(299755, 4, (546, 549), 89853060024)
(300851, 4, (547, 550), 90511324200)
(301949, 4, (548, 551), 91173198600)
(303049, 4, (549, 552), 91838696400)
(304151, 4, (550, 553), 92507830800)
(305255, 4, (551, 554), 93180615024)
(306361, 4, (552, 555), 93857062320)
(307469, 4, (553, 556), 94537185960)
(308579, 4, (554, 557), 95220999240)
(309691, 4, (555, 558), 95908515480)
(310805, 4, (556, 559), 96599748024)
(311921, 4, (557, 560), 97294710240)
(313039, 4, (558, 561), 97993415520)
(314159, 4, (559, 562), 98695877280)
(315281, 4, (560, 563), 99402108960)
(316405, 4, (561, 564), 100112124024)
(317531, 4, (562, 565), 100825935960)
(318659, 4, (563, 566), 101543558280)
(319789, 4, (564, 567), 102265004520)
(320921, 4, (565, 568), 102990288240)
(322055, 4, (566, 569), 103719423024)
(323191, 4, (567, 570), 104452422480)
(324329, 4, (568, 571), 105189300240)
(325469, 4, (569, 572), 105930069960)
(326611, 4, (570, 573), 106674745320)
(327755, 4, (571, 574), 107423340024)
(328901, 4, (572, 575), 108175867800)
(330049, 4, (573, 576), 108932342400)
(331199, 4, (574, 577), 109692777600)
(332351, 4, (575, 578), 110457187200)
(333505, 4, (576, 579), 111225585024)
(334661, 4, (577, 580), 111997984920)
(335819, 4, (578, 581), 112774400760)
(336979, 4, (579, 582), 113554846440)
(338141, 4, (580, 583), 114339335880)
(339305, 4, (581, 584), 115127883024)
(340471, 4, (582, 585), 115920501840)
(341639, 4, (583, 586), 116717206320)
(342809, 4, (584, 587), 117518010480)
(343981, 4, (585, 588), 118322928360)
(345155, 4, (586, 589), 119131974024)
(346331, 4, (587, 590), 119945161560)
(347509, 4, (588, 591), 120762505080)
(348689, 4, (589, 592), 121584018720)
(349871, 4, (590, 593), 122409716640)
(351055, 4, (591, 594), 123239613024)
(352241, 4, (592, 595), 124073722080)
(353429, 4, (593, 596), 124912058040)
(354619, 4, (594, 597), 125754635160)
(355811, 4, (595, 598), 126601467720)
(357005, 4, (596, 599), 127452570024)
(358201, 4, (597, 600), 128307956400)
(359399, 4, (598, 601), 129167641200)
(360599, 4, (599, 602), 130031638800)
(361801, 4, (600, 603), 130899963600)
(363005, 4, (601, 604), 131772630024)
(364211, 4, (602, 605), 132649652520)
(365419, 4, (603, 606), 133531045560)
(366629, 4, (604, 607), 134416823640)
(367841, 4, (605, 608), 135307001280)
(369055, 4, (606, 609), 136201593024)
(370271, 4, (607, 610), 137100613440)
(371489, 4, (608, 611), 138004077120)
(372709, 4, (609, 612), 138911998680)
(373931, 4, (610, 613), 139824392760)
(375155, 4, (611, 614), 140741274024)
(376381, 4, (612, 615), 141662657160)
(377609, 4, (613, 616), 142588556880)
(378839, 4, (614, 617), 143518987920)
(380071, 4, (615, 618), 144453965040)
(381305, 4, (616, 619), 145393503024)
(382541, 4, (617, 620), 146337616680)
(383779, 4, (618, 621), 147286320840)
(385019, 4, (619, 622), 148239630360)
(386261, 4, (620, 623), 149197560120)
(387505, 4, (621, 624), 150160125024)
(388751, 4, (622, 625), 151127340000)
(389999, 4, (623, 626), 152099220000)
(391249, 4, (624, 627), 153075780000)
(392501, 4, (625, 628), 154057035000)
(393755, 4, (626, 629), 155043000024)
(395011, 4, (627, 630), 156033690120)
(396269, 4, (628, 631), 157029120360)
(397529, 4, (629, 632), 158029305840)
(398791, 4, (630, 633), 159034261680)
(400055, 4, (631, 634), 160044003024)
(401321, 4, (632, 635), 161058545040)
(402589, 4, (633, 636), 162077902920)
(403859, 4, (634, 637), 163102091880)
(405131, 4, (635, 638), 164131127160)
(406405, 4, (636, 639), 165165024024)
(407681, 4, (637, 640), 166203797760)
(408959, 4, (638, 641), 167247463680)
(410239, 4, (639, 642), 168296037120)
(411521, 4, (640, 643), 169349533440)
(412805, 4, (641, 644), 170407968024)
(414091, 4, (642, 645), 171471356280)
(415379, 4, (643, 646), 172539713640)
(416669, 4, (644, 647), 173613055560)
(417961, 4, (645, 648), 174691397520)
(419255, 4, (646, 649), 175774755024)
(420551, 4, (647, 650), 176863143600)
(421849, 4, (648, 651), 177956578800)
(423149, 4, (649, 652), 179055076200)
(424451, 4, (650, 653), 180158651400)
(425755, 4, (651, 654), 181267320024)
(427061, 4, (652, 655), 182381097720)
(428369, 4, (653, 656), 183500000160)
(429679, 4, (654, 657), 184624043040)
(430991, 4, (655, 658), 185753242080)
(432305, 4, (656, 659), 186887613024)
(433621, 4, (657, 660), 188027171640)
(434939, 4, (658, 661), 189171933720)
(436259, 4, (659, 662), 190321915080)
(437581, 4, (660, 663), 191477131560)
(438905, 4, (661, 664), 192637599024)
(440231, 4, (662, 665), 193803333360)
(441559, 4, (663, 666), 194974350480)
(442889, 4, (664, 667), 196150666320)
(444221, 4, (665, 668), 197332296840)
(445555, 4, (666, 669), 198519258024)
(446891, 4, (667, 670), 199711565880)
(448229, 4, (668, 671), 200909236440)
(449569, 4, (669, 672), 202112285760)
(450911, 4, (670, 673), 203320729920)
(452255, 4, (671, 674), 204534585024)
(453601, 4, (672, 675), 205753867200)
(454949, 4, (673, 676), 206978592600)
(456299, 4, (674, 677), 208208777400)
(457651, 4, (675, 678), 209444437800)
(459005, 4, (676, 679), 210685590024)
(460361, 4, (677, 680), 211932250320)
(461719, 4, (678, 681), 213184434960)
(463079, 4, (679, 682), 214442160240)
(464441, 4, (680, 683), 215705442480)
(465805, 4, (681, 684), 216974298024)
(467171, 4, (682, 685), 218248743240)
(468539, 4, (683, 686), 219528794520)
(469909, 4, (684, 687), 220814468280)
(471281, 4, (685, 688), 222105780960)
(472655, 4, (686, 689), 223402749024)
(474031, 4, (687, 690), 224705388960)
(475409, 4, (688, 691), 226013717280)
(476789, 4, (689, 692), 227327750520)
(478171, 4, (690, 693), 228647505240)
(479555, 4, (691, 694), 229972998024)
(480941, 4, (692, 695), 231304245480)
(482329, 4, (693, 696), 232641264240)
(483719, 4, (694, 697), 233984070960)
(485111, 4, (695, 698), 235332682320)
(486505, 4, (696, 699), 236687115024)
(487901, 4, (697, 700), 238047385800)
(489299, 4, (698, 701), 239413511400)
(490699, 4, (699, 702), 240785508600)
(492101, 4, (700, 703), 242163394200)
(493505, 4, (701, 704), 243547185024)
(494911, 4, (702, 705), 244936897920)
(496319, 4, (703, 706), 246332549760)
(497729, 4, (704, 707), 247734157440)
(499141, 4, (705, 708), 249141737880)
(500555, 4, (706, 709), 250555308024)
(501971, 4, (707, 710), 251974884840)
(503389, 4, (708, 711), 253400485320)
(504809, 4, (709, 712), 254832126480)
(506231, 4, (710, 713), 256269825360)
(507655, 4, (711, 714), 257713599024)
(509081, 4, (712, 715), 259163464560)
(510509, 4, (713, 716), 260619439080)
(511939, 4, (714, 717), 262081539720)
(513371, 4, (715, 718), 263549783640)
(514805, 4, (716, 719), 265024188024)
(516241, 4, (717, 720), 266504770080)
(517679, 4, (718, 721), 267991547040)
(519119, 4, (719, 722), 269484536160)
(520561, 4, (720, 723), 270983754720)
(522005, 4, (721, 724), 272489220024)
(523451, 4, (722, 725), 274000949400)
(524899, 4, (723, 726), 275518960200)
(526349, 4, (724, 727), 277043269800)
(527801, 4, (725, 728), 278573895600)
(529255, 4, (726, 729), 280110855024)
(530711, 4, (727, 730), 281654165520)
(532169, 4, (728, 731), 283203844560)
(533629, 4, (729, 732), 284759909640)
(535091, 4, (730, 733), 286322378280)
(536555, 4, (731, 734), 287891268024)
(538021, 4, (732, 735), 289466596440)
(539489, 4, (733, 736), 291048381120)
(540959, 4, (734, 737), 292636639680)
(542431, 4, (735, 738), 294231389760)
(543905, 4, (736, 739), 295832649024)
(545381, 4, (737, 740), 297440435160)
(546859, 4, (738, 741), 299054765880)
(548339, 4, (739, 742), 300675658920)
(549821, 4, (740, 743), 302303132040)
(551305, 4, (741, 744), 303937203024)
(552791, 4, (742, 745), 305577889680)
(554279, 4, (743, 746), 307225209840)
(555769, 4, (744, 747), 308879181360)
(557261, 4, (745, 748), 310539822120)
(558755, 4, (746, 749), 312207150024)
(560251, 4, (747, 750), 313881183000)
(561749, 4, (748, 751), 315561939000)
(563249, 4, (749, 752), 317249436000)
(564751, 4, (750, 753), 318943692000)
(566255, 4, (751, 754), 320644725024)
(567761, 4, (752, 755), 322352553120)
(569269, 4, (753, 756), 324067194360)
(570779, 4, (754, 757), 325788666840)
(572291, 4, (755, 758), 327516988680)
(573805, 4, (756, 759), 329252178024)
(575321, 4, (757, 760), 330994253040)
(576839, 4, (758, 761), 332743231920)
(578359, 4, (759, 762), 334499132880)
(579881, 4, (760, 763), 336261974160)
(581405, 4, (761, 764), 338031774024)
(582931, 4, (762, 765), 339808550760)
(584459, 4, (763, 766), 341592322680)
(585989, 4, (764, 767), 343383108120)
(587521, 4, (765, 768), 345180925440)
(589055, 4, (766, 769), 346985793024)
(590591, 4, (767, 770), 348797729280)
(592129, 4, (768, 771), 350616752640)
(593669, 4, (769, 772), 352442881560)
(595211, 4, (770, 773), 354276134520)
(596755, 4, (771, 774), 356116530024)
(598301, 4, (772, 775), 357964086600)
(599849, 4, (773, 776), 359818822800)
(601399, 4, (774, 777), 361680757200)
(602951, 4, (775, 778), 363549908400)
(604505, 4, (776, 779), 365426295024)
(606061, 4, (777, 780), 367309935720)
(607619, 4, (778, 781), 369200849160)
(609179, 4, (779, 782), 371099054040)
(610741, 4, (780, 783), 373004569080)
(612305, 4, (781, 784), 374917413024)
(613871, 4, (782, 785), 376837604640)
(615439, 4, (783, 786), 378765162720)
(617009, 4, (784, 787), 380700106080)
(618581, 4, (785, 788), 382642453560)
(620155, 4, (786, 789), 384592224024)
(621731, 4, (787, 790), 386549436360)
(623309, 4, (788, 791), 388514109480)
(624889, 4, (789, 792), 390486262320)
(626471, 4, (790, 793), 392465913840)
(628055, 4, (791, 794), 394453083024)
(629641, 4, (792, 795), 396447788880)
(631229, 4, (793, 796), 398450050440)
(632819, 4, (794, 797), 400459886760)
(634411, 4, (795, 798), 402477316920)
(636005, 4, (796, 799), 404502360024)
(637601, 4, (797, 800), 406535035200)
(639199, 4, (798, 801), 408575361600)
(640799, 4, (799, 802), 410623358400)
(642401, 4, (800, 803), 412679044800)
(644005, 4, (801, 804), 414742440024)
(645611, 4, (802, 805), 416813563320)
(647219, 4, (803, 806), 418892433960)
(648829, 4, (804, 807), 420979071240)
(650441, 4, (805, 808), 423073494480)
(652055, 4, (806, 809), 425175723024)
(653671, 4, (807, 810), 427285776240)
(655289, 4, (808, 811), 429403673520)
(656909, 4, (809, 812), 431529434280)
(658531, 4, (810, 813), 433663077960)
(660155, 4, (811, 814), 435804624024)
(661781, 4, (812, 815), 437954091960)
(663409, 4, (813, 816), 440111501280)
(665039, 4, (814, 817), 442276871520)
(666671, 4, (815, 818), 444450222240)
(668305, 4, (816, 819), 446631573024)
(669941, 4, (817, 820), 448820943480)
(671579, 4, (818, 821), 451018353240)
(673219, 4, (819, 822), 453223821960)
(674861, 4, (820, 823), 455437369320)
(676505, 4, (821, 824), 457659015024)
(678151, 4, (822, 825), 459888778800)
(679799, 4, (823, 826), 462126680400)
(681449, 4, (824, 827), 464372739600)
(683101, 4, (825, 828), 466626976200)
(684755, 4, (826, 829), 468889410024)
(686411, 4, (827, 830), 471160060920)
(688069, 4, (828, 831), 473438948760)
(689729, 4, (829, 832), 475726093440)
(691391, 4, (830, 833), 478021514880)
(693055, 4, (831, 834), 480325233024)
(694721, 4, (832, 835), 482637267840)
(696389, 4, (833, 836), 484957639320)
(698059, 4, (834, 837), 487286367480)
(699731, 4, (835, 838), 489623472360)
(701405, 4, (836, 839), 491968974024)
(703081, 4, (837, 840), 494322892560)
(704759, 4, (838, 841), 496685248080)
(706439, 4, (839, 842), 499056060720)
(708121, 4, (840, 843), 501435350640)
(709805, 4, (841, 844), 503823138024)
(711491, 4, (842, 845), 506219443080)
(713179, 4, (843, 846), 508624286040)
(714869, 4, (844, 847), 511037687160)
(716561, 4, (845, 848), 513459666720)
(718255, 4, (846, 849), 515890245024)
(719951, 4, (847, 850), 518329442400)
(721649, 4, (848, 851), 520777279200)
(723349, 4, (849, 852), 523233775800)
(725051, 4, (850, 853), 525698952600)
(726755, 4, (851, 854), 528172830024)
(728461, 4, (852, 855), 530655428520)
(730169, 4, (853, 856), 533146768560)
(731879, 4, (854, 857), 535646870640)
(733591, 4, (855, 858), 538155755280)
(735305, 4, (856, 859), 540673443024)
(737021, 4, (857, 860), 543199954440)
(738739, 4, (858, 861), 545735310120)
(740459, 4, (859, 862), 548279530680)
(742181, 4, (860, 863), 550832636760)
(743905, 4, (861, 864), 553394649024)
(745631, 4, (862, 865), 555965588160)
(747359, 4, (863, 866), 558545474880)
(749089, 4, (864, 867), 561134329920)
(750821, 4, (865, 868), 563732174040)
(752555, 4, (866, 869), 566339028024)
(754291, 4, (867, 870), 568954912680)
(756029, 4, (868, 871), 571579848840)
(757769, 4, (869, 872), 574213857360)
(759511, 4, (870, 873), 576856959120)
(761255, 4, (871, 874), 579509175024)
(763001, 4, (872, 875), 582170526000)
(764749, 4, (873, 876), 584841033000)
(766499, 4, (874, 877), 587520717000)
(768251, 4, (875, 878), 590209599000)
(770005, 4, (876, 879), 592907700024)
(771761, 4, (877, 880), 595615041120)
(773519, 4, (878, 881), 598331643360)
(775279, 4, (879, 882), 601057527840)
(777041, 4, (880, 883), 603792715680)
(778805, 4, (881, 884), 606537228024)
(780571, 4, (882, 885), 609291086040)
(782339, 4, (883, 886), 612054310920)
(784109, 4, (884, 887), 614826923880)
(785881, 4, (885, 888), 617608946160)
(787655, 4, (886, 889), 620400399024)
(789431, 4, (887, 890), 623201303760)
(791209, 4, (888, 891), 626011681680)
(792989, 4, (889, 892), 628831554120)
(794771, 4, (890, 893), 631660942440)
(796555, 4, (891, 894), 634499868024)
(798341, 4, (892, 895), 637348352280)
(800129, 4, (893, 896), 640206416640)
(801919, 4, (894, 897), 643074082560)
(803711, 4, (895, 898), 645951371520)
(805505, 4, (896, 899), 648838305024)
(807301, 4, (897, 900), 651734904600)
(809099, 4, (898, 901), 654641191800)
(810899, 4, (899, 902), 657557188200)
(812701, 4, (900, 903), 660482915400)
(814505, 4, (901, 904), 663418395024)
(816311, 4, (902, 905), 666363648720)
(818119, 4, (903, 906), 669318698160)
(819929, 4, (904, 907), 672283565040)
(821741, 4, (905, 908), 675258271080)
(823555, 4, (906, 909), 678242838024)
(825371, 4, (907, 910), 681237287640)
(827189, 4, (908, 911), 684241641720)
(829009, 4, (909, 912), 687255922080)
(830831, 4, (910, 913), 690280150560)
(832655, 4, (911, 914), 693314349024)
(834481, 4, (912, 915), 696358539360)
(836309, 4, (913, 916), 699412743480)
(838139, 4, (914, 917), 702476983320)
(839971, 4, (915, 918), 705551280840)
(841805, 4, (916, 919), 708635658024)
(843641, 4, (917, 920), 711730136880)
(845479, 4, (918, 921), 714834739440)
(847319, 4, (919, 922), 717949487760)
(849161, 4, (920, 923), 721074403920)
(851005, 4, (921, 924), 724209510024)
(852851, 4, (922, 925), 727354828200)
(854699, 4, (923, 926), 730510380600)
(856549, 4, (924, 927), 733676189400)
(858401, 4, (925, 928), 736852276800)
(860255, 4, (926, 929), 740038665024)
(862111, 4, (927, 930), 743235376320)
(863969, 4, (928, 931), 746442432960)
(865829, 4, (929, 932), 749659857240)
(867691, 4, (930, 933), 752887671480)
(869555, 4, (931, 934), 756125898024)
(871421, 4, (932, 935), 759374559240)
(873289, 4, (933, 936), 762633677520)
(875159, 4, (934, 937), 765903275280)
(877031, 4, (935, 938), 769183374960)
(878905, 4, (936, 939), 772473999024)
(880781, 4, (937, 940), 775775169960)
(882659, 4, (938, 941), 779086910280)
(884539, 4, (939, 942), 782409242520)
(886421, 4, (940, 943), 785742189240)
(888305, 4, (941, 944), 789085773024)
(890191, 4, (942, 945), 792440016480)
(892079, 4, (943, 946), 795804942240)
(893969, 4, (944, 947), 799180572960)
(895861, 4, (945, 948), 802566931320)
(897755, 4, (946, 949), 805964040024)
(899651, 4, (947, 950), 809371921800)
(901549, 4, (948, 951), 812790599400)
(903449, 4, (949, 952), 816220095600)
(905351, 4, (950, 953), 819660433200)
(907255, 4, (951, 954), 823111635024)
(909161, 4, (952, 955), 826573723920)
(911069, 4, (953, 956), 830046722760)
(912979, 4, (954, 957), 833530654440)
(914891, 4, (955, 958), 837025541880)
(916805, 4, (956, 959), 840531408024)
(918721, 4, (957, 960), 844048275840)
(920639, 4, (958, 961), 847576168320)
(922559, 4, (959, 962), 851115108480)
(924481, 4, (960, 963), 854665119360)
(926405, 4, (961, 964), 858226224024)
(928331, 4, (962, 965), 861798445560)
(930259, 4, (963, 966), 865381807080)
(932189, 4, (964, 967), 868976331720)
(934121, 4, (965, 968), 872582042640)
(936055, 4, (966, 969), 876198963024)
(937991, 4, (967, 970), 879827116080)
(939929, 4, (968, 971), 883466525040)
(941869, 4, (969, 972), 887117213160)
(943811, 4, (970, 973), 890779203720)
(945755, 4, (971, 974), 894452520024)
(947701, 4, (972, 975), 898137185400)
(949649, 4, (973, 976), 901833223200)
(951599, 4, (974, 977), 905540656800)
(953551, 4, (975, 978), 909259509600)
(955505, 4, (976, 979), 912989805024)
(957461, 4, (977, 980), 916731566520)
(959419, 4, (978, 981), 920484817560)
(961379, 4, (979, 982), 924249581640)
(963341, 4, (980, 983), 928025882280)
(965305, 4, (981, 984), 931813743024)
(967271, 4, (982, 985), 935613187440)
(969239, 4, (983, 986), 939424239120)
(971209, 4, (984, 987), 943246921680)
(973181, 4, (985, 988), 947081258760)
(975155, 4, (986, 989), 950927274024)
(977131, 4, (987, 990), 954784991160)
(979109, 4, (988, 991), 958654433880)
(981089, 4, (989, 992), 962535625920)
(983071, 4, (990, 993), 966428591040)
(985055, 4, (991, 994), 970333353024)
(987041, 4, (992, 995), 974249935680)
(989029, 4, (993, 996), 978178362840)
(991019, 4, (994, 997), 982118658360)
(993011, 4, (995, 998), 986070846120)
(995005, 4, (996, 999), 990034950024)
(997001, 4, (997, 1000), 994010994000)
(998999, 4, (998, 1001), 997999002000)
]]


[[
py_adhoc_call   script.有趣的等式牜连乘等于平方差一   ,枚举冫平方差一暨连乘乊连乘长度扌  ='range(2,100)' ='100'
    # [2**100 > 100]
    #改进为None:
py_adhoc_call   script.有趣的等式牜连乘等于平方差一   ,枚举冫平方差一暨连乘乊连乘长度扌  ='None' ='100'
    #排序:先snd/e,再fst/u
    #13行
    #fmt:(u, e, (a,b), n) # [[u,e>=2][a>=1][b-a+1==e][n==u**2-1==II([a..=b])]]
(5, 3, (2, 4), 24)
(11, 3, (4, 6), 120)
(5, 4, (1, 4), 24)
(11, 4, (2, 5), 120)
(19, 4, (3, 6), 360)
(29, 4, (4, 7), 840)
(41, 4, (5, 8), 1680)
(55, 4, (6, 9), 3024)
(71, 4, (7, 10), 5040)
(89, 4, (8, 11), 7920)
(11, 5, (1, 5), 120)
(71, 6, (2, 7), 5040)
(71, 7, (1, 7), 5040)
]]


[[
#比上面快很多，因为上一版每个u开幂方多次
py_adhoc_call   script.有趣的等式牜连乘等于平方差一   ,枚举冫平方差一暨连乘乊连乘长度扌  ='range(2,100)' ='10**6' > /sdcard/0my_files/tmp/0tmp
    # [2**100 > 10**6]
    #改进为None:
py_adhoc_call   script.有趣的等式牜连乘等于平方差一   ,枚举冫平方差一暨连乘乊连乘长度扌  ='None' ='10**6' > /sdcard/0my_files/tmp/0tmp
    #排序:先snd/e,再fst/u
    #1005行
    #fmt:(u, e, (a,b), n) # [[u,e>=2][a>=1][b-a+1==e][n==u**2-1==II([a..=b])]]
du -h /sdcard/0my_files/tmp/0tmp
    36K
view /sdcard/0my_files/tmp/0tmp
(5, 3, (2, 4), 24)
(11, 3, (4, 6), 120)
(419, 3, (55, 57), 175560)
(5, 4, (1, 4), 24)
(11, 4, (2, 5), 120)
(19, 4, (3, 6), 360)
(29, 4, (4, 7), 840)
(41, 4, (5, 8), 1680)
(55, 4, (6, 9), 3024)
(71, 4, (7, 10), 5040)
(89, 4, (8, 11), 7920)
(109, 4, (9, 12), 11880)
(131, 4, (10, 13), 17160)
... ... # [:等式乊四数连乘]:goto
... ...
(997001, 4, (997, 1000), 994010994000)
(998999, 4, (998, 1001), 997999002000)
(11, 5, (1, 5), 120)
(71, 6, (2, 7), 5040)
(71, 7, (1, 7), 5040)
(4159, 7, (8, 14), 17297280)
]]
[[
{10**2:13,10**4:105,10**6:1005,10**8:10005}#{u上限:u数量}
    u数量约为u上限的平方根
{10**2:8==13-2-3,10**4:98==105-3-4,10**6:998==1005-3-4,10**8:9998==10005-3-4}#{u上限:u数量}@[e==4]
    (早该！)发现:[[e==4][a>=1] -> [u存在]]
        # [:等式乊四数连乘]:goto
        # # 见:kw:exclude_exp_eq_4
<<==:
#很快，十来二十秒的感觉
py_adhoc_call   script.有趣的等式牜连乘等于平方差一   ,枚举冫平方差一暨连乘乊连乘长度扌  ='None' ='10**8' > /sdcard/0my_files/tmp/0tmp
    #排序:先snd/e,再fst/u
    #10005行
    #fmt:(u, e, (a,b), n) # [[u,e>=2][a>=1][b-a+1==e][n==u**2-1==II([a..=b])]]
du -h /sdcard/0my_files/tmp/0tmp
    432K
view /sdcard/0my_files/tmp/0tmp
(5, 3, (2, 4), 24)
(11, 3, (4, 6), 120)
(419, 3, (55, 57), 175560)
(5, 4, (1, 4), 24)
(11, 4, (2, 5), 120)
(19, 4, (3, 6), 360)
(29, 4, (4, 7), 840)
(41, 4, (5, 8), 1680)
(55, 4, (6, 9), 3024)
(71, 4, (7, 10), 5040)
(89, 4, (8, 11), 7920)
(109, 4, (9, 12), 11880)
(131, 4, (10, 13), 17160)
(155, 4, (11, 14), 24024)
(181, 4, (12, 15), 32760)
(209, 4, (13, 16), 43680)
... ... # [:等式乊四数连乘]:goto
... ...
(10099, 4, (99, 102), 101989800)
(10301, 4, (100, 103), 106110600)
(10505, 4, (101, 104), 110355024)
(10711, 4, (102, 105), 114725520)
... ...
(997001, 4, (997, 1000), 994010994000)
(998999, 4, (998, 1001), 997999002000)
(1000999, 4, (999, 1002), 1001998998000)
(1003001, 4, (1000, 1003), 1006011006000)
... ...
(99970001, 4, (9997, 10000), 9994001099940000)
(99989999, 4, (9998, 10001), 9997999900020000)
(11, 5, (1, 5), 120)
(71, 6, (2, 7), 5040)
(71, 7, (1, 7), 5040)
(4159, 7, (8, 14), 17297280)
]]





def 枚举冫平方差一暨连乘扌(begin_or_uints=2, /, *, exclude_exp_eq_4=False):
def 枚举冫平方差一暨连乘乊连乘长度扌(may_exp_or_exps=3, may_max1_u=None, /, *, exclude_exp_eq_4=False):
]]]'''#'''
__all__ = r'''
枚举冫平方差一暨连乘扌
    尝试找到连乘附近于
枚举冫平方差一暨连乘乊连乘长度扌
'''.split()#'''
__all__
___begin_mark_of_excluded_global_names__0___ = ...
from itertools import count
from seed.tiny_.check import check_type_is, check_int_ge
#.
#.from seed.abc.abc__ver1 import abstractmethod, override, ABC
#.from seed.helper.repr_input import repr_helper
#.from seed.tiny_._Base4repr import _Base4repr
        #sf._reset4repr(may_args4repr, may_kwds4repr)
        #sf._init4repr(*args4repr, **kwds4repr)
___end_mark_of_excluded_global_names__0___ = ...

#.class __(ABC):
#.    __slots__ = ()
#.    ___no_slots_ok___ = True
#.    def __repr__(sf, /):
#.        return repr_helper(sf, *args, **kwargs)
#.if __name__ == "__main__":
#.    raise NotImplementedError

def 尝试找到连乘附近于(k, e, n, /, *, verbose=False):
    'k/uint{>=1} -> e/uint{>=2} -> n/uint{>=2} -> iter-tmay (a,b)/(uint,uint){[b+1-a==e][a<=k<=b][n==II([a..=b])]}'
    check_int_ge(1, k)
    check_int_ge(2, e)
    check_int_ge(2, n)
    if verbose: print((k, e, n))
    (q, r) = divmod(n, k)
    if r:
        return
    qs = [q]
    ds = [k]
    for d in range(k+1, k+e):
        (q, r) = divmod(qs[-1], d)
        if r:
            break
        qs.append(q)
        ds.append(d)
    else:
        assert r==0
        assert ds[-1]==k+e-1
        if qs[-1] == 1:
            yield (k, k+e-1)
        return
    if verbose: print((k, e, n), (qs, ds))
    if ds[-1] < e:
        return
    if k == 1:
        raise 000
        assert len(ds) < e
    q = qs[-1]
    for d in reversed(range(max(1,k-e+1), k)):
        while 1:
            if verbose: print(q, d)
            (_q, r) = divmod(q, d)
            if not r:break
            q *= ds.pop()
            if not ds:
                return
        q = _q
        if q == 1:
            if ds[-1] == d+e-1:
                yield (d,d+e-1)
                return
    if verbose: print((k, e, n), (q,d))
    return
    raise Exception((k, e, n), (q,d))


def 枚举冫平方差一暨连乘扌(begin_or_uints=2, /, *, exclude_exp_eq_4=False):
    'kw:exclude_exp_eq_4# [:等式乊四数连乘]:goto'
    check_type_is(bool, exclude_exp_eq_4)
    from seed.math.floor_ceil import floor_kth_root_
    from seed.math.floor_ceil import floor_log2
    from seed.math.II import II
    if type(begin_or_uints) is int:
        begin = begin_or_uints
        uints = count(begin)
    else:
        uints = begin_or_uints
    uints
    for u in uints:
        check_int_ge(2, u)
        n = u**2 -1
        q = n
        #bug:for e in range(2, floor_log2(n)):
        #   !! miss:(5, 4, (1, 4), 24)
        for e in range(2, 1+floor_log2(n)):
            (q, r) = divmod(q, e)
            if r:break
            if e == 2:continue
            if exclude_exp_eq_4 and e == 4:continue
            k = floor_kth_root_(e, n)
            #if k == 1:continue
            for a, b in 尝试找到连乘附近于(k, e, n):
                assert b==a+e-1
                assert n == II(range(a,b+1)), ((k, e, n), (a, b))
                yield (u, e, (a,b), n)

def 枚举冫平方差一暨连乘乊连乘长度扌(may_exp_or_exps=3, may_max1_u=None, /, *, exclude_exp_eq_4=False):
    'kw:exclude_exp_eq_4# [:等式乊四数连乘]:goto'
    check_type_is(bool, exclude_exp_eq_4)
    from math import factorial
    from seed.math.floor_ceil import floor_sqrt
    from seed.math.floor_ceil import floor_log2
    from seed.math.factor_pint_as_pefect_power_ import is_square_
    from seed.math.II import II
    if may_max1_u is None:
        def is_u_ok_(u, /):
            return True
        def is_n_ok_(u, /):
            return True
    else:
        max1_u = may_max1_u
        check_int_ge(2, max1_u)
        is_u_ok_ = max1_u.__gt__
        max_u = max1_u -1
        max1_n = max_u**2
        is_n_ok_ = max1_n.__gt__
    is_u_ok_
    is_n_ok_
    if may_exp_or_exps is None:
        if may_max1_u is None:raise TypeError
        #bug:exps = range(3, 1+floor_log2(max1_u))
        exps = range(3, 1+floor_log2(max1_n))
        exp_or_exps = exps
    else:
        exp_or_exps = may_exp_or_exps
    exp_or_exps
    if type(exp_or_exps) is int:
        exp = exp_or_exps
        exps = [exp]
    else:
        exps = exp_or_exps
    exps
    T = type(exps)
    inc0 = T in (range, count) #but-wait:[step>0]
    prev_e = 1
    II_leE = 1
    b_set0 = False
    inc1 = False
    for e in exps:
        #if 0b0001:print(e)
        check_int_ge(2, e)
        if not b_set0 and not prev_e == 1:
            step_gt0 = e > prev_e
            b_set0 = True
            inc1 = inc0 and step_gt0
        if e == prev_e+1:
            II_leE *= e
        else:
            II_leE = factorial(e)
        II_leE
        prev_e = e
        n = II_leE
        # [n == e! == II([1..=e])]
        if e == 2:continue
        if exclude_exp_eq_4 and e == 4:continue
        for a, _b in zip(count(1), count(e+1)):
            # [a+e == _b]
            # [n == II([a..=_b-1])]
            if not is_n_ok_(n):break
            # [is_n_ok_(n)]
            n1 = n+1
            if is_square_(n1):
                u = floor_sqrt(n1)
                assert is_u_ok_(u)
                b = _b-1
                assert b==a+e-1
                assert n == II(range(a,b+1)), ((may_max1_u, e, n), (a, b))
                yield (u, e, (a,b), n)
            # !! [n == II([a..=_b-1])]
            n //= a
            n *= _b
            # [n == II([a+1..=_b])]
        # [not is_n_ok_(n)]
        if inc1 and n is II_leE:
            # [e increasing]
            # [n == factorial(e)]
            # !! [not is_n_ok_(n)]
            break

__all__
from script.有趣的等式牜连乘等于平方差一 import 枚举冫平方差一暨连乘扌, 枚举冫平方差一暨连乘乊连乘长度扌
from script.有趣的等式牜连乘等于平方差一 import *
