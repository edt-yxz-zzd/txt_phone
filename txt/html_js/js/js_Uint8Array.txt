js_Uint8Array




Uint8Array

    Web technology for developersJavaScriptJavaScript referenceStandard built-in objectsUint8Array

On this Page

    Constructor
    Properties
    Methods
    Uint8Array prototype
    Examples
    Specifications
    Browser compatibility
    See also

The Uint8Array typed array represents an array of 8-bit unsigned integers. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).
Constructor

Uint8Array()
    Creates a new Uint8Array object.

Properties

Uint8Array.BYTES_PER_ELEMENT
    Returns a number value of the element size. 1 in the case of an Uint8Array.
Uint8Array.length
    Static length property whose value is 3. For the actual length (number of elements), see Uint8Array.prototype.length.
Uint8Array.name
    Returns the string value of the constructor name. In the case of the Uint8Array type: "Uint8Array".
Uint8Array.prototype
    Prototype for the TypedArray objects.

Methods

Uint8Array.from()
    Creates a new Uint8Array from an array-like or iterable object. See also Array.from().
Uint8Array.of()
    Creates a new Uint8Array with a variable number of arguments. See also Array.of().

Uint8Array prototype

All Uint8Array objects inherit from %TypedArray%.prototype.
Properties

Uint8Array.prototype.constructor
    Returns the function that created an instance's prototype. This is the Uint8Array constructor by default.
Uint8Array.prototype.buffer Read only
    Returns the ArrayBuffer referenced by the Uint8Array Fixed at construction time and thus read only.
Uint8Array.prototype.byteLength Read only
    Returns the length (in bytes) of the Uint8Array. Fixed at construction time and thus read only.
Uint8Array.prototype.byteOffset Read only
    Returns the offset (in bytes) of the Uint8Array from the start of its ArrayBuffer. Fixed at construction time and thus read only.
Uint8Array.prototype.length Read only
    Returns the number of elements held in the Uint8Array. Fixed at construction time and thus read only.

Methods

Uint8Array.prototype.copyWithin()
    Copies a sequence of array elements within the array. See also Array.prototype.copyWithin().
Uint8Array.prototype.entries()
    Returns a new Array Iterator object that contains the key/value pairs for each index in the array. See also Array.prototype.entries().
Uint8Array.prototype.every()
    Tests whether all elements in the array pass the test provided by a function. See also Array.prototype.every().
Uint8Array.prototype.fill()
    Fills all the elements of an array from a start index to an end index with a static value. See also Array.prototype.fill().
Uint8Array.prototype.filter()
    Creates a new array with all of the elements of this array for which the provided filtering function returns true. See also Array.prototype.filter().
Uint8Array.prototype.find()
    Returns the found value in the array, if an element in the array satisfies the provided testing function or undefined if not found. See also Array.prototype.find().
Uint8Array.prototype.findIndex()
    Returns the found index in the array, if an element in the array satisfies the provided testing function or -1 if not found. See also Array.prototype.findIndex().
Uint8Array.prototype.forEach()
    Calls a function for each element in the array. See also Array.prototype.forEach().
Uint8Array.prototype.includes()
    Determines whether a typed array includes a certain element, returning true or false as appropriate. See also Array.prototype.includes().
Uint8Array.prototype.indexOf()
    Returns the first (least) index of an element within the array equal to the specified value, or -1 if none is found. See also Array.prototype.indexOf().
Uint8Array.prototype.join()
    Joins all elements of an array into a string. See also Array.prototype.join().
Uint8Array.prototype.keys()
    Returns a new Array Iterator that contains the keys for each index in the array. See also Array.prototype.keys().
Uint8Array.prototype.lastIndexOf()
    Returns the last (greatest) index of an element within the array equal to the specified value, or -1 if none is found. See also Array.prototype.lastIndexOf().
Uint8Array.prototype.map()
    Creates a new array with the results of calling a provided function on every element in this array. See also Array.prototype.map().
Uint8Array.prototype.reduce()
    Apply a function against an accumulator and each value of the array (from left-to-right) as to reduce it to a single value. See also Array.prototype.reduce().
Uint8Array.prototype.reduceRight()
    Apply a function against an accumulator and each value of the array (from right-to-left) as to reduce it to a single value. See also Array.prototype.reduceRight().
Uint8Array.prototype.reverse()
    Reverses the order of the elements of an array — the first becomes the last, and the last becomes the first. See also Array.prototype.reverse().
Uint8Array.prototype.set()
    Stores multiple values in the typed array, reading input values from a specified array.
Uint8Array.prototype.slice()
    Extracts a section of an array and returns a new array. See also Array.prototype.slice().
Uint8Array.prototype.some()
    Returns true if at least one element in this array satisfies the provided testing function. See also Array.prototype.some().
Uint8Array.prototype.sort()
    Sorts the elements of an array in place and returns the array. See also Array.prototype.sort().
Uint8Array.prototype.subarray()
    Returns a new Uint8Array from the given start and end element index.
Uint8Array.prototype.values()
    Returns a new Array Iterator object that contains the values for each index in the array. See also Array.prototype.values().
Uint8Array.prototype.toLocaleString()
    Returns a localized string representing the array and its elements. See also Array.prototype.toLocaleString().
Uint8Array.prototype.toString()
    Returns a string representing the array and its elements. See also Array.prototype.toString().
Uint8Array.prototype[@@iterator]()
    Returns a new Array Iterator object that contains the values for each index in the array.

Examples

Different ways to create a Uint8Array:

// From a length
var uint8 = new Uint8Array(2);
uint8[0] = 42;
console.log(uint8[0]); // 42
console.log(uint8.length); // 2
console.log(uint8.BYTES_PER_ELEMENT); // 1

// From an array
var arr = new Uint8Array([21,31]);
console.log(arr[1]); // 31

// From another TypedArray
var x = new Uint8Array([21, 31]);
var y = new Uint8Array(x);
console.log(y[0]); // 21

// From an ArrayBuffer
var buffer = new ArrayBuffer(8);
var z = new Uint8Array(buffer, 1, 4);

// From an iterable 
var iterable = function*(){ yield* [1,2,3]; }(); 
var uint8 = new Uint8Array(iterable); 
// Uint8Array[1, 2, 3]

Specifications
Specification
ECMAScript (ECMA-262)
The definition of 'TypedArray constructors' in that specification.
Browser compatibility
Update compatibility data on GitHub
Uint8Array
	Chrome Full support 7
	Edge Full support 12
	Firefox Full support 4
	IE Full support 10
	Opera Full support 11.6
	Safari Full support 5.1
	WebView Android Full support 4
	Chrome Android Full support 18
	Firefox Android Full support 4
	Opera Android Full support 12
	Safari iOS Full support 4.2
	Samsung Internet Android Full support 1.0
	nodejs Full support 0.10
Uint8Array() constructor
	Chrome Full support 7
	Edge Full support 12
	Firefox Full support 4
	IE Full support 10
	Opera Full support 11.6
	Safari Full support 5.1
	WebView Android Full support 4
	Chrome Android Full support 18
	Firefox Android Full support 4
	Opera Android Full support 12
	Safari iOS Full support 4.2
	Samsung Internet Android Full support 1.0
	nodejs Full support 0.10
Thank you!
Report sent
What happens next?

Our team will review your report. Once we verify the information you have supplied we will update this browser compatability table accordingly.
Can I keep track of my report?

You can join the GitHub repository to see updates and commits for this table data:

https://github.com/mdn/browser-compat-data
Tell us what’s wrong with this table

Our goal is to provide accurate, real values for all our compatibility data tables. Notifying MDN of inaccurate data or supplying new data pushes us further towards our goal of providing 100% real values to the developer community.
Thank you for helping.
1Which browsers are affected?
Please select the browser or browsers which are affected.
Chrome
Chrome
Edge
Edge
Firefox
Firefox
Internet Explorer
Internet Explorer
Opera
Opera
Safari
Safari
Android webview
Android webview
Chrome for Android
Chrome for Android
Firefox for Android
Firefox for Android
Opera for Android
Opera for Android
Safari on iOS
Safari on iOS
Samsung Internet
Samsung Internet
Node.js
Node.js
2Which table row is affected?
3Can you provide a brief explanation?
Briefly outline the issue you are highlighting. Minimum 10 and maximum 1,000 characters.
4Do you have any supporting material?
Optional
Browser documentation and release notes are good supporting items to accompany your message. A demo hosted on services like Codepen or JSBin are perfect for providing real examples of your findings.
What are we missing?
Legend

Full support  
    Full support

See also

    JavaScript typed arrays
    ArrayBuffer
    DataView

Metadata

    Last modified: Feb 24, 2020, by MDN contributors

Related Topics

    Standard built-in objects
    TypedArray
    Properties
        TypedArray.BYTES_PER_ELEMENT
        TypedArray.name
        TypedArray.prototype.buffer
        TypedArray.prototype.byteLength
        TypedArray.prototype.byteOffset
        TypedArray.prototype.length
        get TypedArray[@@species]
    Methods
        TypedArray.from()
        TypedArray.of()
        TypedArray.prototype.copyWithin()
        TypedArray.prototype.entries()
        TypedArray.prototype.every()
        TypedArray.prototype.fill()
        TypedArray.prototype.filter()
        TypedArray.prototype.find()
        TypedArray.prototype.findIndex()
        TypedArray.prototype.forEach()
        TypedArray.prototype.includes()
        TypedArray.prototype.indexOf()
        TypedArray.prototype.join()
        TypedArray.prototype.keys()
        TypedArray.prototype.lastIndexOf()
        TypedArray.prototype.map()
        TypedArray.prototype.reduce()
        TypedArray.prototype.reduceRight()
        TypedArray.prototype.reverse()
        TypedArray.prototype.set()
        TypedArray.prototype.slice()
        TypedArray.prototype.some()
        TypedArray.prototype.sort()
        TypedArray.prototype.subarray()
        TypedArray.prototype.toLocaleString()
        TypedArray.prototype.toString()
        TypedArray.prototype.values()
        TypedArray.prototype[@@iterator]()
    Related pages:
    Int8Array
    Uint8Array
    Uint8ClampedArray
    Int16Array
    Uint16Array
    Int32Array
    Uint32Array
    Float32Array
    Float64Array
    BigInt64Array
    BigUint64Array
    Inheritance:
    Function
    Properties
        Function.arguments
        Function.arity
        Function.caller
        Function.displayName
        Function.length
        Function.name
    Methods
        Function.prototype.apply()
        Function.prototype.bind()
        Function.prototype.call()
        Function.prototype.isGenerator()
        Function.prototype.toSource()
        Function.prototype.toString()
    Object
    Properties
        Object.prototype.__count__
        Object.prototype.__noSuchMethod__
        Object.prototype.__parent__
        Object.prototype.__proto__
        Object.prototype.constructor
    Methods
        Object.prototype.__defineGetter__()
        Object.prototype.__defineSetter__()
        Object.prototype.__lookupGetter__()
        Object.prototype.__lookupSetter__()
        Object.prototype.hasOwnProperty()
        Object.prototype.isPrototypeOf()
        Object.prototype.propertyIsEnumerable()
        Object.prototype.toLocaleString()
        Object.prototype.toSource()
        Object.prototype.toString()
        Object.prototype.unwatch()
        Object.prototype.valueOf()
        Object.prototype.watch()
        Object.setPrototypeOf()






