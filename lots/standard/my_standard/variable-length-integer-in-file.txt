unit ~ U

n unit ~ U^n
let 0<=f(n)-1<U^n-1 for n>0 // at least the U^n-1 value will allow us to extend the length
to store f(n)  will use n+1 units or more
f(n) <= f(n+1)
U^n - [f(1)*U^(n-1)+..(f(i+1)-f(i))*U^(n-i)..+f(n)-f(n-1)] > 0



unit = byte ~ 8bits
f(n) = U^n/2^n +..(U/2)^i..+U/2 = (U/2)^(n-1) * U/2 / (U/2-1)
    => 1? 1? .. 0? // ? is 7 bits



1 len ->1 len -> ...1 L -> 0 num
num = n - [2^(L-1)+..+2^1] = n - (2^L-2) >= 0  =>  n < 2^(L+1)-2

    L = 1, 2, 3, 4
2^L-2 = 0, 2, 6, 14...

0 1: // let pre-len = 1
0 0
0 1

2 3 4 5:
1 0 - 0 00 // note len at least 2 so .. store len-2
1 0 - 0 01
1 0 - 0 10
1 0 - 0 11

6 7 8 9 10 11 12 13:
1 1 - 0 000













