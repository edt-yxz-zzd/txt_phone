why using $ dollar at the end of input?


[page 159]
    If, on the other hand, we had not adopted this special acceptance convention, then many context-free languages that are deterministic intuitively would not be deterministic by our definition. One example is L = a* \/ {a^n b^n : n > 1}. A deterministic pushdown automaton cannot both remember how many a's it has seen, in order to check the string of b's that may follow, and at the same time be ready to accept with empty stack in case no b's follow. However, one can easily design a deterministic pushdown automaton accepting L$: If a $ is met while the machine is still accumulating a's, then the input was a string in a*. If this happens, the stack is emptied and the input accepted.


[pre above]
    Deterministic context-free languages are essentially those that are accepted by deterministic pushdown automata. However, for reasons that will become clear very soon, we have to modify the acceptance convention slightly. A language is said to be deterministic context-free if it is recognized by a deterministic pushdown automaton that also has the extra capability of sensing the end of the input string. Formally, we call a language L |<=| S* deterministic context-free if L$ = L(M) for some deterministic pushdown automaton M. Here $ is a new symbol, not in S, which is appended to each input string for the purpose of marking its end.
    Every deterministic context-free language, as just defined, is a context-free language. To see this, suppose a deterministic pushdown automaton M accepts L$. Then a (nondeterministic) pushdown automaton M' that accepts L can be constructed. At any point, M' may "imagine" a $ in the input and jump to a new set of states from which it reads no further input.


