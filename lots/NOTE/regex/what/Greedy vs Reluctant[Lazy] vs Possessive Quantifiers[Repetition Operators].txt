Greedy vs Reluctant[Lazy] vs Possessive Quantifiers[Repetition Operators]

quantifier == repetition operator
    ? * + {len} {min,} {min,max}

greedy quantifiers:
    X* = (?:...|XX|X|)
reluctant quantifiers | lazy quantifiers:
    X*? = (?:|X|XX|...)
possessive quantifiers:
    X*+ = (?:(?:...|XX|X|)(?!X))


file:///D:/software/programming/Java/jdk-8u25-docs-all/docs/api/java/util/regex/Pattern.html
https://www.regular-expressions.info/possessive.html
    Because greediness and laziness change the order in which permutations are tried, they can change the overall regex match.
    However, they do not change the fact that the regex engine will backtrack to try all possible permutations of the regular expression in case no match can be found.

    ======
    Of the regex flavors discussed in this tutorial, possessive quantifiers are supported by JGsoft, Java, and PCRE. That includes languages with regex support based on PCRE such as PHP, Delphi, and R. Ruby supports possessive quantifiers starting with Ruby 1.9, Perl supports them starting with Perl 5.10, and Boost starting with Boost 1.42.

    =====
    The PCRE Open Source Regex Library
        PCRE is short for Perl Compatible Regular Expressions.
