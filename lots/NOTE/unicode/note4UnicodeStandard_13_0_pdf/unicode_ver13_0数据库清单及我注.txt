
e ../../txt_phone/lots/NOTE/unicode/note4UnicodeStandard_13_0_pdf/unicode_ver13_0数据库清单及我注.txt
copy from:
  view ../../txt_phone/lots/NOTE/unicode/note4UnicodeStandard_13_0_pdf/[20220407]list_all_values_of_property.py
######################
######################
######################
######################
######################
######################
[[[[[[[[[
UnicodeStandard-13.0.pdf

[[[tree unicode_13__Unihan
mkdir $my_tmp/out4tree/
cd /storage/emulated/0/0my_files/unzip/e_book/
tree unicode_13__Unihan/ > $my_tmp/out4tree/unicode_13__Unihan.tree.txt
view  /sdcard/0my_files/tmp/out4tree/unicode_13__Unihan.tree.txt
[[
unicode_13__Unihan/
├── Unihan_DictionaryIndices.txt
├── Unihan_DictionaryLikeData.txt
├── Unihan_IRGSources.txt
├── Unihan_NumericValues.txt
├── Unihan_OtherMappings.txt
├── Unihan_RadicalStrokeCounts.txt
├── Unihan_Readings.txt
└── Unihan_Variants.txt

0 directories, 8 files
]]


添加注释:#见下面 感兴趣的、详细信息
[[
unicode_13__Unihan/
├── Unihan_DictionaryIndices.txt
    # 汉字在各字典中的位置/编码(有重码)
    # 行格式: 编码点\t字典名\t\S+( +\S+)*
    #
    # 但 位置信息\S+ 各字典 含义、格式 各不同
    # 编码点 重复: 因为 PK主键 是(编码点,字典名)
    #   Map (编码点,字典名) [定位信息]
    # 一字多定位信息:
    #   U+34B9  kHanYu  10254.060 10254.100
    # 定位信息 重复:甴电 的 kKangXi 定位信息 一样！
    #
    #   U+7534  kKangXi 0759.001
    #   U+7535  kKangXi 0759.001
    # 有重码，意义不大

├── Unihan_DictionaryLikeData.txt
    # 汉字在各仿字典的字库中的编码(字形库/输入法编码方案...，有重码？未知)
    # 行格式:同上

├── Unihan_IRGSources.txt
    # ...来源
├── Unihan_NumericValues.txt
    # 只有73个
    # 已用于生成 DerivedNumericValues.txt
    #       意义不大

├── Unihan_OtherMappings.txt
    # 汉字在各字符集中的编码/加入日期序列号(我猜 无重码)
    #U+344A  kHKSCS  8CF4
    #U+344A  kKPS1   3555
    #U+344A  kTGH    2013:6700
    #
    #但 感觉没什么用？

├── Unihan_RadicalStrokeCounts.txt
    # 汉字的部首与笔画数
    #
    # 有用: 可推导出-部首的笔画数，余下偏旁的笔画数
    #
├── Unihan_Readings.txt
    # 阅读汉字所需的相关信息
    # 诸如：释义，词频，各种形式的注音(普通话/粤语/韩语/越南语) 等等
    #
    # 有用: 释义，词频，普通话拼音
    #   kDefinition
    #   kHanyuPinlu
    #   kHanyuPinyin
    #   kMandarin

└── Unihan_Variants.txt
    # 汉字的各种变体
    # 诸如：简体，繁体，语义变体，专门语义变体，高相似变体，折笔变体
    #
    # 简繁变体，有用
    # 我猜:高相似变体，折笔变体，可用于 规范化
    #
#
0 directories, 8 files
]]


感兴趣的
[[
├── Unihan_RadicalStrokeCounts.txt
├── Unihan_Readings.txt
└── Unihan_Variants.txt
]]


详细信息
[[
├── Unihan_RadicalStrokeCounts.txt
    # 汉字的部首与笔画数
    #
    # 有用: 可推导出-部首的笔画数，余下偏旁的笔画数
    #   但是 有无可能 部首 存在 多个 笔画数不同的变体？
    #       不会，至少 康熙字典部首 是 先按 自身笔画数 归类的。所以 笔画数不同的变体 应该 成为 不同的部首
    #
    #？部分行格式: 编码点\tkRSKangXi\t部首序列号[.]余下偏旁的笔画数
    #       field_1 还有别的 值，但 相应的 field_2 相当复杂，没看明白
    # U+4091    kRSKangXi   111.5
    #
    # 要求 整字笔画数 就需要先知道 几百个 部首 的 笔画数
    # 我猜 C[+]\d+[+]\d+[.]部首的笔画数[.]余下偏旁的笔画数
    # 由此 可计算出 部首的笔画数！
    # ====
    [[
    # ====
    #
    #   /^U+\([0-9A-F]\{4}\)\t.*\nU+\1
    #
    # \.2\.
    # 亗[山-二] 3+2
    # U+4E97    kRSAdobe_Japan1_6   C+21081+7.2.3 C+21081+46.3.2
    # U+4E97    kRSKangXi   7.3

    # ====
    # \.8\.
    # 俳[亻|非] 2+8
    # U+4FF3    kRSAdobe_Japan1_6   C+3334+9.2.8 C+3334+175.8.2
    # U+4FF3    kRSKangXi   9.8
    # ====
    ]]

├── Unihan_Readings.txt
    # 阅读汉字所需的相关信息
    # 诸如：释义，词频，各种形式的注音(普通话/粤语/韩语/越南语) 等等
    #
    # 有用: 释义，词频，普通话拼音
    #   kDefinition
    #   kHanyuPinlu
    #   kHanyuPinyin
    #   kMandarin
    #   ----
    #   kTGHZ2013
    #   kXHC1983
    [[
    ====上:
    U+4E0A  kCantonese  soeng5 soeng6
    U+4E0A  kDefinition top; superior, highest; go up, send up
    U+4E0A  kHangul 상:0E
    U+4E0A  kHanyuPinlu shàng(12308) shang(392)
    U+4E0A  kHanyuPinyin    10005.040:shàng,shǎng
    U+4E0A  kJapaneseKun    UE KAMI NOBORU
    U+4E0A  kJapaneseOn JOU SHOU
    U+4E0A  kKorean SANG
    U+4E0A  kMandarin   shàng
    U+4E0A  kTGHZ2013   326.050:shǎng 326.090:shàng
    U+4E0A  kTang   *zhiɑ̀ng zhiɑ̀ng zhiɑ̌ng
    U+4E0A  kVietnamese thượng
    U+4E0A  kXHC1983    1002.050:shǎng 1002.100:shàng
    ]]


└── Unihan_Variants.txt
    # 汉字的各种变体
    # 诸如：简体，繁体，语义变体，专门语义变体，高相似变体，折笔变体
    #
    # 简繁变体，有用
    # 我猜:高相似变体，折笔变体，可用于 规范化
    #


    [[
    #   kSemanticVariant
    #   kSimplifiedVariant
    #   kSpecializedSemanticVariant
    #   kSpoofingVariant
    #   kTraditionalVariant
    #   kZVariant
    ######################
    # 见下面: reformat__Unihan_Variants_txt.py 及其 输出
    # kZVariant 异体字(同字 不同 形)
    # kSpoofingVariant 形近字(不同字，形相近)(似乎 只列出 常见混淆的形近字，无『未/末』，有『妹/妺』)
    # kSemanticVariant 同义字(不同字 但 同义)
    # kSpecializedSemanticVariant ？专用字？(某些 特定场合下 的 专用字？你您妳)
    # kSimplifiedVariant 简体字
    # kTraditionalVariant 繁体字
    #
    #
    #
    ######################
    ######################
    ###################### old; manually
    #
    # Z - ？折笔？
    # spoof 高仿？缺笔？避讳？错别字？极度相似？
    #   spoof n 诓骗/愚弄/戏弄 v 揶揄/嘲讽
    #   高仿 高仿 [gao1 fang3] /imitation/quality fake/


    #后0x540e/後0x5f8c
    U+540E  kSimplifiedVariant  U+540E
    U+540E  kTraditionalVariant U+540E U+5F8C
    U+5F8C  kSimplifiedVariant  U+540E

    #发0x53d1/發0x767c/髮0x9aee
    U+53D1  kTraditionalVariant U+767C U+9AEE
    U+767C  kSimplifiedVariant  U+53D1
    U+9AEE  kSimplifiedVariant  U+53D1

    髪0x9aea
    奇怪 [not 髪0x9aea <- 髮0x9aee.kSpoofingVariant]



    莫暮？
    北背？
    py -m nn_ns.app.char2name  莫暮北背
    莫暮？83AB 66AE
    北背？5317 80CC
    #无83AB 66AE 5317的变体

    絣背𰬔
    py -m nn_ns.app.char2name  絣背𰬔
    U+7D63  kSimplifiedVariant  U+30B14
    U+7D63  kSpecializedSemanticVariant U+80CC<kFenn
    U+80CC  kSpecializedSemanticVariant U+7D63<kFenn
    U+30B14 kTraditionalVariant U+7D63



    䄺稊
    U+413A  kSemanticVariant    U+7A0A<kMeyerWempe
    U+7A0A  kSemanticVariant    U+413A<kMeyerWempe

    䅉稏
    U+4149  kTraditionalVariant U+7A0F
    U+7A0F  kSimplifiedVariant  U+4149

    炫衒
    U+70AB  kSpecializedSemanticVariant U+8852
    U+8852  kSpecializedSemanticVariant U+70AB


    赿趆
    U+8D7F  kSpoofingVariant    U+8D86
    U+8D86  kSpoofingVariant    U+8D7F
    ====
    赿chí古同“迟”。
    笔顺：一丨一丨一丿丶丿乛一乛
    ====
    趆dī小步快跑。
    笔顺：一丨一丨一丿丶丿乛一乛丶
    ===难道kSpoofingVariant是『形似但无关』的意思？

    䚶訞𫍚
    U+46B6  kSpoofingVariant    U+8A1E
    U+8A1E  kSimplifiedVariant  U+2B35A
    U+8A1E  kSpoofingVariant    U+46B6
    U+2B35A kTraditionalVariant U+8A1E
    ===但『天夭』又不是kSpoofingVariant
    天0x5929/夭0x592d
    靝975D靔9754
    ===
    夭->[不存在]
    ===
    天->天靝
    U+5929  kSemanticVariant    U+975D<kMatthews
    U+975D  kSemanticVariant    U+5929<kMatthews
    ===
    靝tiān见“靔”。
    靔（靝）tiān古同“天”。
    ===有毛病:简繁 无『靝靔』
    ===有毛病:kSemanticVariant有『天靝』，无『天靔』
    ===看来 Unihan_Variants.txt 很不靠谱！


    入人曰日
    入5165人4eba曰66f0日65e5
    ===
    入->[不存在]
    曰->[不存在]
    日->[不存在]
    ===
    人->人亻  #偏旁 也算 字？
    U+4EBA	kSemanticVariant	U+4EBB<kMatthews
    U+4EBB	kSemanticVariant	U+4EBA<kMatthews
    ===入人曰日 非 kSpoofingVariant，说明什么？

凐51d0湮6e6e
U+51D0	kSpoofingVariant	U+6E6E
U+6E6E	kSpoofingVariant	U+51D0
===
凐yīn寒冷的样子。
笔顺：丶一一丨乛丨丨一一丨一
===
湮yān
    埋没：湮灭。湮没。
    淤塞，堵塞：“昔者禹之湮洪水，决江河。”
湮yīn同“洇”。
笔顺：丶丶一一丨乛丨丨一一丨一
===
洇yīn墨水着纸向周围散开：这种纸写字不洇。
===
===两者 确实 不是 同一个字


凑51d1湊6e4a
U+51D1	kSemanticVariant	U+6E4A<kMatthews,kMeyerWempe
U+51D1	kSpoofingVariant	U+6E4A
U+51D1	kTraditionalVariant	U+6E4A
U+6E4A	kSemanticVariant	U+51D1<kMatthews,kMeyerWempe
U+6E4A	kSimplifiedVariant	U+51D1
U+6E4A	kSpoofingVariant	U+51D1
===
凑còu
    聚合：凑钱。凑数。凑合。拼凑。紧凑。
    接近：凑近。往前凑。
    碰，赶，趁：凑巧（碰巧）。
笔顺：丶一一一一丿丶一一丿丶
===
湊còu同“凑”。
笔顺：丶丶一一一一丿丶一一丿丶
===
===两者 竟是 同一个字！？？？
===     身兼3种变体，所以，kSpoofingVariant到底是啥？『髪/髮』不是，『凑/湊』是？？？

view /storage/emulated/0/0my_files/unzip/e_book/unicode_13__Unihan/Unihan_Variants.txt
    view  ../../python3_src/nn_ns/CJK/unicode/ucd_unihan/unihan/parsed_result__of__Unihan_Variants_txt__of_ver13_0.py
    view  ../../python3_src/nn_ns/CJK/unicode/ucd_unihan/unihan/reformat__Unihan_Variants_txt.py

view /storage/emulated/0/0my_files/unzip/e_book/unicode_13__UCD/PropList.txt
    view ../../python3_src/nn_ns/CJK/unicode/ucd_unihan/ucd/parse__PropList_txt.py
    view ../../python3_src/nn_ns/CJK/unicode/ucd_unihan/ucd/parsed_result__of__PropList_txt__of_ver13_0.py

view ../../python3_src/seed/helper/IConfig4load_versioned_repr_txt_file.py
    view ../../python3_src/seed/types/view/RecurView.py
    view ../../python3_src/seed/func_tools/fmapT/TypeBasedFMapT__literal_rebuild.py






[[
发现 非对称！！
k0:㒚-349A->穩-7A69<s1,s10
k0:穩-7A69->㒚-349A<s10
    没有 s1!!!
k2:伷-4F37->胄-80C4<s12
k2:咮-54AE->胄-80C4<s12
k2:胄-80C4->伷-4F37<s12
    # 没有 胄-80C4->咮-54AE

发现 非顺序排列:
k0:㒋-348B->廝-5EDD<s10 厮-53AE<s10
    # 5EDD > 53AE
k2:折-6298->翼-7FFC<s1 拃-62C3<s1
    # 7FFC > 62C3
]]

[[unicode-13.0 版 Unihan_Variants.txt 的 重排版 实例 如下:
py -m nn_ns.CJK.unicode.ucd_unihan.unihan.reformat__Unihan_Variants_txt -i /storage/emulated/0/0my_files/unzip/e_book/unicode_13__Unihan/Unihan_Variants.txt -o $my_tmp/out4py/cjk.reformat__Unihan_Variants_txt.ver13_0.txt
view  ../../python3_src/nn_ns/CJK/unicode/ucd_unihan/unihan/reformat__Unihan_Variants_txt.py
view /storage/emulated/0/0my_files/tmp/out4py/cjk.reformat__Unihan_Variants_txt.ver13_0.txt
也没节省多少空间！
    du -h /storage/emulated/0/0my_files/tmp/out4py/cjk.reformat__Unihan_Variants_txt.ver13_0.txt
    404K
    du -h /storage/emulated/0/0my_files/unzip/e_book/unicode_13__Unihan/Unihan_Variants.txt
    604K
#{
#k0=kSemanticVariant
#k1=kSimplifiedVariant
#k2=kSpecializedSemanticVariant
#k3=kSpoofingVariant
#k4=kTraditionalVariant
#k5=kZVariant
#}
...
#k0=kSemanticVariant
#{
...
k0:一-4E00->弌-5F0C<s7,s10,s12 壹-58F9<s7,s10,s12
k0:七-4E03->柒-67D2<s7,s10,s12
k0:万-4E07->卍-534D<s1 萬-842C<s7,s10,s12
k0:三-4E09->叁-53C1<s7,s10,s12
k0:与-4E0E->與-8207<s10,s12
k0:丐-4E10->匃-5303<s10
... # 同义字？？
#}
...
#k2=kSpecializedSemanticVariant
#{
...
k2:一-4E00->壹-58F9
k2:七-4E03->柒-67D2<s1
k2:三-4E09->叁-53C1<s1
...
k2:二-4E8C->貳-8CB3
...
k2:你-4F60->妳-59B3 您-60A8 祢-7962 袮-88AE
... #某些 义项/用途/使用场景 等同？？专用字？
#}
...
#k3=kSpoofingVariant
#{
...
k3:䚶-46B6->訞-8A1E
k3:䱅-4C45->鮇-9B87
...
k3:妹-59B9->妺-59BA
k3:妺-59BA->妹-59B9
k3:幐-5E50->㬺-3B3A
k3:抹-62B9->抺-62BA
k3:抺-62BA->抹-62B9
...#但无『天夭』，无『未末』，所以是 不常见的 形近字(非-变体)？？
#}
...
#k5=kZVariant
#{
...
k5:䱍-4C4D->䱎-4C4E
k5:䱎-4C4E->䱍-4C4D
k5:併-4F75->倂-5002
k5:倂-5002->併-4F75
k5:値-5024->值-503C
k5:值-503C->値-5024
k5:吳-5433->吴-5434 呉-5449
k5:吴-5434->吳-5433 呉-5449
k5:呉-5449->吳-5433 吴-5434
k5:塡-5861->填-586B
k5:填-586B->塡-5861
... #应该是 异体字。
#}

]]






    跥跺
    U+8DE5  kSemanticVariant    U+8DFA<kMatthews
    U+8DE5  kZVariant   U+8DFA
    U+8DFA  kSemanticVariant    U+8DE5<kMatthews
    U+8DFA  kZVariant   U+8DE5


    䱍䱎
    U+4C4D  kZVariant   U+4C4E
    U+4C4E  kZVariant   U+4C4D

    䱍䱎 𬶊𱇥
    U+4C4D  kSimplifiedVariant  U+2CD8A
    U+4C4E  kSimplifiedVariant  U+311E5
    U+2CD8A kTraditionalVariant U+4C4D
    U+311E5 kTraditionalVariant U+4C4E




    䄍蜡蠟
    U+410D  kSemanticVariant    U+8721<kMeyerWempe
    U+410D  kSpecializedSemanticVariant U+8721
    U+8721  kSemanticVariant    U+410D<kMeyerWempe U+881F<kLau,kMatthews
    U+8721  kSimplifiedVariant  U+8721
    U+8721  kSpecializedSemanticVariant U+410D U+881F<kFenn
    U+8721  kTraditionalVariant U+8721 U+881F
    U+881F  kSemanticVariant    U+8721<kLau,kMatthews
    U+881F  kSimplifiedVariant  U+8721
    U+881F  kSpecializedSemanticVariant U+8721<kFenn


    䘑脈脉衇
    U+4611  kSemanticVariant    U+8109<kMeyerWempe
    U+8108  kSemanticVariant    U+8847<kLau,kMatthews U+8109<kLau,kMatthews,kMeyerWempe
    U+8108  kSimplifiedVariant  U+8109
    U+8108  kSpecializedSemanticVariant U+8847<kFenn
    U+8109  kSemanticVariant    U+4611<kMeyerWempe U+8108<kLau,kMatthews,kMeyerWempe U+8847<kLau,kMatthews
    U+8109  kSpecializedSemanticVariant U+8847<kFenn
    U+8109  kTraditionalVariant U+8108
    U+8847  kSemanticVariant    U+8108<kLau,kMatthews U+8109<kLau,kMatthews
    U+8847  kSpecializedSemanticVariant U+8108<kFenn U+8109<kFenn

    ]]


]]

]]]


[[[tree unicode_13__UCD

mkdir $my_tmp/out4tree/
cd /storage/emulated/0/0my_files/unzip/e_book/
tree unicode_13__UCD/ > $my_tmp/out4tree/unicode_13__UCD.tree.txt
view  /sdcard/0my_files/tmp/out4tree/unicode_13__UCD.tree.txt
[[
unicode_13__UCD/
├── ArabicShaping.txt
├── BidiBrackets.txt
├── BidiCharacterTest.txt
├── BidiMirroring.txt
├── BidiTest.txt
├── Blocks.txt
├── CJKRadicals.txt
├── CaseFolding.txt
├── CompositionExclusions.txt
├── DerivedAge.txt
├── DerivedCoreProperties.txt
├── DerivedNormalizationProps.txt
├── EastAsianWidth.txt
├── EmojiSources.txt
├── EquivalentUnifiedIdeograph.txt
├── HangulSyllableType.txt
├── Index.txt
├── IndicPositionalCategory.txt
├── IndicSyllabicCategory.txt
├── Jamo.txt
├── LineBreak.txt
├── NameAliases.txt
├── NamedSequences.txt
├── NamedSequencesProv.txt
├── NamesList.html
├── NamesList.txt
├── NormalizationCorrections.txt
├── NormalizationTest.txt
├── NushuSources.txt
├── PropList.txt
├── PropertyAliases.txt
├── PropertyValueAliases.txt
├── ReadMe.txt
├── ScriptExtensions.txt
├── Scripts.txt
├── SpecialCasing.txt
├── StandardizedVariants.txt
├── TangutSources.txt
├── USourceData.txt
├── USourceGlyphs.pdf
├── USourceRSChart.pdf
├── UnicodeData.txt
├── VerticalOrientation.txt
├── auxiliary
│   ├── GraphemeBreakProperty.txt
│   ├── GraphemeBreakTest.html
│   ├── GraphemeBreakTest.txt
│   ├── LineBreakTest.html
│   ├── LineBreakTest.txt
│   ├── SentenceBreakProperty.txt
│   ├── SentenceBreakTest.html
│   ├── SentenceBreakTest.txt
│   ├── WordBreakProperty.txt
│   ├── WordBreakTest.html
│   └── WordBreakTest.txt
├── emoji
│   ├── ReadMe.txt
│   ├── emoji-data.txt
│   └── emoji-variation-sequences.txt
└── extracted
    ├── DerivedBidiClass.txt
    ├── DerivedBinaryProperties.txt
    ├── DerivedCombiningClass.txt
    ├── DerivedDecompositionType.txt
    ├── DerivedEastAsianWidth.txt
    ├── DerivedGeneralCategory.txt
    ├── DerivedJoiningGroup.txt
    ├── DerivedJoiningType.txt
    ├── DerivedLineBreak.txt
    ├── DerivedName.txt
    ├── DerivedNumericType.txt
    └── DerivedNumericValues.txt

3 directories, 69 files
]]

添加注释:#见下面 感兴趣的、详细信息
[[
unicode_13__UCD/
├── ArabicShaping.txt
    #阿拉伯语相关的
├── BidiBrackets.txt
    #括号/引号【】《》『』
├── BidiCharacterTest.txt
    #测试用的数据
├── BidiMirroring.txt
    #镜像字形
    #3类:精确镜像、[BEST FIT]、不存在镜像字符但系统须提供镜像字形
├── BidiTest.txt
    #测试用的数据
├── Blocks.txt
    #编码空间区域命名
├── CJKRadicals.txt
    #汉字简繁部首及对应汉字
├── CaseFolding.txt
    #大小写规范化
├── CompositionExclusions.txt
    #字符列表#起某种辅助作用
    #见-完全导出的结果: Full_Composition_Exclusion in DerivedNormalizationProps.txt
├── DerivedAge.txt
    #编码点被赋值其时的Unicode版本
    #从 预留区 被赋值 为 字符/非字符/私用
├── DerivedCoreProperties.txt
    #派生的核心属性
├── DerivedNormalizationProps.txt
    #派生的规范属性
    #一堆过气弃用属性
├── EastAsianWidth.txt
    #东亚字符宽度种类
    #"A", "F", "H", "N", "Na", "W"
├── EmojiSources.txt
    #表情符号来源于哪些手机商字符集的哪些编码点？日本Shift-JIS中手机带来的符号
├── EquivalentUnifiedIdeograph.txt
    #偏旁部首笔画的近似等价的汉字
    #[1..] -> [0..1] #即：主表 多对一，没有近似等价汉字的 则 列在 最后
├── HangulSyllableType.txt
    #韩文音节类型
    #对 韩文字母 进行归类，大概是：声母/元音字母/尾音字母/声母元音字母/声母元音尾音字母
├── Index.txt
    #索引？似乎是 名/别名 映射到 字符 或 编码区首字符
├── IndicPositionalCategory.txt
    #印度语相关的
├── IndicSyllabicCategory.txt
    #印度语相关的
├── Jamo.txt
    #定义韩文音节字母的简称(ASCII)
├── LineBreak.txt
    #辅助属性，用于某个规范里定义的算法
├── NameAliases.txt
    #字符的别名(多个，并且 标注:更正/简称/常见名/...)
├── NamedSequences.txt
    # 已命名的组合成标志符号的字符串
    # 比如：手机井号键标志-->井号+外接圆
├── NamedSequencesProv.txt
    # 暂定部分NamedSequences-provisional
├── NamesList.html
├── NamesList.txt
    #字符的正式名称以及部分别名
    #仅作资讯参考用，供人阅读，不应当用程序解析提取信息！
├── NormalizationCorrections.txt
    #小小的更正表
├── NormalizationTest.txt
    #测试用的数据
├── NushuSources.txt
    # 某编码区字符的来源
    # 不知道是啥
    1B170..1B2FF; Nushu
├── PropList.txt
    #各个属性名的拥有者字符列表
    # 属性名 -> [编码区]
    # 全都是 真值属性！
    #   列出 即为 Yes!!!
├── PropertyAliases.txt
    #属性名的别名
    #第一个是 短名/简称/花名，第二个是 长名/正式名，后续其他别名
├── PropertyValueAliases.txt
    #各个属性的属性值的别名
    #第一个是 属性名的短名，第二个是 属性值的短名/简称/花名，第三个是 属性值的长名/正式名，后续其他属性值的别名
    #例外:Canonical_Combining_Class 在 属性名的短名 之后 多插入了个 整数(似乎 唯一)
├── ReadMe.txt
├── ScriptExtensions.txt
    #字符到所有使用它的手写体的映射
    #char.Script_Extensions :: {语言名}#集合<手写体名>
├── Scripts.txt
    #字符到它的最主要手写体的映射
    #   至少有3个特殊值: Unknown/Common/Inherited
├── SpecialCasing.txt
    #长度增加或上下文敏感的大小写转换
├── StandardizedVariants.txt
    #变体转义序列
    #俩字符: 本原字符+变体选择符(fe0[0-2]|180[b-d])
    #不含 ideographic variation sequences(Unihan)、emoji-variation-sequences.txt
├── TangutSources.txt
    # 某编码区字符的来源
    # 西夏文？
    17000..187FF; Tangut
    18800..18AFF; Tangut Components
    18D00..18D8F; Tangut Supplement
├── USourceData.txt
    #汉字U源(UTC/UCI/UK)的数据
    #U源编码点;Unicode编码状态;Unicode编码点;?奇怪好像不是:部首序号-偏旁笔画数?;虚拟康熙字典位置;可选IDS分解序列;来源;注释
├── USourceGlyphs.pdf
    #U来源 汉字字形
├── USourceRSChart.pdf
    #U来源 汉字 的 部首偏旁笔画数索引
    #表一 列出 1~17笔 的 所有214个 部首，并 一一编号
    #表二 部首 依编号排序，下列 所属汉字 按 偏旁 的 笔画数 归类，并 一一编号。
├── UnicodeData.txt
    #并无注释
    #？似乎是自动生成的？
    #见下面./extracted/... 各自说明自己派生自哪个field
├── VerticalOrientation.txt
    #竖排字形与横排字形的关系
    #反正 汉字 不变 (U-Upright)
├── auxiliary
│   ├── GraphemeBreakProperty.txt
        #字素相关，没多少东西，应该不重要
        #比如：音节分解类型...
│   ├── GraphemeBreakTest.html
│   ├── GraphemeBreakTest.txt
│   ├── LineBreakTest.html
│   ├── LineBreakTest.txt
│   ├── SentenceBreakProperty.txt
        #诸如：换行，分隔，空格，大写，小写 等等
│   ├── SentenceBreakTest.html
│   ├── SentenceBreakTest.txt
│   ├── WordBreakProperty.txt
        #诸如：引号，中间字母，中间数字 等等
│   ├── WordBreakTest.html
│   └── WordBreakTest.txt
├── emoji
│   ├── ReadMe.txt
│   ├── emoji-data.txt
        #6个表情符号相关的真值属性
│   └── emoji-variation-sequences.txt
        #表情符号的变体转义序列
        #俩字符: 本原字符+变体选择符(fe0[e-f])
        # FE0E-text style
        # FE0F-emoji style
└── extracted
    #以下 皆 先按 属性值 归类，同属性值内部再按 编码区 排序
    #   例外: DerivedName.txt 并非如此，而是 全局直接按 编码区 排序
    #   边缘: DerivedBinaryProperties 也算，列出来 就是，若有多个属性名，则 各属性名 各排各的，多个真值属性 与 单属性名多属性值 相比，区别 在于 前者 各聚集地 编码区 交叠，而 后者 互斥。
    #
    #0-based field
    #
    ├── DerivedBidiClass.txt
        #双向
        #基本都是 L (从左向右)，不少1属性值才1字符，多一点的10个字符以下...
        # Bidi_Class
        〪〪〪# <<==UCD::UnicodeData.txt::field_4
    ├── DerivedBinaryProperties.txt
        #只有1个属性:Bidi_Mirrored，545字符
        #镜像
        # Bidi_Mirrored
        〪〪〪# <<==UCD::UnicodeData.txt::field_9
    ├── DerivedCombiningClass.txt
        #组合
        # 诸如：交叠，在上方，在右下方，在下方两次...
        # Canonical_Combining_Class
        〪〪〪# <<==UCD::UnicodeData.txt::field_3
    ├── DerivedDecompositionType.txt
        #分解
        # 诸如：带圆圈的，带方圈的，上角标...
        # Decomposition_Type
        〪〪〪# <<==UCD::UnicodeData.txt::field_5
    ├── DerivedEastAsianWidth.txt
        #宽度
        # 诸如：中立，歧义，全角，半角，宽的，窄的
        #按 属性值 归类
        # default=Neutral (N)
        # East_Asian_Width
        〪〪〪# <<==UCD::EastAsianWidth.txt::field_1
        〪〪〪# xxx没有对应的<-->UCD::UnicodeData.txt::field_?
    ├── DerivedGeneralCategory.txt
        #分类
        #按 属性值 归类
        # General_Category
        〪〪〪# <-->UCD::UnicodeData.txt::field_2
    ├── DerivedJoiningGroup.txt
        #阿拉伯语相关的
        # Joining_Group
        〪〪〪# <<==UCD::ArabicShaping.txt::field_3
    ├── DerivedJoiningType.txt
        #阿拉伯语相关的
        # Joining_Type
        〪〪〪# <<==UCD::ArabicShaping.txt::描述
    ├── DerivedLineBreak.txt
        # Line_Break
        〪〪〪# <<==无说明
        〪〪〪# 并非提取自 UCD::UnicodeData.txt
        #   因 U+0028.Line_Break=Open_Punctuation(OP)
        #   而 OP不在『0028;LEFT PARENTHESIS;Ps;0;ON;;;;;Y;OPENING PARENTHESIS;;;;』中
    ├── DerivedName.txt
        # Name
        〪〪〪# <<== 来源有多个
        # 行格式: 编码点/编码区 ; 正式名的模版
        # 正式名 := 正式名.replace('*', 补零至长度为四或六(hex(编码点).upper()))
    ├── DerivedNumericType.txt
        # Numeric_Type
        〪〪〪# <<== 来源有多个
        #
        # Decimal, Digit, Numeric, None
        # 如何区别这些属性值？
        #   见下面 推测
    └── DerivedNumericValues.txt
        # 诸如：-1/2，万亿(兆)，...
        # Numeric_Value
        〪〪〪# <<== 来源有多个
        #
        #按 数值大小 归类 排序
        #格式: 编码点; 浮点数; ; 分数
        #  浮点数 当真 毫无意义！

3 directories, 69 files
]]

感兴趣的
[[
├── Blocks.txt
    # 搜索编码区的区名？CJK/Ideographic/Radicals/Strokes/Bopomofo
    # 但有很多 未赋值 字符
    #   检查 字符的正式名？
├── ScriptExtensions.txt
    # Set 中文相关字符 #<<== [Han <- char.Script_Extensions]
├── Scripts.txt
    # Set 中文相关字符 #<<== [Han == char.Script]

├── PropertyAliases.txt
    # (Map 属性任意名 属性花名, Map 属性花名 属性正式名)
├── PropertyValueAliases.txt
    # Map 属性正式名 (Map 属性值任意名 属性值花名, Map 属性值花名 属性值正式名)
├── PropList.txt
    # Map 真值属性的正式名 [编码区]
    #   哪些编码区 赋值 Yes
    #   比如：真值属性:Unified_Ideograph
    #   例外：真值属性:Bidi_Mirrored@DerivedBinaryProperties.txt
    #   view /storage/emulated/0/0my_files/unzip/e_book/unicode_13__UCD/PropList.txt
    #   view /storage/emulated/0/0my_files/unzip/e_book/unicode_13__UCD/PropertyValueAliases.txt

├── EastAsianWidth.txt
        #
        # 可用以下2文件 实现: __THIS__.py -i east_asian_width category
    ├── DerivedEastAsianWidth.txt
    ├── DerivedGeneralCategory.txt
        # Map 属性值 [编码区]
        # 或<==> [(编码区, 属性值)]

├── CJKRadicals.txt
├── EquivalentUnifiedIdeograph.txt
    #Map 偏旁部首 (Maybe 笔画的近似等价的汉字)
    #或<==> (Set 偏旁部首, Map 笔画的近似等价的汉字 Set 偏旁部首)


├── BidiBrackets.txt
    # (Map 起字符 讫字符, Map 讫字符 起字符)
├── BidiMirroring.txt
    # (Map 字符 镜像字符, Map 字符 近似镜像字符)

├── NamedSequences.txt
    #组合！
├── StandardizedVariants.txt
    #看看有无汉字变体序列化


    ├── DerivedNumericType.txt
    └── DerivedNumericValues.txt
        #Map 字符 有理数 #正负分数
        #或 Map 字符 (整数分子, 正整数分母)
]]

详细信息
[[
├── BidiBrackets.txt
    #括号【】《》『』
    #gc=Ps/Pe 不包含 Pi/Pf #py::unicodedata::category
    #且bc=ON #py::unicodedata::bidirectional
    #且Bidi_Mirrored=Y #py::unicodedata::mirrored=1
    #且...#镜像字符...
    ====
    py -m nn_ns.app.char2name  【】《》『』
    ====common
    ,'category': Ps/Pe
        #Punctuation open/close
    ,'east_asian_width': 'W'
    ,'mirrored': 1
    ,'bidirectional': 'ON'
    ====diff
    ,'name': 'LEFT/RIGHT BLACK LENTICULAR BRACKET'
        【】3010..3011
    ,'name': 'LEFT/RIGHT DOUBLE ANGLE BRACKET'
        《》300a..300b
    ,'name': 'LEFT/RIGHT WHITE CORNER BRACKET'
        『』300e..300f
    ====

├── CJKRadicals.txt
    #汉字简繁部首及对应汉字
    # 2F00..2FDF; Kangxi Radicals
    # 2E80..2EFF; CJK Radicals Supplement
    # vim: i^v u hhhh
    1; 2F00; 4E00
    2; 2F01; 4E28
    ...
    ...
    90; 2F59; 723F
        #⽙/爿:
        #部首/对应汉字
        #不带 单引号 的是 Kangxi Radicals
        #这是 主次序
        # 繁体部首/康熙字典
    90'; 2EA6; 4E2C
        #⺦/丬:
        # 带单引号 的是 CJK Radicals Supplement
        # 简体部首
        # 这是 附加的，对应于 繁体部首
    120; 2F77; 7CF8
        #⽷/糸:si
    120'; 2EB0; 7E9F
        #⺰/纟:si
        ??糹7CF9
    121; 2F78; 7F36
        #⽸
    ...
    ...
    214; 2FD5; 9FA0
    # EOF

├── CaseFolding.txt
    #大小写规范化
    #C/S/F/T
    #C类/common 的 规范化 是 通用的
    #S类/simple 虽然 也是 单字符变换，但似乎是 输出的字符 属于F类
    #F类/full 输出 字符串/长度增加
    #T类/土耳其？ 特定语言 不用管

├── DerivedCoreProperties.txt
    #派生的核心属性
    ====
    #数学/字母(含汉字)
    #可作标识首字母ID_Start/可作标识后续字母ID_Continue
    #NFKx不变的可作标识首字母XID_Start/NFKx不变的可作标识后续字母XID_Continue
    #默认可忽略的
    #小写/大写/带大小写的Cased/大小写可忽略/小写化会改变/大写化会改变/首字母大写化会改变/规范值的大小写规范化会改变/大小写规范化会改变/
    #字素！#图形字符？/记号/标志？Grapheme_Base/Grapheme_Extend/Grapheme_Link(deprecated)
    #

├── PropList.txt
[[list property_name
py -m nn_ns.CJK.unicode.ucd_unihan.ucd.parse__PropList_txt   -i /storage/emulated/0/0my_files/unzip/e_book/unicode_13__UCD/PropList.txt  --show_property_names_only

ASCII_Hex_Digit
Bidi_Control
Dash
Deprecated
Diacritic
Extender
Hex_Digit
Hyphen
IDS_Binary_Operator
IDS_Trinary_Operator
Ideographic
Join_Control
Logical_Order_Exception
Noncharacter_Code_Point
Other_Alphabetic
Other_Default_Ignorable_Code_Point
Other_Grapheme_Extend
Other_ID_Continue
Other_ID_Start
Other_Lowercase
Other_Math
Other_Uppercase
Pattern_Syntax
Pattern_White_Space
Prepended_Concatenation_Mark
Quotation_Mark
Radical
Regional_Indicator
Sentence_Terminal
Soft_Dotted
Terminal_Punctuation
Unified_Ideograph
Variation_Selector
White_Space

]]
感兴趣的:
    IDS_Binary_Operator
    IDS_Trinary_Operator
    Ideographic
    Radical
    Sentence_Terminal
    Terminal_Punctuation
    Unified_Ideograph
    White_Space


├── EastAsianWidth.txt
    #东亚字符宽度种类
    #"A", "F", "H", "N", "Na", "W"
    ====
    #见下面:UCD::PropertyValueAliases.txt
        A-Ambiguous
        F-Fullwidth
        H-Halfwidth
        N-Neutral #缺省值
        Na-Narrow
        W-Wide
    #见下面:UCD::EastAsianWidth.txt
    #见下面:UCD::DerivedEastAsianWidth-13.0.0.txt
    ====

├── NamedSequences.txt
    # 已命名的组合成标志符号的字符串
    # 比如：手机井号键标志-->井号+外接圆
    #
    # KEYCAP NUMBER SIGN;0023 FE0F 20E3
    # 0023 === '#'
    # FE0F <- (0xfe00, 0xfe10) gc=Mn
    #   Mn = Mark, nonspacing
    #️⃣ 20E3 <- (0x20e2, 0x20e5) gc=Me
    #   Me = Mark, enclosing
    #

├── Scripts.txt
    #字符到它的最主要手写体的映射
    #   至少有3个特殊值: Unknown/Common/Inherited
    #
    #  不知成立与否:???[[char.Script =!= Unknown/Common/Inherited]-->>[char.Script <- char.Script_Extensions]]???
    #  似乎成立: [[char.Script_Extensions not default][1==len char.Script_Extensions]-->>[char.Script==Common/Inherited]]
    ====对比
    char.Script default = Unknown (Zzzz)
    char.Script_Extensions default = char.Script
    --
    Scripts.txt vs ScriptExtensions.txt
        长名 vs 短名
            Han vs Hani #短名 反而更长
            Bopomofo vs Bopo

    ---Scripts.txt
    302A..302D    ; Inherited # Mn   [4] IDEOGRAPHIC LEVEL TONE MARK..IDEOGRAPHIC ENTERING TONE MARK
    0300..036F    ; Inherited # Mn [112] COMBINING GRAVE ACCENT..COMBINING LATIN SMALL LETTER X
    ---ScriptExtensions.txt
    302A..302D    ; Bopo Hani # Mn   [4] IDEOGRAPHIC LEVEL TONE MARK..IDEOGRAPHIC ENTERING TONE MARK
    0363..036F    ; Latn # Mn  [13] COMBINING LATIN SMALL LETTER A..COMBINING LATIN SMALL LETTER X
    0300..0362 #无显式定义

    ---Scripts.txt
    3006          ; Common # Lo       IDEOGRAPHIC CLOSING MARK
    1CF7          ; Common # Mc       VEDIC SIGN ATIKRAMA
    3001..3003    ; Common # Po   [3] IDEOGRAPHIC COMMA..DITTO MARK
    ---ScriptExtensions.txt
    3006          ; Hani # Lo       IDEOGRAPHIC CLOSING MARK
    1CF7          ; Beng # Mc       VEDIC SIGN ATIKRAMA
    3001..3002    ; Bopo Hang Hani Hira Kana Yiii # Po   [2] IDEOGRAPHIC COMMA..IDEOGRAPHIC FULL STOP
        #顿号,句号:、。
        #『，』:FF0C # Po         FULLWIDTH COMMA
        # 比 3003 多个 Yiii
    3003          ; Bopo Hang Hani Hira Kana # Po       DITTO MARK
        #『同前符号』:〃#重复书写？

    ---Scripts.txt
    02EA..02EB    ; Bopomofo # Sk   [2] MODIFIER LETTER YIN DEPARTING TONE MARK..MODIFIER LETTER YANG DEPARTING TONE MARK
    3105..312F    ; Bopomofo # Lo  [43] BOPOMOFO LETTER B..BOPOMOFO LETTER NN
    31A0..31BF    ; Bopomofo # Lo  [32] BOPOMOFO LETTER BU..BOPOMOFO LETTER AH
    ---ScriptExtensions.txt
    02EA..02EB #无显式定义
    3105..312F #无显式定义
    31A0..31BF #无显式定义
    ====

├── DerivedNumericType.txt
    # Numeric_Type
    〪〪〪# <<== 来源有多个
    #
    [[
    # Decimal, Digit, Numeric, None
    # 如何区别这些属性值？
    # Decimal: 用作10进制记数系统，我猜至少有2个要求:
    #   1. 编码区 10字符-连续-不多不少10个 #适合编程？
    #       离散的，像『零一二...』不行
    #   2. 10字符 相应的 数值是 [0..9]
    #       从1开始的，像多数的序号『⑴⑵⑶⑷⑸⑹⑺⑻⑼⑽』不行
    #   查了一下，只有一处 符合这两点，但 却不是 Decimal，下标字符:
    #       2080..2089    ; Digit # No  [10] SUBSCRIPT ZERO..SUBSCRIPT NINE
    #
    # 相应的，Digit 只需 值<-[0..9]
    对比 同一编码区 分裂成 两部分:
        U+2468 vs U+2469
        Digit vs Numeric
        9 vs 10
    ---UnicodeData.txt
    2468;CIRCLED DIGIT NINE;No;0;ON;<circle> 0039;;9;9;N;;;;;
    2469;CIRCLED NUMBER TEN;No;0;ON;<circle> 0031 0030;;;10;N;;;;;
    ---DerivedNumericType.txt
    2460..2468    ; Digit # No   [9] CIRCLED DIGIT ONE..CIRCLED DIGIT NINE
    2469..2473    ; Numeric # No  [11] CIRCLED NUMBER TEN..CIRCLED NUMBER TWENTY
    ]]



]]

]]]

[[[UCD::Blocks.txt
源自于问题:
    有没有 UCD::各区域名称？即：{block_name:[first..last]}
    命名区域+按属性值次级分类
    比: 直接 全局按属性值分类 要更适合 人工手动操作。

view /storage/emulated/0/0my_files/unzip/e_book/unicode_13__UCD/Blocks.txt
    for CJK:
        see:UCD::Scripts.txt::Han

# Blocks-13.0.0.txt
#
# Format:
# Start Code..End Code; Block Name
#
# Property: Block
# @missing: 0000..10FFFF; No_Block
#
4E00..9FFF; CJK Unified Ideographs
3400..4DBF; CJK Unified Ideographs Extension A
20000..2A6DF; CJK Unified Ideographs Extension B
2A700..2B73F; CJK Unified Ideographs Extension C
2B740..2B81F; CJK Unified Ideographs Extension D
2B820..2CEAF; CJK Unified Ideographs Extension E
2CEB0..2EBEF; CJK Unified Ideographs Extension F
30000..3134F; CJK Unified Ideographs Extension G


3000..303F; CJK Symbols and Punctuation
31C0..31EF; CJK Strokes
2F00..2FDF; Kangxi Radicals
2E80..2EFF; CJK Radicals Supplement
3100..312F; Bopomofo
31A0..31BF; Bopomofo Extended
4DC0..4DFF; Yijing Hexagram Symbols
2FF0..2FFF; Ideographic Description Characters
3200..32FF; Enclosed CJK Letters and Months
1F200..1F2FF; Enclosed Ideographic Supplement
??10080..100FF; Linear B Ideograms

16FE0..16FFF; Ideographic Symbols and Punctuation
    #16FF0..16FF1  ; Han # Mc   [2] VIETNAMESE ALTERNATE READING MARK CA..VIETNAMESE ALTERNATE READING MARK NHAY

3300..33FF; CJK Compatibility
F900..FAFF; CJK Compatibility Ideographs
FE30..FE4F; CJK Compatibility Forms
2F800..2FA1F; CJK Compatibility Ideographs Supplement



D800..DB7F; High Surrogates
DB80..DBFF; High Private Use Surrogates
DC00..DFFF; Low Surrogates
E000..F8FF; Private Use Area

F0000..FFFFF; Supplementary Private Use Area-A
100000..10FFFF; Supplementary Private Use Area-B
# EOF


]]]


[[[UCD::Scripts.txt::Han
版本不同！见上面

汉字相关 手写字符 共94204 #9万

view /storage/emulated/0/0my_files/unzip/e_book/unicode_13__UCD/Scripts.txt

# Scripts-13.0.0.txt

# Property: Script

#  All code points not explicitly listed for Script
#  have the value Unknown (Zzzz).

# @missing: 0000..10FFFF; Unknown

# ================================================


# ================================================

2E80..2E99    ; Han # So  [26] CJK RADICAL REPEAT..CJK RADICAL RAP
2E9B..2EF3    ; Han # So  [89] CJK RADICAL CHOKE..CJK RADICAL C-SIMPLIFIED TURTLE
2F00..2FD5    ; Han # So [214] KANGXI RADICAL ONE..KANGXI RADICAL FLUTE
3005          ; Han # Lm       IDEOGRAPHIC ITERATION MARK
3007          ; Han # Nl       IDEOGRAPHIC NUMBER ZERO
3021..3029    ; Han # Nl   [9] HANGZHOU NUMERAL ONE..HANGZHOU NUMERAL NINE
3038..303A    ; Han # Nl   [3] HANGZHOU NUMERAL TEN..HANGZHOU NUMERAL THIRTY
303B          ; Han # Lm       VERTICAL IDEOGRAPHIC ITERATION MARK
3400..4DBF    ; Han # Lo [6592] CJK UNIFIED IDEOGRAPH-3400..CJK UNIFIED IDEOGRAPH-4DBF
4E00..9FFC    ; Han # Lo [20989] CJK UNIFIED IDEOGRAPH-4E00..CJK UNIFIED IDEOGRAPH-9FFC
F900..FA6D    ; Han # Lo [366] CJK COMPATIBILITY IDEOGRAPH-F900..CJK COMPATIBILITY IDEOGRAPH-FA6D
FA70..FAD9    ; Han # Lo [106] CJK COMPATIBILITY IDEOGRAPH-FA70..CJK COMPATIBILITY IDEOGRAPH-FAD9
16FF0..16FF1  ; Han # Mc   [2] VIETNAMESE ALTERNATE READING MARK CA..VIETNAMESE ALTERNATE READING MARK NHAY
20000..2A6DD  ; Han # Lo [42718] CJK UNIFIED IDEOGRAPH-20000..CJK UNIFIED IDEOGRAPH-2A6DD
2A700..2B734  ; Han # Lo [4149] CJK UNIFIED IDEOGRAPH-2A700..CJK UNIFIED IDEOGRAPH-2B734
2B740..2B81D  ; Han # Lo [222] CJK UNIFIED IDEOGRAPH-2B740..CJK UNIFIED IDEOGRAPH-2B81D
2B820..2CEA1  ; Han # Lo [5762] CJK UNIFIED IDEOGRAPH-2B820..CJK UNIFIED IDEOGRAPH-2CEA1
2CEB0..2EBE0  ; Han # Lo [7473] CJK UNIFIED IDEOGRAPH-2CEB0..CJK UNIFIED IDEOGRAPH-2EBE0
2F800..2FA1D  ; Han # Lo [542] CJK COMPATIBILITY IDEOGRAPH-2F800..CJK COMPATIBILITY IDEOGRAPH-2FA1D
30000..3134A  ; Han # Lo [4939] CJK UNIFIED IDEOGRAPH-30000..CJK UNIFIED IDEOGRAPH-3134A

# Total code points: 94204

# ================================================
]]]


[[[UCD::EastAsianWidth.txt
版本不同！见上面
view /storage/emulated/0/0my_files/unzip/e_book/unicode_13__UCD/EastAsianWidth.txt
[[
# EastAsianWidth-13.0.0.txt
# East_Asian_Width Property
# @missing: 0000..10FFFF; N
# The format is two fields separated by a semicolon.
# Field 0: Unicode code point value or range of code point values
# Field 1: East_Asian_Width property, consisting of one of the following values:
#         "A", "F", "H", "N", "Na", "W"
#  - All code points, assigned or unassigned, that are not listed
#      explicitly are given the value "N".
#  - The unassigned code points in the following blocks default to "W":
#         CJK Unified Ideographs Extension A: U+3400..U+4DBF
#         CJK Unified Ideographs:             U+4E00..U+9FFF
#         CJK Compatibility Ideographs:       U+F900..U+FAFF
#  - All undesignated code points in Planes 2 and 3, whether inside or
#      outside of allocated blocks, default to "W":
#         Plane 2:                            U+20000..U+2FFFD
#         Plane 3:                            U+30000..U+3FFFD
#
]]


grep<H>
    # only U+20A9 except (U+FF00–U+FFEF)
    #
grep<Na>
    # only U+2985 U+2986 except (U+0000–U+00EF)(U+27E6–U+27ED)
    #
grep<F>
    # only U+3000 except (U+FF00–U+FFEF)
    # 奇怪！这里 <128个，然而 搜出 83万多个！py._count__list_all_values_of_:('F', 836706)
    #
grep<>
    # only U+ except (U+–U+)
    #

grep ';F' /storage/emulated/0/0my_files/unzip/e_book/unicode_13__UCD/EastAsianWidth.txt > $my_tmp/out4grep/EastAsianWidth-F.txt
view  /sdcard/0my_files/tmp/out4grep/EastAsianWidth-F.txt
3000;F           # Zs         IDEOGRAPHIC SPACE
FF01..FF03;F     # Po     [3] FULLWIDTH EXCLAMATION MARK..FULLWIDTH NUMBER SIGN
FF04;F           # Sc         FULLWIDTH DOLLAR SIGN
FF05..FF07;F     # Po     [3] FULLWIDTH PERCENT SIGN..FULLWIDTH APOSTROPHE
FF08;F           # Ps         FULLWIDTH LEFT PARENTHESIS
FF09;F           # Pe         FULLWIDTH RIGHT PARENTHESIS
FF0A;F           # Po         FULLWIDTH ASTERISK
FF0B;F           # Sm         FULLWIDTH PLUS SIGN
FF0C;F           # Po         FULLWIDTH COMMA
FF0D;F           # Pd         FULLWIDTH HYPHEN-MINUS
FF0E..FF0F;F     # Po     [2] FULLWIDTH FULL STOP..FULLWIDTH SOLIDUS
FF10..FF19;F     # Nd    [10] FULLWIDTH DIGIT ZERO..FULLWIDTH DIGIT NINE
FF1A..FF1B;F     # Po     [2] FULLWIDTH COLON..FULLWIDTH SEMICOLON
FF1C..FF1E;F     # Sm     [3] FULLWIDTH LESS-THAN SIGN..FULLWIDTH GREATER-THAN SIGN
FF1F..FF20;F     # Po     [2] FULLWIDTH QUESTION MARK..FULLWIDTH COMMERCIAL AT
FF21..FF3A;F     # Lu    [26] FULLWIDTH LATIN CAPITAL LETTER A..FULLWIDTH LATIN CAPITAL LETTER Z
FF3B;F           # Ps         FULLWIDTH LEFT SQUARE BRACKET
FF3C;F           # Po         FULLWIDTH REVERSE SOLIDUS
FF3D;F           # Pe         FULLWIDTH RIGHT SQUARE BRACKET
FF3E;F           # Sk         FULLWIDTH CIRCUMFLEX ACCENT
FF3F;F           # Pc         FULLWIDTH LOW LINE
FF40;F           # Sk         FULLWIDTH GRAVE ACCENT
FF41..FF5A;F     # Ll    [26] FULLWIDTH LATIN SMALL LETTER A..FULLWIDTH LATIN SMALL LETTER Z
FF5B;F           # Ps         FULLWIDTH LEFT CURLY BRACKET
FF5C;F           # Sm         FULLWIDTH VERTICAL LINE
FF5D;F           # Pe         FULLWIDTH RIGHT CURLY BRACKET
FF5E;F           # Sm         FULLWIDTH TILDE
FF5F;F           # Ps         FULLWIDTH LEFT WHITE PARENTHESIS
FF60;F           # Pe         FULLWIDTH RIGHT WHITE PARENTHESIS
FFE0..FFE1;F     # Sc     [2] FULLWIDTH CENT SIGN..FULLWIDTH POUND SIGN
FFE2;F           # Sm         FULLWIDTH NOT SIGN
FFE3;F           # Sk         FULLWIDTH MACRON
FFE4;F           # So         FULLWIDTH BROKEN BAR
FFE5..FFE6;F     # Sc     [2] FULLWIDTH YEN SIGN..FULLWIDTH WON SIGN



grep ';Na' /storage/emulated/0/0my_files/unzip/e_book/unicode_13__UCD/EastAsianWidth.txt
0020;Na          # Zs         SPACE
0021..0023;Na    # Po     [3] EXCLAMATION MARK..NUMBER SIGN
0024;Na          # Sc         DOLLAR SIGN
0025..0027;Na    # Po     [3] PERCENT SIGN..APOSTROPHE
0028;Na          # Ps         LEFT PARENTHESIS
0029;Na          # Pe         RIGHT PARENTHESIS
002A;Na          # Po         ASTERISK
002B;Na          # Sm         PLUS SIGN
002C;Na          # Po         COMMA
002D;Na          # Pd         HYPHEN-MINUS
002E..002F;Na    # Po     [2] FULL STOP..SOLIDUS
0030..0039;Na    # Nd    [10] DIGIT ZERO..DIGIT NINE
003A..003B;Na    # Po     [2] COLON..SEMICOLON
003C..003E;Na    # Sm     [3] LESS-THAN SIGN..GREATER-THAN SIGN
003F..0040;Na    # Po     [2] QUESTION MARK..COMMERCIAL AT
0041..005A;Na    # Lu    [26] LATIN CAPITAL LETTER A..LATIN CAPITAL LETTER Z
005B;Na          # Ps         LEFT SQUARE BRACKET
005C;Na          # Po         REVERSE SOLIDUS
005D;Na          # Pe         RIGHT SQUARE BRACKET
005E;Na          # Sk         CIRCUMFLEX ACCENT
005F;Na          # Pc         LOW LINE
0060;Na          # Sk         GRAVE ACCENT
0061..007A;Na    # Ll    [26] LATIN SMALL LETTER A..LATIN SMALL LETTER Z
007B;Na          # Ps         LEFT CURLY BRACKET
007C;Na          # Sm         VERTICAL LINE
007D;Na          # Pe         RIGHT CURLY BRACKET
007E;Na          # Sm         TILDE
00A2..00A3;Na    # Sc     [2] CENT SIGN..POUND SIGN
00A5;Na          # Sc         YEN SIGN
00A6;Na          # So         BROKEN BAR
00AC;Na          # Sm         NOT SIGN
00AF;Na          # Sk         MACRON
27E6;Na          # Ps         MATHEMATICAL LEFT WHITE SQUARE BRACKET
27E7;Na          # Pe         MATHEMATICAL RIGHT WHITE SQUARE BRACKET
27E8;Na          # Ps         MATHEMATICAL LEFT ANGLE BRACKET
27E9;Na          # Pe         MATHEMATICAL RIGHT ANGLE BRACKET
27EA;Na          # Ps         MATHEMATICAL LEFT DOUBLE ANGLE BRACKET
27EB;Na          # Pe         MATHEMATICAL RIGHT DOUBLE ANGLE BRACKET
27EC;Na          # Ps         MATHEMATICAL LEFT WHITE TORTOISE SHELL BRACKET
27ED;Na          # Pe         MATHEMATICAL RIGHT WHITE TORTOISE SHELL BRACKET
2985;Na          # Ps         LEFT WHITE PARENTHESIS
2986;Na          # Pe         RIGHT WHITE PARENTHESIS


grep ';H' /storage/emulated/0/0my_files/unzip/e_book/unicode_13__UCD/EastAsianWidth.txt
20A9;H           # Sc         WON SIGN
FF61;H           # Po         HALFWIDTH IDEOGRAPHIC FULL STOP
FF62;H           # Ps         HALFWIDTH LEFT CORNER BRACKET
FF63;H           # Pe         HALFWIDTH RIGHT CORNER BRACKET
FF64..FF65;H     # Po     [2] HALFWIDTH IDEOGRAPHIC COMMA..HALFWIDTH KATAKANA MIDDLE DOT
FF66..FF6F;H     # Lo    [10] HALFWIDTH KATAKANA LETTER WO..HALFWIDTH KATAKANA LETTER SMALL TU
FF70;H           # Lm         HALFWIDTH KATAKANA-HIRAGANA PROLONGED SOUND MARK
FF71..FF9D;H     # Lo    [45] HALFWIDTH KATAKANA LETTER A..HALFWIDTH KATAKANA LETTER N
FF9E..FF9F;H     # Lm     [2] HALFWIDTH KATAKANA VOICED SOUND MARK..HALFWIDTH KATAKANA SEMI-VOICED SOUND MARK
FFA0..FFBE;H     # Lo    [31] HALFWIDTH HANGUL FILLER..HALFWIDTH HANGUL LETTER HIEUH
FFC2..FFC7;H     # Lo     [6] HALFWIDTH HANGUL LETTER A..HALFWIDTH HANGUL LETTER E
FFCA..FFCF;H     # Lo     [6] HALFWIDTH HANGUL LETTER YEO..HALFWIDTH HANGUL LETTER OE
FFD2..FFD7;H     # Lo     [6] HALFWIDTH HANGUL LETTER YO..HALFWIDTH HANGUL LETTER YU
FFDA..FFDC;H     # Lo     [3] HALFWIDTH HANGUL LETTER EU..HALFWIDTH HANGUL LETTER I
FFE8;H           # So         HALFWIDTH FORMS LIGHT VERTICAL
FFE9..FFEC;H     # Sm     [4] HALFWIDTH LEFTWARDS ARROW..HALFWIDTH DOWNWARDS ARROW
FFED..FFEE;H     # So     [2] HALFWIDTH BLACK SQUARE..HALFWIDTH WHITE CIRCLE
]]]



]]]]]]]]]
