
javascript HTML escaping, not javascript URI escaping

https://stackoverflow.com/questions/24816/escaping-html-strings-with-jquery
===========================================
var escaped = new Option(unescaped).innerHTML;
#This does not escape quotes.

==========================================
$("<pre>").text("<&>").html()
    ==>> "&lt;&amp;&gt;
#This isn't cross browser safe if your string has whitespaces and \n \r \t chars in it
#This does NOT escape quotes and double quotes which is bad!

// before:
// <div class="someClass">text</div>
var someHtmlString = "<script>alert('hi!');</script>";

// set a DIV's text:
$("div.someClass").text(someHtmlString);
// after:
// <div class="someClass">&lt;script&gt;alert('hi!');&lt;/script&gt;</div>

// get the text in a string:
var escaped = $("<div>").text(someHtmlString).html();
// value:
// &lt;script&gt;alert('hi!');&lt;/script&gt;


==========================================
# jQuery
var entityMap = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  "'": '&#39;',
  '/': '&#x2F;',
  '`': '&#x60;',
  '=': '&#x3D;'
};

function escapeHtml (string) {
  return String(string).replace(/[&<>"'`=\/]/g, function (s) {
    return entityMap[s];
  });
}



===========================================
//prepare variables
var DOMtext = document.createTextNode("test");
var DOMnative = document.createElement("span");
DOMnative.appendChild(DOMtext);

//main work for each case
function HTMLescape(html){
  DOMtext.nodeValue = html;
  return DOMnative.innerHTML
}

===========================================
# Underscore.string lib
_.str.escapeHTML('<div>Blah blah blah</div>')

===========================================
===========================================

