
PEP483

type =[def]= Map value methods
    value set
    methods allowed per value

    # why not consider methods forbidden??
    # e.g. can not inherit some two classes;
    #   I think it assumes we can define arbitrary many ABCs(e.g. Sequence vs MutableSequence).


subtype relation:
    # strong criterion
    sub <<: super
    sub.keys() <= super.keys()
    for v,fs in sub.items():
        fs >= super[v]


    By this definition:
        Every type is a subtype of itself.
        The set of values becomes smaller in the process of subtyping, while the set of functions becomes larger.
nominal subtyping vs structural subtyping vs gradual typing
Any can be considered a type that has all values and all methods.
    Combined with the definition of subtyping above, this places Any partially at the top (it has all values) and bottom (it has all methods) of the type hierarchy.
