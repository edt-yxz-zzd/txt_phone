
site-packages-directory


29.13. site -- Site-specific configuration hook

It starts by constructing up to four directories from a head and a tail part. For the head part, it uses sys.prefix and sys.exec_prefix; empty heads are skipped. For the tail part, it uses the empty string and then lib/site-packages (on Windows) or lib/pythonX.Y/site-packages (on Unix and Macintosh). For each of the distinct head-tail combinations, it sees if it refers to an existing directory, and if so, adds it to sys.path and also inspects the newly added path for configuration files.

Changed in version 3.5: Support for the “site-python” directory has been removed.

If a file named “pyvenv.cfg” exists one directory above sys.executable, sys.prefix and sys.exec_prefix are set to that directory and it is also checked for site-packages (sys.base_prefix and sys.base_exec_prefix will always be the “real” prefixes of the Python installation). If “pyvenv.cfg” (a bootstrap configuration file) contains the key “include-system-site-packages” set to anything other than “false” (case-insensitive), the system-level prefixes will still also be searched for site-packages; otherwise they won’t.

A path configuration file is a file whose name has the form name.pth and exists in one of the four directories mentioned above; its contents are additional items (one per line) to be added to sys.path. Non-existing items are never added to sys.path, and no check is made that the item refers to a directory rather than a file. No item is added to sys.path more than once. Blank lines and lines beginning with # are skipped. Lines starting with import (followed by space or tab) are executed.

# path configuration file
*.pth
    encoding = locale.getpreferredencoding(False)
    cannot recognize encoding declaration: -*- coding: utf-8 -*-
    spaces are OK; should not in inside "" and ''


https://stackoverflow.com/questions/122327/how-do-i-find-the-location-of-my-python-site-packages-directory
############################# best!!!
from distutils.sysconfig import get_python_lib
get_python_lib() == r'C:\Python36\Lib\site-packages'

python -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())"
C:\Python36\Lib\site-packages

################################
[sitepackage] = [path for path in site.getsitepackages() if os.path.basename(path) == 'site-packages']
################################
>>> import site
>>> site.getsitepackages()
['C:\\Python36', 'C:\\Python36\\lib\\site-packages']
>>> site.getusersitepackages()
'C:\\Users\\Administrator\\AppData\\Roaming\\Python\\Python36\\site-packages'
>>> print(_)
C:\Users\Administrator\AppData\Roaming\Python\Python36\site-packages
>>> site.getuserbase()
'C:\\Users\\Administrator\\AppData\\Roaming\\Python'
###############################
>python -c "import site; print(site.getsitepackages())"
['C:\\Python36', 'C:\\Python36\\lib\\site-packages']

>py -m site
sys.path = [
    'E:\\my_data\\my_record_txt\\NOTE\\Python\\howto', # cwd
    'C:\\Python36\\python36.zip',
    'C:\\Python36\\DLLs',
    'C:\\Python36\\lib',
    'C:\\Python36',
    'C:\\Python36\\lib\\site-packages',
    'C:\\Python36\\lib\\site-packages\\xart-0.2.0-py3.6.egg',
    'E:\\my_data\\program_source\\python3_src',
    'E:\\my_data\\program_source\\github\\edt-yxz-zzd\\python3_src',
    'C:\\Python36\\lib\\site-packages\\win32',
    'C:\\Python36\\lib\\site-packages\\win32\\lib',
    'C:\\Python36\\lib\\site-packages\\Pythonwin',
]
USER_BASE: 'C:\\Users\\Administrator\\AppData\\Roaming\\Python' (exists)
USER_SITE: 'C:\\Users\\Administrator\\AppData\\Roaming\\Python\\Python36\\site-packages' (doesn't exist)
ENABLE_USER_SITE: True

