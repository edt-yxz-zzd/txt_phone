
1) if the class or one of its base class donot define __slots__,
    then __slots__ donot work
2) base classes that define nonempty __slots__ should be single inheritance.
    otherwise "TypeError: multiple bases have instance lay-out conflict"

how?
    all abstractclasses(e.g. mixins) should define empty __slots__
    use a metaclass to rename __slots__ to '__later_slots__'
        and all class instances be abstractclass
        until "the_concrete_class" is a base class
        for concrete_class: collect __later_slots__ and define __slots__
    not allow concrete_class inherit another concrete_class except "object"
        or only support single instance for concrete_class


