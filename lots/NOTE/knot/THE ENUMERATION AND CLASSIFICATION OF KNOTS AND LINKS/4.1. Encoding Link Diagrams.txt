4.1. Encoding Link Diagrams. 

see [4.2. Generating All Alternating Diagrams]::[alternating]


[DT sequence of a knot diagram]
    n crossings ==>> 2n edges (crossing to crosing) 
    // ==>> n overpass (undercrossing to undercrossing)
    any basepoint on any edge // 2n possible choices
    any orientation // 2 possible choices for knot
    // knot ==>> 4n possibles ==>> minimal DT sequence
    
    label edges while travel around from basepoint // label from 1
    label each crossing by labels of the two income edges
        Jordan Curve Theorem ==>> one is odd, one is even
    sorted crossings by odd edge labels
    signed the even label with -1 if the even label edge is over-strand
        // ==>> [alternating diagram] <--> [positve all even labels]
    
    DT sequence ::= signed even labels // total n

[drawback about DT sequence of knot diagram]
    1) can not recover the diagram from the sequence.
        [up to reflection and isotopy, for prime knot]:
            diagram has no nugatory crossings <--> DT sequence

    2) most 2n sequences do not correspond to any knot, i.e. not valid DT sequences

[DT sequence of a link diagram]
    choosing an orientation and basepoint for each component
    some choices produce the desired even-odd pairing at each crossing
    inserting vertical bars (or 0's) into the sequence to separate components.
    
    [nonsplit link]
        choose next component:
            choose one with small label from crossings with only one income label
        orient next component:
            s.t. the above crossing is right handed.
        ==>> total 4n possibles as knot
        
[drawback about DT sequence of link diagram]
    [up to reflection and isotopy, for prime nonsplit link]:
        reduced diagram <--> DT sequence




















