
SPQR_tree
    biconnected undirected multi-graph without self-loop -> SPQR_tree
    so, need not consider:
        # forbidden by connected
            isolated vertex

        # forbidden by biconnected
            cut vertex
            ??self-loop??

    XEdge = Edge | VirtualEdge
    split component :: Set XEdge
        # split components are not necessarily unique.
        # each Edge inside 1 split component
        # each VirtualEdge inside 2 split components
        #       so, VirtualEdge can be used to identify SPQR_tree edge

        # G_S2P2 =[def]= (V={a,b}, E=[(a,b),(a,b)])

        # G != G_S2P2
            P3 = three multiple edges (triple bond)
            S3 = a cycle of length three (triangle)
            R = a triconnected simple graph

        # G == G_S2P2
            Q = S2 = P2 = 2 real multiple edges

    3-connected component :: Set XEdge
        # triconnected components are unique
        S,R,P,Q :: Set XEdge
        len(S/R/P) >= 3
        len(Q) == 2
        P = maximal sets of multiple edges (bonds)
        S = maximal simple cycles (polygons)
    tree edge of SPQR_tree
        # no S-S, P-P, Q-?
        S-P
        S-R

        P-R

        R-R



