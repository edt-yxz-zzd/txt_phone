
grammar
let target = ast/compiled_result
different concrete syntax ==>> target <: complete_target
different by:
    to ease tokenization
        1) line comment -> /* */
            or no tail comment or comment whole line or no comment at all
            even no white lines
        2) indent block -> { ... }
        3) logical line be one physical line
        4) each token seperated by spaces # so grammar.split() is ok
    to ease parse
        assume bug-free
        limited-version of the complete_target

# grammar <: language; defined by same target_ast
# let suffix = (style, limited, version); distinguish front-end;
# if omit suffix, then refer to the standard complete version
# XXX YYY ZZZ <- language; XXX <- grammar
# <language-suffix>_in_<grammar-suffix>
# <sentence>_in_<language-suffix>
grammarXXX
    XXX_in_XXX_limited
    XXX_in_XXX
    YYY_in_XXX
    ZZZ-suffix_in_XXX



