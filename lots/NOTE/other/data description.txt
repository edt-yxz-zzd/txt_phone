
-- like Haskell, but we use unboxed type more often

how to present the result from decoding a binary file?
// how to describe or parse or decode a binary file? too difficult.

each object is a unboxed object in file, i.e. occupy bytes begin from its address
except the whole file object (root object), each object is a subobject of other, like C struct
object may be refered as a boxed object by its address, like those in Haskell data


each object refered we assign it a name or id
    but address (i.e. file_offset = tell()) cannot be used as an id
        object and its base class object or first data member share the same address
        zero length object and its follow object share same address
            e.g. {array_len, [a], b} ==>> {0, [], b}

union
    one object at one time ==>> Haskell style, i.e. a constructor with one unboxed argument
    multi-objects ==>> set of constructors each with one boxed argument

