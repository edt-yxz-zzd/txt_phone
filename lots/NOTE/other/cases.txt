
seq_equal_switch a:
    0 -> expr
    1 -> ...
    -- if (a==0) expr else if (a==1) ...
    -- lookup a [(0,expr), ...]
hashable_switch a:
    0 -> expr
    1 -> ...
    -- lookup a {0:expr, 1:...}
binsearch_switch a:
    0 -> expr
    ...
    -- lookup a $ Map.fromList [(0,expr),...]
    -- index a $ array [(0,expr),...]
case a of
    -- pattern match
    [] -> ...
    _ -> ...


f :: Eq a => a -> b
f a = seq_equal_switch a of
    ...
g :: Ord a => a -> b
g a = binsearch_switch a of
    ...
h :: Hash a => a -> b
h a = hashable_switch a of
    ...
mix :: Eq a | Ord a | Hash a => a -> b
mix a = (prefer Hash | Ord | Eq) => switch a of
    ...




