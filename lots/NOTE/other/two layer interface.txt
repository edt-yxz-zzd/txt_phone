

usr <- I <---[adapter]---< O <- pkg

tech:
    I == O
        eg. DLL
            __all__
            Interface
    since if I /= O, we have to write <adapter> each time there comes new connection!
    

natural:
    I /= O
        eg. import XXX (a, b, c) -- only subset imported
            iterator_treats<Iter> -- an adapter
            type class in Haskell -- adapter
                fmap
                len <- size/length
                member <- member/elem/contains
            role <- class
                -- in diff view/domain, a class plays diff roles
                -- one role may be diff classes
                role:
                    main() in C; main in Haskell
                    S/start_symbol in CFG

            
    since I < O  : any a in I s.t. a in O -- require less
          I < O+ : exist a in I s.t. a not in O -- convenient alias/function
          
          I\O <--[convenient]-- O



