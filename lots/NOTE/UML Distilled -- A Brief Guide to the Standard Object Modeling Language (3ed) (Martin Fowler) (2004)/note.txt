UML Distilled -- A Brief Guide to the Standard Object Modeling Language (3ed) (Martin Fowler) (2004)



[page 67] Aggregation and Composition
    Aggregation
        properties/attributes/getor/query * [shared|owned]
    Composition
        The "no sharing" rule is the key to composition.
        component class is designed so that it can have only one other class as its owner.

[page 73] Reference Objects and Value Objects
    Reference
        identity/address
        change one place ==>> visible to everywhere
        disallow copies
    Value
        have to write an equality test operator
        should be immutable 


[page 93] Package Aspects
    aspect1 * aspect2 <==> for pkg1 pkg1' <- aspect1, pkg2 <- aspect2:
                                pkg1 `depends` pkg1' --> pkg<pkg1,pkg2> `depends` pkg<pkg1',pkg2>


[page 99]
    UseCases = [UseCase]
    UseCase = Map Goat [Scenario]
    This user goal is the key to use cases : A use case is a set of scenarios tied together by a common user goal .
    A scenario is a sequence of steps describing an interaction between a user and a system.
    
    -- diagram v.s. content
    -- xxxxxxx      !!!!!!!
    What the UML describes is a use case diagram, which shows how use cases relate to each other.
    But almost all the value of use cases lies in the content, and the diagram is of rather limited value.

    [page 100] Content of a Use Case
        main success scenario
        extensions, describing them in terms of variations an the main success scenario.
