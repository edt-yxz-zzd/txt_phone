note - 音符
octave - 八度
    half step - 1/12 octave
    whole step - 1/6 octave
    pitch - 音频；音阶
        -  C# D#  F# G# A#
        - C  D  EF  G  A  BC
        12 = 5 + 7 = (2+3)+(3+4)
        - I will call them black5s and white7s
    pitch of a note - raise / lower by "#/b"
    sharp - "#"; double sharp "x"
    flat - "b"; double flat "bb"
    natural - "彑" - after major_scale key signature, to reset
    enharmonic - "C#"="Db"; "B#"="C"
    MC - middle C on piano
    from dictionary[vibration]
        Middle C is equivalent to 256 vibrations per second.
        中央C音相当於每秒钟振动256次.
        -- pitch of MC = 2^8 Hz ??
staff - 五线谱？ - I will name them line[1..5] from bottom up
    line notes - "o" on line
    space notes - "o" on space between lines
    how to record black5s?? "#o" or "bo" on line/space
        "#o" v.s. "C#"
    clef - 在五线谱的开头，标识谱线所对应的音阶
        treble clef - G clef - mark line2 as min{G|G > MC} - mark line0 as MC
            line notes - EGBDF - Every Good Boy Does Fine.
            space notes - FACE - face
            -- E..F v.s. F..E
        bass clef - F clef - mark line4 as max{F|F > MC} - mark line6 as MC
            line notes - GBDFA - Good Boy Does Fine Always.
            space notes - ACEG - All Cows Eat Grass.
            -- G..A v.s. A..G
    grand staff == treble clef + bass clef
        ledger line = treble clef line0 | bass clef line6 ==>> MC

---------
rhythmic value - 时长，单位“音符”
    measure/bar - 节
    bar line
        end bar line
    beat - 拍
    time_eq a b = rhythmic_value(a) == rhythmic_value(b)
    time signature - "N/D" - at the beginning of staff just after the clef
        <==> [one measure `time_eq` N beats][one note `time_eq` D beats]
        ==>> [one measure `time_eq` N/D note]
        e.g. "4/4" - four quarter-note beats per measure
        count [1..D] per note -- D clocks per note
        common time ::= "4/4" or written as "C"
    note length ::= [one note `time_eq` note length beats]
        == the "D" in time signature
    quarter note - black/fill-in notehead + long stem
    half note - white/empty notehead + long stem
    whole note - white/empty notehead
    eighth note - black/fill-in notehead + long stem + (flag | beam)
        beam - flag join with other's flag
            what is the difference between flag and beam version??
    sixteenth note - black/fill-in notehead + long stem + (double flag | double beam)
    downbeat - first half of a beat
    upbeat - second half of a beat

    rest - silent
    quarter/half/white/eighth/sixteenth rest


    dotted note = note + dot
        rhythmic_value(dotted(x)) = rhythmic_value(x)*1.5
    tied note = same pitch joined by a curved line
        - means later notes are not played separately.
        - the first note lasts for all the length


----------
major scale - 大调式？
    WWHWWWH -- 2 1 3 1 - the pattern I think
        H - half step
        W - whole step
        7 pitch notes
    C major_scale == C D E F G A B -> C
                  --  W W H W W W  H
    F major_scale == F G A Bb C D E -> F
                  --  W W H  W W W  H
    G major_scale == G A B C D E F# -> G
                  --  W W H W W W   H
    ...
    major_scale degree
        naming:
            1) [1..7]:
            2) solfeg: DO RE MI FA SO LA TI -> DO
            3) classical:
                DO tonic
                    W
                RE supertonic
                    W
                MI mediant
                    H
                FA subdominant
                    W
                SO dominant
                    W
                LA submediant
                    W
                TI leading tonic
                    H
                DO (tonic)

    major_scale key signature
        == after clef to indicate to use which major_scale
        == raise/lower all pitches on the whole line which beginswith a key signature
        every major_scale key signature consists of either flats or sharps
            1) flat key signature:
                if >= 2 flats, the -2 flat (horizon) is the major key we are in.
            2) sharp key signature:
                the -1 sharp (last in horizon) + H - 12 is the key we are in.
    accidental
        accidental = flat | sharp | natural
            place on line to affect the remainder of a measure (remain line segment in a measure)
        natural = "彑"
        e.g. "B彑" == the plain old "B"
        place natural on line, will reset remain line segment in a measure

    circle of keys:
        clockwise: iterate (+7 H) x
        [C, C+7H, C+14H, ..] mod 12H == [C,C+7H, C+2H, ..]
        == [C, _, D, _, E, _, F#, _, G#, _, A#, _, C, ..]
        == [C, G, _, A, _, B, _, C#, _, D#, _, F, _, G, ..]
        == [C, G, D, A, E, B, F#, C#, G#, D#, A#, F, C, G, ..]
        == [C, G, D, A, E, B, F#Gb, C#Db, G#Ab, D#Eb, A#Bb, F, C, G, ..]
        == [.., F#Gb, Db, Ab, Eb, Bb, F, C, G, D, A, E, B, F#Gb, ..]
        there is only one note different between immediate neighbors' major_scale.
        == [.., F#Gb(6b), Db(5b), Ab(4b), Eb(3b), Bb(2b), F(1b), C, G(1#), D(2#), A(3#), E(4#), B(5#), F#Gb(6#), ..]
        find major_scale key signature(X):
            e.g.
            E(4#) = C->G->D->A->E
                G-1H = Gb = F#
                D-1H = Db = C#
                A-1H = Ab = G#
                E-1H = Eb = D#
                major_scale_key_signature(E) = [F#, C#, G#, D#]
            major_scale_key_signature(X(n#)) = [F#, C#, G#, D#, A#, F][:n]
            Eb(3b) = Eb->Bb->F->C
                 Ab->Eb->Bb->F
                major_scale_key_signature(Eb) = [Ab, Eb, Bb]
            major_scale_key_signature(X(nb)) = [B, Gb, Db, Ab, Eb, Bb][-n:]
                -- if Gb(6b) ==>> [B,..,Bb], two B! error
                -- show Gb(6#) instead of Gb(6b)






interval
    interval about pitches
    major interval - interval between major_scale degrees
        (C->B) is a major 7th
        perfect interval - which occur prominently in nature's overtune series
            == major interval 4th/5th/8th  +  k*7
            == (5H/7H/12H) + k*12H
    altered intervals:
    minor interval
        (X->Y) is a major Xth -->> (X->Yb) is a minor interval
    deminished interval
        (X->Y) is a major Xth -->> (X->Ybb) is a deminished interval
        (X->Y) is a minor/perfect Xth -->> (X->Yb) is a deminished interval
    argumented interval
        (X->Y) is a major/perfect Xth -->> (X->Y#) is a argumented interval



--
data Music = Music [(Pitch, BeatsLastFor)]
data BeatsLastFor = BeatsLastFor PositiveRational
    -- BeatsLastFor: how many beats to last for??
    -- but how long per beat?
    --      e.g. 120 bpm
    --      bpm - 每分钟拍数 beats per minute?
data Pitch = Pitch Integer
    -- +1 == "#", -1 == "b"
    -- Integer or Integer with radix 12
    -- 0 == MC-1H; 1 = MC; i.e. 0 is B
    -- freq pitch = (freq 0) * 2^(pitch/12)
    -- 2^(1/12) = 1.0594630943592952645618252949463
    -- assume freq 1 == 2^8 Hz
    --      freq 0 = freq 1 / 2^(1/12) = 241.6318240465135351403297681069 Hz
--
data Staff = Staff Clef TimeSignature [Measure] EndBarLine
    -- Note includes major_scale key signature
data Measure = Measure [Note] BarLine
data Clef = Clef Integer
    -- offset the pitch
    -- final_pitch == note.pitch + clef.offset
data TimeSignature = TimeSignature {measureBeats :: PInt, wholeNoteBeats :: PInt}
    -- N beats measure / D beats whole note
    -- foreach Measure, sum of its WholeNotesLastFor == one measure == N/D
data BarLine = BarLine
data EndBarLine = EndBarLine

data Note = Note RestTiedPitch WholeNotesLastFor
    -- if LaterTied note presents at beginning of the Staff
    -- then error or assume Rest as the previous note
data RestTiedPitch = Rest | LaterTied | NormalPitch Pitch
data WholeNotesLastFor = WholeNotesLastFor PositiveRational
    -- WholeNotesLastFor = BeatsLastFor/wholeNoteBeats

