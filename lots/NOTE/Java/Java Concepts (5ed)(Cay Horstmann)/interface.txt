interface type vs class:
    ? All methods in an interface type are abstract
        they have a name, parameters, and a return type, 
        but they don't have an implementation.
    ? All methods in an interface type are automatically public.
    ? An interface type does not have instance fields.
        ADVANCED TOPIC 9.1:  Constants in Interfaces
             can (and should) omit the keywords "public static final"


    public interface Measurable
    {
        double getMeasure(); // omit "public"
        int EAST = 3; // omit "public static final"
    }

[implements] vs [extends]

    class ClassName implements Measurable
    {
        public double getMeasure()
        {
            Implementation
        }
        Additional methods and fields
    }


Using Interfaces for Callbacks
    Inner Class
        Methods of an inner class can access local variables from surrounding blocks and fields from surrounding classes.
        An inner class can access surrounding local variables only if they are declared as final.
    Anonymous Class/Object
        Interface x = new Interface() {
            // implement Interface
        };




compare and sort
    public class T implements Comparable<T>
    {
        . . .
        public int compareTo(T other)
        {
            if (value < other.value) return -3;
            if (value == other.value) return 0;
            return 4;
        }
        . . .
    }
    
    Arrays.sort(t_array);
    Collections.sort (t_arraylist);
    
    
    public class T_Comparator implements Comparator<T>
    {
        public int compare(T a, T b)
        {
            if (a.getValue() < b.getValue()) return -1;
            if (a.getValue() == b.getValue()) return 0;
            return 1;
        }
    }
    
    
    Arrays.sort(ts, new T_Comparator());


"for each" loop
    for (Type variable : iterable)
    
    public interface Iterable<E>
    {
        Iterator<E> iterator();
    }
    public interface Iterator<E>
    {
        boolean hasNext();
        E next();
        void remove();
    }



QUALITY TIP 16.1  Use Interface References to Manipulate Data Structures
    Set<String> names = new HashSet<String>();









