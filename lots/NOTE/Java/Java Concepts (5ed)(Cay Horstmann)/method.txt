
[polymorphism] instance methods are all virtual
    In Java, method calls are always determined by the type of the actual object, not the type of the object reference.
    ?? so we cannot call them in constructor except final methods??
    ?? what about static methods, instance fields??
        static mehtods and static/instance fields are not virtual
    
[abstract] pure virtual
    public abstract class T // T must be declared as abstract, since [abstract f]
    {
        public abstract void f();
    }

instance methods
    mutator method
        modifies the object on which it is invoked
    accessor method
        merely accesses information without making any modifications
    // The above classification relates only to the object on which the method is invoked.
    A side effect of a method is any externally observable data modification.
    You should minimize side effects that go beyond modification of the implicit parameter.
        implicit parameter - this
    
    ? Accessor methods with no changes to any explicit parametersno side effects. Example:getBalance.
    ? Mutator methods with no changes to any explicit parametersan acceptable side effect. Example: withdraw.
    ? Methods that change an explicit parametera side effect that should be avoided when possible. Example: transfer.
    ? Methods that change another object (such as System.out)a side effect that should be avoided. Example: printBalance.
    
    An immutable class has no mutator methods.
        immutable String
        public final class String { . . . }

static method or class method








