java.awt.Font
java.awt.GraphicsEnvironment

JButton b = new JButton("Hello World");
b.setFont(myFont);
myFont.getSize(); # -> int
myFont.getSize2D(); # -> float
myFont.getStyle(); # -> int????
myFont.getPSName(); # -> String # postscript name
    //Font deriveFont(int style)
    //Font deriveFont(float size)
    //Font deriveFont(int style, float size)

//Two fonts such as Helvetica Italic and Helvetica Bold have the same family name, Helvetica, whereas their font face names are Helvetica Bold and Helvetica Italic.
myFont.getFamily();     # family name   # Helvetica
myFont.getFontName();   # face name     # Helvetica Bold
myFont.getName();       # logical name???

=====================
Font(String name, int style, int size)
    GraphicsEnvironment.getAllFonts()
    GraphicsEnvironment.getAvailableFontFamilyNames()

static Font getFont(String nm, Font default_font)
static Font getFont(String nm) # -> Maybe Font
static Font decode(String str) # -> Font
    str regex = r"(?P<fontname>\w+)([- ](?P<style>\w+))?([- ](?P<pointsize>\d+))?"
        style is one of the four case-insensitive strings:
            "PLAIN", "BOLD", "BOLDITALIC", or "ITALIC"
        pointsize is a positive decimal integer representation of the point size

        The default size is 12 and the default style is PLAIN.
        invalid font name or null ==>> the family name "Dialog"
        valid font name in GraphicsEnvironment.getAvailableFontFamilyNames()
        new Font("Dialog", Font.PLAIN, 12);

    new Font("Arial", Font.BOLD, 18);
    Font.decode("Anonymous Pro PLAIN 24");
    getFamily()

static Font createFont(int fontFormat, File fontFile|InputStream fontStream)
                       throws FontFormatException, IOException

    fontFormat - the type of the Font
        TRUETYPE_FONT if TrueType resource
        TYPE1_FONT if Type 1 resource
    GraphicsEnvironment.registerFont(Font)


