OracleJDK vs OpenJDK

https://stackoverflow.com/questions/22358071/differences-between-oracle-jdk-and-openjdk

1. license
    OpenJDK is released under license GPL v2
    wherein Oracle JDK is licensed under Oracle Binary Code License Agreement.
2. source code
    # OpenJDK is the initial source of many other JDKs.
    #   others replace methods in OpenJDK for specific/speed-up/...
    #   others include new packages, binary codes...
    #
    src(OpenJDK) |<=| src(OracleJDK)

    Both OpenJDK and Oracle JDK are created and maintained currently by Oracle only.

    OpenJDK and Oracle JDK are implementations of the same Java specification passed the TCK (Java Technology Certification Kit).

    Most of the vendors of JDK are written on top of OpenJDK by doing a few tweaks to [mostly to replace licensed proprietary parts / replace with more high-performance items that only work on specific OS] components without breaking the TCK compatibility.

    Many vendors implemented the Java specification and got TCK passed. For example, IBM J9, Azul Zulu, Azul Zing, and Oracle JDK.

    Almost every existing JDK is derived from OpenJDK.

    As suggested by many, licensing is a change between JDKs.

    =================
    Q: What is the difference between the source code found in the OpenJDK repository, and the code you use to build the Oracle JDK?

    A: It is very close - our build process for Oracle JDK releases builds on OpenJDK 7 by adding just a couple of pieces, like the deployment code, which includes Oracle's implementation of the Java Plugin and Java WebStart, as well as some closed source third party components like a graphics rasterizer, some open source third party components, like Rhino, and a few bits and pieces here and there, like additional documentation or third party fonts. Moving forward, our intent is to open source all pieces of the Oracle JDK except those that we consider commercial features such as JRockit Mission Control (not yet available in Oracle JDK), and replace encumbered third party components with open source alternatives to achieve closer parity between the code bases.



    ========================

The Oracle and OpenJDK JVMs are the same and have the same GC features (as of the latest versions 10+). Prior to Oracle managing the OpenJDK JVM there were concrete differences that made that old Openjdk JVM almost unusable in many environments. The JVMs are now the same.

The JDKs which include the JVM as part of the Kit, differ by licensing, release and maintenance schedule, and the software libraries included in the JDK. Crucial differences to me also mean things that would make code not run if not present. Not only licensing.

    diff --brief -r openjdk oraclejdk

Crucially the following files are missing in addition to a bunch of others on the linux JDK (So if you 'claimed' that code didn't work on OpenJDK and did so on OracleJDK while you were using javafx then you were correct):

    Only in jdk-10.0.1/bin: javapackager
    Only in jdk-10.0.1/bin: javaws
    Only in jdk-10.0.1/bin: jcontrol
    Only in jdk-10.0.1/bin: jmc
    Only in jdk-10.0.1/bin: jweblauncher
    Only in jdk-10.0.1/lib: ant-javafx.jar
    Only in jdk-10.0.1/lib: deploy
    Only in jdk-10.0.1/lib: deploy.jar
    Only in jdk-10.0.1/lib: desktop
    Only in jdk-10.0.1/lib: fontconfig.bfc
    Only in jdk-10.0.1/lib: fontconfig.properties.src
    Only in jdk-10.0.1/lib: fontconfig.RedHat.6.bfc
    Only in jdk-10.0.1/lib: fontconfig.RedHat.6.properties.src
    Only in jdk-10.0.1/lib: fontconfig.SuSE.11.bfc
    Only in jdk-10.0.1/lib: fontconfig.SuSE.11.properties.src
    Only in jdk-10.0.1/lib: fonts
    Only in jdk-10.0.1/lib: javafx.properties
    Only in jdk-10.0.1/lib: javafx-swt.jar
    Only in jdk-10.0.1/lib: java.jnlp.jar
    Only in jdk-10.0.1/lib: javaws.jar
    Only in jdk-10.0.1/lib: jdk.deploy.jar
    Only in jdk-10.0.1/lib: jdk.javaws.jar
    Only in jdk-10.0.1/lib: jdk.plugin.jar
    Only in jdk-10.0.1/lib: jfr
    Only in jdk-10.0.1/lib: libavplugin-53.so
    Only in jdk-10.0.1/lib: libavplugin-54.so
    Only in jdk-10.0.1/lib: libavplugin-55.so
    Only in jdk-10.0.1/lib: libavplugin-56.so
    Only in jdk-10.0.1/lib: libavplugin-57.so
    Only in jdk-10.0.1/lib: libavplugin-ffmpeg-56.so
    Only in jdk-10.0.1/lib: libavplugin-ffmpeg-57.so
    Only in jdk-10.0.1/lib: libbci.so
    Only in jdk-10.0.1/lib: libcmm.so
    Only in jdk-10.0.1/lib: libdecora_sse.so
    Only in jdk-10.0.1/lib: libdeploy.so
    Only in jdk-10.0.1/lib: libfxplugins.so
    Only in jdk-10.0.1/lib: libglassgtk2.so
    Only in jdk-10.0.1/lib: libglassgtk3.so
    Only in jdk-10.0.1/lib: libglass.so
    Only in jdk-10.0.1/lib: libgstreamer-lite.so
    Only in jdk-10.0.1/lib: libjavafx_font_freetype.so
    Only in jdk-10.0.1/lib: libjavafx_font_pango.so
    Only in jdk-10.0.1/lib: libjavafx_font.so
    Only in jdk-10.0.1/lib: libjavafx_iio.so
    Only in jdk-10.0.1/lib: libjfxmedia.so
    Only in jdk-10.0.1/lib: libjfxwebkit.so
    Only in jdk-10.0.1/lib: libnpjp2.so
    Only in jdk-10.0.1/lib: libprism_common.so
    Only in jdk-10.0.1/lib: libprism_es2.so
    Only in jdk-10.0.1/lib: libprism_sw.so
    Only in jdk-10.0.1/lib: librm.so
    Only in jdk-10.0.1/lib: libt2k.so
    Only in jdk-10.0.1/lib: locale
    Only in jdk-10.0.1/lib: missioncontrol
    Only in jdk-10.0.1/lib: oblique-fonts
    Only in jdk-10.0.1/lib: plugin.jar
    Only in jdk-10.0.1/lib: plugin-legacy.jar
    Only in jdk-10.0.1/lib/security: blacklist
    Only in jdk-10.0.1/lib/security: public_suffix_list.dat
    Only in jdk-10.0.1/lib/security: trusted.libraries
    Only in openjdk-10.0.1: man`



=========================
A list of the few remaining cosmetic and packaging differences between Oracle JDK 11 and OpenJDK 11 can be found in this blog post:

https://blogs.oracle.com/java-platform-group/oracle-jdk-releases-for-java-11-and-later

In short:

    Oracle JDK 11 emits a warning when using the -XX:+UnlockCommercialFeatures option,
    it can be configured to provide usage log data to the “Advanced Management Console” tool,
    it has always required third party cryptographic providers to be signed by a known certificate,
    it will continue to include installers, branding and JRE packaging,
    while the javac --release command behaves slightly differently for the Java 9 and Java 10 targets, and
    the output of the java --version and java -fullversion commands will distinguish Oracle JDK builds from OpenJDK builds.
