[COQ tutorial] 1.5.2 Principle of proof irrelevance
    Even though in principle the proof term associated with a verified lemma corresponds to a defined value of the corresponding specification, such definitions can-not be unfolded in COQ: a lemma is considered an opaque definition. This conforms to the mathematical tradition of proof irrelevance: the proof of a logical proposition does not matter, and the mathematical justification of a logical development relies only on provability of the lemmas used in the formal proof.
    Conversely, ordinary mathematical definitions can be unfolded at will, they are transparent.

[Type Theory and Formal Proof -- An Introduction (2014)(Rob Nederpelt)][page 380] Further perspectives
    A crucial point of type theory is that giving proofs and introducing definitions is very much the same type of activity: when proving, one creates a ‘proof-term’ of a certain type, and then a name is introduced for that proof-term. This name is what is being referred to later when using the proved result. The specific situation in which a result is used is reflected by the instantiations of the parameter list. (A difference between defining a proof and defining a mathematical notion is that in the latter case one wants to be able to unfold the definition, whereas in the case of a proof, one hardly ever wants to do that.)



