

https://en.wikipedia.org/wiki/Conjugacy_class

###############
  *
    [a <- G]
    [{a} <= G.elements]
        g*a*g^(-1)
        centralizer
  *
    [S <= G.elements]
        # arbitrary subset of G
        # need not be subgroup of G
        # S = {a}
        #
        g*S*g^(-1)
        normalizer
        [g*S*g^(-1) == h*S*h^(-1)]
            <==> [S == g^(-1)*h*S*h^(-1)*g]
            <==> [S == g^(-1)*h*S*(g^(-1)*h)^(-1)]
            <==> [g^(-1)*h <- normalizer(G,S)]

        # when S is subgroup
        [conjugate subgroups are isomorphic]
        [isomorphic subgroups need not be conjugate]

  view as group action:
    [X is an arbitrary set]
        #group action
        phi :: G -> X -> X
        phi(g, x) = ???
        orbit(G, X, phi, x) <= X
            ~ conjugacy_class(G, x)
        stabilizer(G, X, phi, x) <= G
            ~ centralizer/normalizer(G, x)
  *
    [a <- G]
        phi(g, a) = g*a*g^(-1)
        orbit(G, G.elements, phi, a) ~ conjugacy_class(G, a)
        stabilizer(G, G.elements, phi, a) ~ centralizer(G, a)
  *
    [S <= G.elements]
        phi(g, S) = g*S*g^(-1)
        orbit(G, 2^G.elements, phi, S) ~ conjugacy_class(G, S)
        stabilizer(G, 2^G.elements, phi, S) ~ normalizer(G, S)

###############



def [conjugacy class]
    conjugacy_class(G, a) = {b | ?g<-G. b == g*a*g^(-1)}
         matrix similarity to GL[n](K)

    In mathematics, especially group theory, the elements of any group may be partitioned into conjugacy classes; members of the same conjugacy class share many properties, and study of conjugacy classes of non-abelian groups reveals many important features of their structure.
        For an abelian group, each conjugacy class is a set containing one element (singleton set).

def [class function]
    Functions that are constant for members of the same conjugacy class are called class functions.


def [center of group]
    center(G) = Z(G) =[def]=
        {a <- G | 1 == len conjugacy_class(G, a)}
        = {a <- G | @g <- G. g*a == a*g}
        = {a <- G | centralizer(G, a) == G}

    [1 <- center(G)]
    [len(center(G)) >= 1]
    [center(G) == G] <==> [G is abelian]

def [centralizer of element of group]
  [G is a group][a <- G]:
    centralizer(G, a) =[def]=
        {g <- G | g*a == a*g}

    [centralizer(G, a) is a subgroup of G]
    [1 <- center(G) <= centralizer(G, a) <= G]
    [a <- centralizer(G, a)]

    [centralizer(G, a) == G] <==> [a <- center(G)]
    [a not in center(G)] ==>> [center(G) < centralizer(G, a) < G]

    [?a <- G. center(G) == centralizer(G, a)] ==>> [center(G) == G]
    [center(G) < G] ==>> [@a <- G. center(G) < centralizer(G, a)]
    [G is non-abelian] ==>> [@a <- G. center(G) < centralizer(G, a)]

    [Card(conjugacy_class(G, a)) == Card(G :/: centralizer(G, a))]
        # orbit-stabilizer theorem

[G is finite group]:
    def [conjugacy class equation]

    [len(conjugacy_class(G, a)) div len(G)]
    len(G)
        = SUM len(cls) {cls <- all conjugacy_class of G}
        = SUM let a = (arbitrary element of cls) in
                Card(G :/: centralizer(G,a))
            {cls <- all conjugacy_class of G}
        = len(center(G))
        + SUM let a = (arbitrary element of cls) in
                Card(G :/: centralizer(G,a))
            {cls <- all conjugacy_class of G | len(cls) >= 2}

def [finite p-group]:
    [p is prime]:
        [G is finite p-group] =[def]=
            [?k <- PInt. [len(G) == p^k]]

[G is finite p-group]:
    prove [p div len(center(G))]
        len(G)
            = len(center(G))
            + SUM let a = (arbitrary element of cls) in
                    Card(G :/: centralizer(G,a))
                {cls <- all conjugacy_class of G | len(cls) >= 2}
            = len(center(G)) + SUM p^k[i] {i} where 1 <= k[i] <= k-1
            = p^k
[G is group of order p^2][p is prime]:
    prove [G is abelian]
        [len(center(G)) >= 1]!
        [p div len(center(G))]!
        [len(center(G)) <- {p, p^2}]
        if [len(center(G)) == p]:
            [center(G) < G]
            [G is non-abelian]

            let b <- G \-\ center(G)
            [b not in G]

            # [G is non-abelian] ==>> [@a <- G. center(G) < centralizer(G, a)]
            [center(G) < centralizer(G, b)]
            [len(centralizer(G,b)) > p]
            [len(centralizer(G,b)) == p^2]
            [centralizer(G,b) == G]
            [b <- center(G)]
            [b not in G]!
            _L # impossible
        else:
            [len(center(G)) != p]
            [len(center(G)) == p^2]
            [center(G) == G]
            [G is abelian]


conjugacy of general subsets
    # > conjugacy of subgroups
conjugacy as group action



