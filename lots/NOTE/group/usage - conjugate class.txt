


conjugate class

[G is a group][g <- G]
    def conjugate_class_of(G, g) = [=g=] = {x*g*x^-1 | x <- G}

    [H <| G] ==>> [[=g=] /-\ H <- {[=g=], {}}]
    [X <= G.elements]
        [min_normal_subgroup_that_contains X
            == /-\~ H {H <| G | X <= H.elements}
            == lambda: do
                H := X\-/{1}
                while True:
                    H' := \-/~ [=g=] {g <- H}
                    if H' == H: break
                    H := H'
                return H
        ]


