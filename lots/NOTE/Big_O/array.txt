


some bad ideas:
    len(array) <= MAX_ARRAY_SIZE <= MAX_MEMORY_SIZE
    log2(len(array)) <= bit_size_of(POINTER)

array may be a bit_array or array_not_in_memory or virtual_array!!
    so, bucket_sort = O(n+upper_bound)*??? + O(upper_bound)*array_op
        =[maybe]= O(n+upper_bound)*??? + O(upper_bound*log(upper_bound))*basic_op
            if array_get depend on index size
            array here is like a sorted tree instead of array

* nonvirtual array
    # each element has a unique physic position
    * pointer array
        # each element has a unique byte pointer
        len(array) <= MAX_MEMORY_SIZE
    * array in memory
        # e.g. bit_array
        len(array) <= MAX_MEMORY_SIZE * bit_size_of(BYTE)
    * array in file
        len(array) <= MAX_FILE_SIZE * bit_size_of(BYTE)
    * array in file_system
        len(array) <= MAX_DISK_NUM * MAX_DISK_SIZE * bit_size_of(BYTE)
        # e.g. file names: "00000.data", "00001.data", ...
    * array in internet
        ...
* virtual array
    # usually, immutable
    # e.g.
    #   array_get i virtual_array = f(i) = i+44

