
r.e.
    union: | # by the method of Thompson on p.119 [+ determinization if needed]
    concat: .
    star: *
    
    complement: ~ re = ¦²* \ re 
        # 3.9 Regular Expressions with Complement and Intersection
        Algorithm 3.46(Construction of deterministic recognizer of complement)
        the original machine must be deterministic
    
    # via | and ~
    intersection: r & s = ~ (~r | ~s) # Product of Automata
    set difference : r \ s = r & ~s = ~(~r | s)

[page138]
    Fig. 3.24 Conversion methods between r.e. and finite automata deterministic and not
    Fig. 3.25 Correspondence between right-linear grammars and finite automata
    Fig. 3.26 Correspondence between regular expression and grammars



[page121] 3.8.2 Berry¨CSethi Method
    [local language] [locally testable language]
        def Ini/Fin/Dig for any language L:
            set of initials: Ini(L) = {a in ¦²*| a ¦²* & L != {}}
            set of finals: Fin(L) = {b in ¦²*| ¦²* b & L != {}}
            set of digrams/factors: Dig(L) = {ab in ¦²^2 | ¦²* ab ¦²* & L != {}}
    
        [local L] <==> [locally testable L] <==>
            L \ {¦Å} = {x | Ini({x}) <= Ini(L) && Fin({x}) <= Fin(L) && Dig({x}) <= Dig(L)}

    [local automata]
        A deterministic automaton A=(Q,¦²,¦Ä,q0,F) is local if all transitions labeled by the same symbol a¡Ê¦² enter the same state, 
            i.e., if any a¡Ê¦², s.t. |{¦Ä(q, a)|q¡ÊQ}|¡Ü1
        [normalized local automata] <==> local automata additionally satisfy conditions (3.2) and (3.3)
            The non-initial states correspond one-to-one to the terminals (3.2)
                i.e. |Q| = |¦²| + 1
            No arc enters the initial state (3.3)
