-- =^= : defined as
a semantics = a model = a implementation

[page 55]
    In this sense, semantics are the machine code of formal specification; they express what a specification does. This interpretation is reflected in the terminology that is often associated with semantics; a semantics is sometimes referred to as a model or even an implementation of a specification.
    It is important to note though that, semantics definemathematical models of the meaning of specifications and, thus, the meaning of specifications can be analysed.
x; y; stop | z; w; stop
    ==>> {"", x, z , xy , zw}
    all possible complete or partial executions of a system
    -- why not {xy, zw} i.e. all possible complete executions of a system?
    --     nontransformational (reactive) systems ==>> infinite long
    -- x;y;stop | x;stop === x;y;stop???? No
    -- x;(B | B') === x; B | x; B'???? No
    -- x; stop ||| y; stop === (x; y; stop) | (y; x; stop)???
    -- (x; y; stop) | (x; z; stop) === (i; x; y; stop) | (i; x; z; stop)???

-- formal specification -> semantic description
-- semantic_map :: formal_technique specification -> semantic_notation
[| |] :: ft -> sn
[| |tr] :: ft -> tr -- trace set
P:= (x; y; stop) | (z; w; stop)
    ==>>[| P |tr] = {"", x, z , xy , zw}




