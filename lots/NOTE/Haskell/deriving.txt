newtype N xx m yy a = N (m a)
    deriving (Monad, Eq) 

7.5. Extensions to the "deriving" mechanism
    -XDeriveDataTypeable
7.20. Generic programming
    -XDeriveGeneric
7.6.1.4. Default method signatures
    -XDefaultSignatures


------------------------------
7.5.2. Stand-alone deriving declarations
    data Foo a = Bar a | Baz String
        deriving (Eq)
    ==>>
    data Foo a = Bar a | Baz String
    -- deriving instance Eq a => Eq (Foo a)
    deriving instance Eq a => Eq (Foo [a])
    deriving instance Eq a => Eq (Foo (Maybe a))



7.5.3. Deriving clause for extra classes (Typeable, Data, etc)
    standard classes Eq, Ord, Enum, Ix, Bounded, Read, and Show
     -XDeriveDataTypeable ==>> Typeable, Data, etc

7.5.4. Generalised derived instances for newtypes
    -- class dictionary!!!
    -- 
