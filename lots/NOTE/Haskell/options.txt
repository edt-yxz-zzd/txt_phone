
e ../lots/NOTE/Haskell/options.txt



$ ghci
Prelude> :?
Prelude> :show imports
import Prelude -- implicit
Prelude> :browse Prelude
Prelude> :quit

ghci '--show-options' | grep GADT
ghci '--show-options' | grep Type
ghci '--show-options' | grep Kind
ghci '--show-options' | grep '^-X' | grep '^-XNo' -v
-XAllowAmbiguousTypes
-XAlternativeLayoutRule
-XAlternativeLayoutRuleTransitional
-XArrows
-XAutoDeriveTypeable
-XBangPatterns
-XBinaryLiterals
-XCApiFFI
-XCPP
-XCUSKs
-XConstrainedClassMethods
-XConstraintKinds
-XDataKinds
-XDatatypeContexts
-XDefaultSignatures
-XDeriveAnyClass
-XDeriveDataTypeable
-XDeriveFoldable
-XDeriveFunctor
-XDeriveGeneric
-XDeriveLift
-XDeriveTraversable
-XDerivingStrategies
-XDerivingVia
-XDisambiguateRecordFields
-XDoAndIfThenElse
-XBlockArguments
-XDoRec
-XDuplicateRecordFields
-XEmptyCase
-XEmptyDataDecls
-XEmptyDataDeriving
-XExistentialQuantification
-XExplicitForAll
-XExplicitNamespaces
-XExtendedDefaultRules
-XFlexibleContexts
-XFlexibleInstances
-XForeignFunctionInterface
-XFunctionalDependencies
-XGADTSyntax
-XGADTs
-XGHCForeignImportPrim
-XGeneralizedNewtypeDeriving
-XGeneralisedNewtypeDeriving
-XImplicitParams
-XImplicitPrelude
-XImportQualifiedPost
-XImpredicativeTypes
-XIncoherentInstances
-XTypeFamilyDependencies
-XInstanceSigs
-XApplicativeDo
-XInterruptibleFFI
-XJavaScriptFFI
-XKindSignatures
-XLambdaCase
-XLiberalTypeSynonyms
-XMagicHash
-XMonadComprehensions
-XMonadFailDesugaring
-XMonoLocalBinds
-XMonoPatBinds
-XMonomorphismRestriction
-XMultiParamTypeClasses
-XMultiWayIf
-XNumericUnderscores
-XNPlusKPatterns
-XNamedFieldPuns
-XNamedWildCards
-XNegativeLiterals
-XHexFloatLiterals
-XNullaryTypeClasses
-XNumDecimals
-XOverlappingInstances
-XOverloadedLabels
-XOverloadedLists
-XOverloadedStrings
-XPackageImports
-XParallelArrays
-XParallelListComp
-XPartialTypeSignatures
-XPatternGuards
-XPatternSignatures
-XPatternSynonyms
-XPolyKinds
-XPolymorphicComponents
-XQuantifiedConstraints
-XPostfixOperators
-XQuasiQuotes
-XRank2Types
-XRankNTypes
-XRebindableSyntax
-XRecordPuns
-XRecordWildCards
-XRecursiveDo
-XRelaxedLayout
-XRelaxedPolyRec
-XRoleAnnotations
-XScopedTypeVariables
-XStandaloneDeriving
-XStarIsType
-XStaticPointers
-XStrict
-XStrictData
-XTemplateHaskell
-XTemplateHaskellQuotes
-XStandaloneKindSignatures
-XTraditionalRecordSyntax
-XTransformListComp
-XTupleSections
-XTypeApplications
-XTypeInType
-XTypeFamilies
-XTypeOperators
-XTypeSynonymInstances
-XUnboxedTuples
-XUnboxedSums
-XUndecidableInstances
-XUndecidableSuperClasses
-XUnicodeSyntax
-XUnliftedFFITypes
-XUnliftedNewtypes
-XViewPatterns
-XHaskell98
-XHaskell2010
-XUnsafe
-XTrustworthy
-XSafe
-XGenerics


.+1,$s/-X\(\w*\)$/{-# LANGUAGE \1 #-}
{-# LANGUAGE AllowAmbiguousTypes #-}
{-# LANGUAGE AlternativeLayoutRule #-}
{-# LANGUAGE AlternativeLayoutRuleTransitional #-}
{-# LANGUAGE Arrows #-}
{-# LANGUAGE AutoDeriveTypeable #-}
{-# LANGUAGE BangPatterns #-}
{-# LANGUAGE BinaryLiterals #-}
{-# LANGUAGE CApiFFI #-}
{-# LANGUAGE CPP #-}
{-# LANGUAGE CUSKs #-}
{-# LANGUAGE ConstrainedClassMethods #-}
{-# LANGUAGE ConstraintKinds #-}
{-# LANGUAGE DataKinds #-}
{-# LANGUAGE DatatypeContexts #-}
{-# LANGUAGE DefaultSignatures #-}
{-# LANGUAGE DeriveAnyClass #-}
{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveFoldable #-}
{-# LANGUAGE DeriveFunctor #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DeriveLift #-}
{-# LANGUAGE DeriveTraversable #-}
{-# LANGUAGE DerivingStrategies #-}
{-# LANGUAGE DerivingVia #-}
{-# LANGUAGE DisambiguateRecordFields #-}
{-# LANGUAGE DoAndIfThenElse #-}
{-# LANGUAGE BlockArguments #-}
{-# LANGUAGE DoRec #-}
{-# LANGUAGE DuplicateRecordFields #-}
{-# LANGUAGE EmptyCase #-}
{-# LANGUAGE EmptyDataDecls #-}
{-# LANGUAGE EmptyDataDeriving #-}
{-# LANGUAGE ExistentialQuantification #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE ExplicitNamespaces #-}
{-# LANGUAGE ExtendedDefaultRules #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE ForeignFunctionInterface #-}
{-# LANGUAGE FunctionalDependencies #-}
{-# LANGUAGE GADTSyntax #-}
{-# LANGUAGE GADTs #-}
{-# LANGUAGE GHCForeignImportPrim #-}
{-# LANGUAGE GeneralizedNewtypeDeriving #-}
{-# LANGUAGE GeneralisedNewtypeDeriving #-}
{-# LANGUAGE ImplicitParams #-}
{-# LANGUAGE ImplicitPrelude #-}
{-# LANGUAGE ImportQualifiedPost #-}
{-# LANGUAGE ImpredicativeTypes #-}
{-# LANGUAGE IncoherentInstances #-}
{-# LANGUAGE TypeFamilyDependencies #-}
{-# LANGUAGE InstanceSigs #-}
{-# LANGUAGE ApplicativeDo #-}
{-# LANGUAGE InterruptibleFFI #-}
{-# LANGUAGE JavaScriptFFI #-}
{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE LiberalTypeSynonyms #-}
{-# LANGUAGE MagicHash #-}
{-# LANGUAGE MonadComprehensions #-}
{-# LANGUAGE MonadFailDesugaring #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MonoPatBinds #-}
{-# LANGUAGE MonomorphismRestriction #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE NumericUnderscores #-}
{-# LANGUAGE NPlusKPatterns #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE NamedWildCards #-}
{-# LANGUAGE NegativeLiterals #-}
{-# LANGUAGE HexFloatLiterals #-}
{-# LANGUAGE NullaryTypeClasses #-}
{-# LANGUAGE NumDecimals #-}
{-# LANGUAGE OverlappingInstances #-}
{-# LANGUAGE OverloadedLabels #-}
{-# LANGUAGE OverloadedLists #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE PackageImports #-}
{-# LANGUAGE ParallelArrays #-}
{-# LANGUAGE ParallelListComp #-}
{-# LANGUAGE PartialTypeSignatures #-}
{-# LANGUAGE PatternGuards #-}
{-# LANGUAGE PatternSignatures #-}
{-# LANGUAGE PatternSynonyms #-}
{-# LANGUAGE PolyKinds #-}
{-# LANGUAGE PolymorphicComponents #-}
{-# LANGUAGE QuantifiedConstraints #-}
{-# LANGUAGE PostfixOperators #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE Rank2Types #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RebindableSyntax #-}
{-# LANGUAGE RecordPuns #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE RecursiveDo #-}
{-# LANGUAGE RelaxedLayout #-}
{-# LANGUAGE RelaxedPolyRec #-}
{-# LANGUAGE RoleAnnotations #-}
{-# LANGUAGE ScopedTypeVariables #-}
{-# LANGUAGE StandaloneDeriving #-}
{-# LANGUAGE StarIsType #-}
{-# LANGUAGE StaticPointers #-}
{-# LANGUAGE Strict #-}
{-# LANGUAGE StrictData #-}
{-# LANGUAGE TemplateHaskell #-}
{-# LANGUAGE TemplateHaskellQuotes #-}
{-# LANGUAGE StandaloneKindSignatures #-}
{-# LANGUAGE TraditionalRecordSyntax #-}
{-# LANGUAGE TransformListComp #-}
{-# LANGUAGE TupleSections #-}
{-# LANGUAGE TypeApplications #-}
{-# LANGUAGE TypeInType #-}
{-# LANGUAGE TypeFamilies #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE TypeSynonymInstances #-}
{-# LANGUAGE UnboxedTuples #-}
{-# LANGUAGE UnboxedSums #-}
{-# LANGUAGE UndecidableInstances #-}
{-# LANGUAGE UndecidableSuperClasses #-}
{-# LANGUAGE UnicodeSyntax #-}
{-# LANGUAGE UnliftedFFITypes #-}
{-# LANGUAGE UnliftedNewtypes #-}
{-# LANGUAGE ViewPatterns #-}
{-# LANGUAGE Haskell98 #-}
{-# LANGUAGE Haskell2010 #-}
{-# LANGUAGE Unsafe #-}
{-# LANGUAGE Trustworthy #-}
{-# LANGUAGE Safe #-}
{-# LANGUAGE Generics #-}





