
e ../lots/NOTE/PTS/dependent_type-www.txt
dependent product type
  [@x:A -> B x]
dependent sum type
  [?x:A -> B x]

[[[
https://ncatlab.org/nlab/show/dependent+product+type
===
1. Idea
In dependent type theory, a dependent product type ∏x:AB(x), for a dependent type x:A⊢B(x):Type is the type of “dependently typed functions” assigning to each x:A an element of B(x).

In a model of the type theory in categorical semantics, this is a dependent product. In set theory, it is an element of an indexed product.

It includes function types as the special case when B is not dependent on A, product types as a special case when A is the type of Booleans, and dependent sequence types as a special case when A is the natural numbers type.
]]]
[[[
https://ncatlab.org/nlab/show/dependent+sum+type
===
1. Idea
In dependent type theory, what is traditionally called the dependent sum type (really: dependent coproduct) of a dependent type d:D⊢Cd:Type is the type whose terms are ordered pairs (d,c) with d:D and c:Cd — whence also called the dependent pair type.

In the categorical semantics of dependent type theory in fibration categories, the dependent sum corresponds to internal coproducts over an index type.

In the special case that Cd=C is independent of A this reduces to the product type D×C, while in the special case that D= Bool it reduces to a binary coproduct.

This notion is dual (in fact: adjoint) to the corresponding notion of dependent product type:
]]]

