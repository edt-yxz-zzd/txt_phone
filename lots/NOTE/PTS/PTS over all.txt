
PTS_term = PTS_head lambda_term
PTS_head = PTS_spec PTS_Sorts_assigment
normalisation
PTS_spec should be verified at compile time.
    user should offer an instance of sorts from known(builtin or previous PTS_spec) normalising PTS system.

builtins PTS: ECC

\x:i. f x : o x : s === (\x:i. (f x : (o x : s)))

typing:
    (\x:i.body x:o x:s) : (\x:i.o x:s) : (\x:i.s)
        # x not in Free(s)
    [(i,s,r1) <- Rules] |- [(\x:i.o x) : r1]
    [(i,s,r2) <- Rules] |- [(\x:i.o x) : r2]
    look at (\x:i.o x). same term can have many types.
id =
    {Sorts = {s}, Axioms = {}, Rules = {(s,s,s)}}
    {s=0}
    (\a:s. \x:a. x) : @a:s. a -> a
id2 =
    {Sorts = {s}, Axioms = {}, Rules = {(s,s,s)}}
    {s=0}
    @a:s. a -> a
builtins sorts: -oo, +oo
