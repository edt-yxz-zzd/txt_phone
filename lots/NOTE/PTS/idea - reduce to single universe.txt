
idea - reduce to single universe

see: ECC
ECC has infinite predicative universes and only one impredicative universe.
I try to merge all these universes into single impredicative universe.



* = Prop # = Universe[-1]
def 'A = @R:*. (A->R)->R : *


terms:
    kind
    variable
    \x:A. M : @x:A. P x
    (x=N:A, M:P x) : ?x:A. P x
    M N
    fst M
    snd M

def T[old_type] = new_type
    example:
        T[@A:*. A->A : *]
            = @A:*. 'A->'A : *
            = @A:*. (@R:*.(A->R)->R)-> (@R:*. (A->R)->R)
        T[@A:N. A->A : N+1]
            = @A:*. 'A->'A : *
            = @A:*. (@R:*.(A->R)->R)-> (@R:*. (A->R)->R)
        transform inner variable
        not transform the whole type term
            i.e. not (@R:*. (T[old_type]->R)->R)
        T[@A:*. @P:A->*. @x:A. P x : *]
            = @A:*. @P:'A->*. @x:'A. P x : *
            = @A:*. @P:(@R:*.(A->R)->R)->*. @x:(@R:*.(A->R)->R). P x : *
        ?????????????????
    T[@x:A. P x] = @x:T[A]. T[P x]
    T[?x:A. P x] = ?x:T[A]. T[P x]
    T[variable] = 'variable # decl by (variable:kind)
    T[variable] = variable # decl by (variable:type)
    T[kind] = * = Prop
    T[(M N)] = (T[M] T[N])
    T[\x:A. M] = \x:T[A]. T[M]


def Tm[old_term] = new_term


