approximate 近似的，大约的，逼近的
trial division 试除

prime factorisation
largest perfect square factor
    https://socratic.org/questions/what-is-the-perfect-square-factor-of-80
    prime_factorisation_of 80 == 2^4*5
    largest_perfect_square_factor_of 80 == 4^2

perfect square = n^2

-ary
unary 一元的
binary 二元的，二进制
ternary 三元的，三进制
    trinary 三元的
quaternary 四元的，四进制
    quadruple ？四元组？
    quaternion 四元数，四个一组
quinary 五元的，五进制
    quintuple ？五元组？
senary 六进制
    sixtuple
septinary 七进制
octonary 八进制
    octal
novenary 九进制
denary 十进制
    decimal
    decade
undecimal 十一进制
duodecimal 十二进制
quaterdenary 十四进制
quindenary 十五进制
hexadecimal 十六进制
    sexadecimal
septendecimal 十七进制
octodenary 十八进制
novendenary 十九进制

monad [哲]单子，单孢体，单细胞生物，[化]一价元素/根/原子
monoid 类群，[数]独异点






[[
Floating point arithmetic and stability
Machine precision:
  * machine epsilon:eM =[def]= min{x <- all_floating_point | [x>1]} -1.0 = radix**(1-precision) = (radix-1)/((radix-1)*radix**(precision-1))[#1至radix之间所有浮点数的间隔#] = (1-1/radix)/((radix-1)*radix**(precision-1))*radix[#1/radix至1之间所有浮点数的间隔的radix倍#]
  * roundoff unit:u =[def]= eM/2 #the most useful quantity in error analysis.
rounding
stability and conditioning
perturbation
We concentrate on designing backward stable algorithms!
  bug?:乘法怎么可能是『backward stable algorithm』？
输入数据的误差，算法的稳定性，问题本身的敏感性
perturbation n. 微扰
  perturb vt. 扰乱
precision n. 精度
accuracy n. 精确度/准确度
mantissa n. 尾数，定点小数部分
significand n. 有效位数
exponent n. 指数/幂
radix/base n. 基数/根数/底
]]

