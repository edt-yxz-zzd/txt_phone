

what are other document formats?
    reStructuredText

vim script for "tree text" file??



TopMostSubclass
    def min(self:TopMostSubclass, other:TopMostSubclass) -> TopMostSubclass:
        if self < other: return self
        return other
    @classmethod
    @should_be_overrided
    def factory(cls, *args) -> TopMostSubclass:
        # this will force every subclass to override factory
        # unless some subclass implement it by call other factory.
        pass




reivew: ERROR not covariant!!!

    covariant
    # output list
    let List[-T] = List[BoundedStrictAny[T,Top]]

    # inout list
    let List[T] = List[BoundedStrictAny[T,T]]

    # input list
    let List[+T] = List[BoundedStrictAny[Bottom, T]]


    IO = Callable[[?<=I], ?>=O]
    IO = Callable[[BoundedStrictAny[Bottom,I]], BoundedStrictAny[O,Top]]
    IO = Callable[[covariant(I)], cotravariant(O)]
    class F(Generic[I,O]):
        def __init__(self, f : Callable[[I], O])->None:
            self.f : IO = f
        def __call__(self, i:I)->O:
            return self.f(i)
        def set(self, f : IO)->None:
            self.f = f



