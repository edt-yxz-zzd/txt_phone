
we can not:
    def foldl(op::T->T->T, start::T, ls::iter<T>):
        r = start
        for x in ls:
            r = op(r, x)
        return r
        
    def sum(iter<T> ls):
        return foldl(T::(+), T::zero, ls)
    def product(iter<T> ls):
        return foldl(T::(*), T::one, ls)
    def min(iter<T> ls):
        return foldl(min2, T::inf, ls)
    def gcd(iter<T> ls):
        return foldl(gcd2, T::zero, ls)





