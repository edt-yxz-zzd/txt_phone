everything ::= function/class/ type/concept/set /scoped/macro/namespace/module/package

    set ::= union of type of concept
    type ::= concrete type/template
    concept ::= interface/contract/constrain/rule/law/property/virtual-asif-data-member of type/template // like haskell::typeclass

everything should have input(for customize; though we can previde default ones)/output(as contract)
everything should be pure(no internal refer to external global things, no non-determined behaviour)

top import + local hidden
    this layer name (not visible by sublayer)


