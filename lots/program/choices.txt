Majority (votes) doesn't matter.

conceptual correctness // do what the name means. no more assumptions & guarantees, no less.
stability // portable, modified less, preditable
elegance  // simplicity, bugless, more readable




conceptual correctness:
    is_prime(n) vs is_probprime(n)   // GiNaC::numeric::is_prime, PARI/GP::isprime, GNU MP::isprime
    free(const void*) vs free(void*) // whether 'free' 'is a' 'modify'?
    for_each //  why 'in order'?
    pointer in C vs in C++ // past the end of an object?
    exception on failing to construct an object // to be or not to be
    isdigit(c): return c == '0' or c == '1' or... // very trivial and ugly
    '^1?$|^(11+?)\1+$'  // correct but not elegant
    sort // non-stable: heap-sort
    
stability:
    charge(n): if (! is_normal(n)){...} else if (0 == n){NULL;} else if (0 < n){...} else if (0 > n){...} else {...}
        // less communication 
        //    require less: How Not to Program in C++: Program 13 // He got a bill for $0.00.
        //    response less: Linux and the Unix Philosophy: 7.5 Silence is golden 

    recursion: base cases first; avoid stack overflow; flooding
    float: compare, sum, product, invert...
        // 


elegance:



